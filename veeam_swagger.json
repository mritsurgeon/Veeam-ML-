{
  "openapi": "3.0.1",
  "info": {
    "title": "Veeam Backup & Replication REST API",
    "description": "This document lists paths (endpoints) of the Veeam Backup & Replication REST API and operations that you can perform by sending HTTP requests to the paths.<p>Requests can contain parameters in their path, query and header. POST and PUT requests can include a request body with resource payload. In response, you receive a conventional HTTP response code, HTTP response header and an optional response body schema that contains a result model.<p> Some request and response bodies refer to reusable schema objects that are defined in the `schemas` section of the REST API specification. Schemas, in turn, may inherit a part of their properties by referring to other schemas, and be polymorphic by referring to multiple alternate schemas.",
    "version": "1.2-rev1",
    "x-veeam-prev-version": "1.2-rev0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "Login",
      "description": "The authorization process involves obtaining an access token and a refresh token. For details on the authorization process and security settings, see [Authorization and Security](https://helpcenter.veeam.com/docs/backup/vbr_rest/authorization_security.html?ver=120).<SecurityDefinitions />"
    },
    {
      "name": "License",
      "description": "The License section defines paths and operations for installing and managing licenses on the backup server."
    },
    {
      "name": "Credentials",
      "description": "The Credentials section defines paths and operations for managing credentials records that are added to the backup server."
    },
    {
      "name": "Encryption",
      "description": "The Encryption section defines paths and operations for managing KMS servers and passwords that are used for data encryption."
    },
    {
      "name": "Service",
      "description": "The Service section defines paths and operations for retrieving information about the backup server where the REST API service is running."
    },
    {
      "name": "Services",
      "description": "The Services section defines a path and operation for retrieving information about associated backend services. You may need to connect to these services for integration with Veeam Backup & Replication."
    },
    {
      "name": "Connection",
      "description": "The Connection section defines a path and operation for retrieving a TLS certificate or SSH fingerprint used to establish a secure connection between the backup server and the specified server."
    },
    {
      "name": "Cloud Browser",
      "description": "Cloud browser allows you to retrieve information about cloud compute and storage resources. Cloud browser helps you map a cloud folder with an object storage repository."
    },
    {
      "name": "Inventory Browser",
      "description": "Inventory browser allows you to perform the following operations&#58; <ul><li>Retrieve virtualization servers and their virtual infrastructure objects (data centers, clusters, hosts, resource pools, vApps, VMs and so on). In this version, you can browse VMware vSphere and VMware Cloud Director objects only.</li> <li>Manage Microsoft Entra ID tenants</li></ul>"
    },
    {
      "name": "Traffic Rules",
      "description": "The Traffic Rules section defines paths and operations for retrieving and editing information about network traffic rules that are configured on the backup server."
    },
    {
      "name": "General Options",
      "description": "The General Options section defines paths and operations for retrieving and editing general settings of Veeam Backup & Replication.<p> <div class=\"note\"><strong>NOTE</strong><br>In this REST API version, you can configure SIEM integration and notification settings only.</div>"
    },
    {
      "name": "Security",
      "description": "The Security section defines paths and operations for managing Security & Compliance Analyzer and getting four-eyes authorization events."
    },
    {
      "name": "Malware Detection",
      "description": "The Malware Detection section defines paths and operations for managing malware events and scanning backups with antivirus software or YARA rules."
    },
    {
      "name": "Configuration Backup",
      "description": "The Configuration Backup section defines paths and operations for managing backup of the configuration database that Veeam Backup & Replication uses."
    },
    {
      "name": "Managed Servers",
      "description": "The Managed Servers section defines paths and operations for managing servers.<p> <div class=\"note\"><strong>NOTE</strong><br>In this version, the REST API supports the following server types&#58; *VMware vSphere*, *Linux* and *Windows*.</div>"
    },
    {
      "name": "Repositories",
      "description": "The Repositories section defines paths and operations for managing backup repositories.<p> <div class=\"note\"><strong>NOTE</strong><br>In this version, the REST API supports the following storage types&#58; direct attached storages (Microsoft Windows and Linux servers), network attached storages (SMB and NFS shares) and object storages. The following repository types are not supported in the current version&#58; `DDBoost`, `ExaGrid`, `HPStoreOnceIntegration`, `Quantum`, `Infinidat`, `Fujitsu` and `ExtendableRepository`.<p>For details on how to add an object storage repository, see [Adding Object Storage Repository](https://helpcenter.veeam.com/docs/backup/vbr_rest/object_storage.html?ver=120).</p></div>"
    },
    {
      "name": "Proxies",
      "description": "The Proxies section defines paths and operations for managing backup proxies.<p><div class=\"note\"><strong>NOTE</strong><br>In this version, the REST API supports VMware backup proxies only.</div>"
    },
    {
      "name": "WAN Accelerators",
      "description": "The WAN Accelerators section defines paths and operations for managing WAN accelerators."
    },
    {
      "name": "Jobs",
      "description": "The Jobs section defines paths and operations for managing jobs that are coordinated by the backup server.<p> <div class=\"note\"><strong>NOTE</strong><br>In this version, the REST API supports the following job types&#58;<ul> <li>`Backup` — VMware vSphere backup jobs</li> <li>`vSphereReplica` — VMware vSphere replication jobs</li> <li>`CloudDirectorBackup` — VMware Cloud Director backup jobs</li> <li>`EntraIDTenantBackup` — Microsoft Entra ID tenant backup jobs<br>Note that to back up Microsoft Entra ID conditional access policies, add the following registry key value&#58;</br> `New-ItemProperty -Path \"HKLM:SOFTWARE\\Veeam\\Veeam Backup and Replication\" -Name \"EntraIdBackupSupportsConditionalAccessPolicyRestore\" -Value \"1\" -PropertyType DWORD -Force` </li> <li>`EntraIDAuditLogBackup` — Microsoft Entra ID audit log backup jobs</li></ul><p>VMware vSphere jobs can process inventory objects of the following types&#58; `VirtualMachine`, `vCenterServer`, `Datacenter`, `Cluster`, `Host`, `ResourcePool`, `Folder`, `Template`, `Tag`, `Datastore` and `DatastoreCluster`. Objects with tags combination (or `Multitag`) are not supported.</p></div>"
    },
    {
      "name": "Backups",
      "description": "The Backups section defines paths and operations for managing backups that are created on or imported to the backup server."
    },
    {
      "name": "Backup Objects",
      "description": "The Backup Objects section defines paths and operations for managing backup objects — VMs and vApps that are included in backups created by the backup server. <p>Types of backup objects differ depending on the backup job platform:<ul> <li>Backups of VMware vSphere jobs contain VMs only.</li> <li>Backups of VMware Cloud Director jobs contain VMs and vApps.</li></ul></p>"
    },
    {
      "name": "Restore Points",
      "description": "The Restore Points section defines paths and operations for retrieving restore points created on the backup server and backed up disks from the restore points."
    },
    {
      "name": "Backup Browsers",
      "description": "Backup browser allows you to perform the following operations&#58;<ul><li>Browse the file system, compare files and folders, and perform file restore.</li> <li>Browse Microsoft Entra ID tenant backups, compare Microsoft Entra ID items, and restore entire items or their properties.</li> <li>Browse the Microsoft Entra ID log files, compare files and folders, and restore Microsoft Entra ID logs.</li></ul>"
    },
    {
      "name": "Restore",
      "description": "The Restore section defines paths and operations for performing restore.<p> <div class=\"note\"><strong>NOTE</strong><br>In this version, the REST API supports the following recovery operations:<ul> <li>Instant Recovery of a VMware vSphere VM to VMware vSphere</li> <li>Entire VM restore of a VMware vSphere VM to VMware vSphere</li> <li>Entire VM restore of a VMware Cloud Director VM to VMware Cloud Director</li> <li>Restore of disks that will be registered as First Class Disks (FCD) — a type of virtual disks that can be managed independent of any VM</li><li>File restore from a backup or replica of a Microsoft Windows or Linux machine</li><li>Microsoft Entra ID item restore</li> <li>Microsoft Entra ID audit log restore</li></ul></div>"
    },
    {
      "name": "Data Integration API",
      "description": "The Data Integration API section defines paths and operations for publishing disks from backups and snapshot replicas."
    },
    {
      "name": "Tasks",
      "description": "The Tasks section defines paths and operations for managing tasks that are used to perform runtime operations (file restore and rescan of inventory objects)."
    },
    {
      "name": "Replicas",
      "description": "The Replicas section defines paths and operations for managing snapshot replicas."
    },
    {
      "name": "Replica Restore Points",
      "description": "The Replica Restore Points section defines paths and operations for managing restore points of snapshot replicas."
    },
    {
      "name": "Failover",
      "description": "The Failover section defines paths and operations for managing failover."
    },
    {
      "name": "Failback",
      "description": "The Failback section defines paths and operations for managing failback."
    },
    {
      "name": "Sessions",
      "description": "The Sessions section defines paths and operations for managing sessions (except [automation sessions](#tag/Automation/operation/GetAllAutomationSessions)) and task sessions performed on the backup server."
    },
    {
      "name": "Agents",
      "description": "The Agents section defines paths and operations for obtaining protected computers and managing recovery tokens used for bare metal recovery."
    },
    {
      "name": "Automation",
      "description": "The Automation section defines paths and operations for granular import and export of objects available in the REST API. It can be useful, for example, if you set up the backup infrastructure using JSON specification or migrate the infrastructure to another backup server. For details, see [Mass Deployment](https://helpcenter.veeam.com/docs/backup/vbr_rest/automation.html?ver=120)."
    }
  ],
  "paths": {
    "/api/v1/serverTime": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Backup Server Time",
        "description": "The HTTP GET request to the `/api/v1/serverTime` path allows you to get current date and time on the backup server.<p>**Available to**&#58; Anyone.</p>",
        "operationId": "GetServerTime",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerTimeModel"
                },
                "examples": {
                  "ServerTimeModelExample": {
                    "$ref": "#/components/examples/ServerTimeModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": []
      }
    },
    "/api/v1/serverCertificate": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get Backup Server Certificate",
        "description": "The HTTP GET request to the `/api/v1/serverCertificate` path allows you to get a certificate of the backup server.<p>**Available to**&#58; Anyone.</p>",
        "operationId": "GetServerCertificate",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateModel"
                },
                "examples": {
                  "CertificateModelExample": {
                    "$ref": "#/components/examples/CertificateModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": []
      }
    },
    "/api/v1/serverInfo": {
      "get": {
        "tags": [
          "Service"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewServices"
          ]
        },
        "summary": "Get Backup Server Information",
        "description": "The HTTP GET request to the `/api/v1/serverInfo` path allows you to get Veeam Backup & Replication installation ID, backup server name (or IP address), build number and cumulative patches installed on the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetServerInfo",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerInfoModel"
                },
                "examples": {
                  "ServerInfoModelExample": {
                    "$ref": "#/components/examples/ServerInfoModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewServices"
          ]
        },
        "summary": "Get Associated Services",
        "description": "The HTTP GET request to the `/api/v1/services` path allows you to get associated services for integration with Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetAllServices",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of services to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ServicesFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of services to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ServicesFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts services by one of the service parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EServicesFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ServicesFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts services in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ServicesFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters services by the `nameFilter` pattern. The pattern can match any service parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ServicesFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesResult"
                },
                "examples": {
                  "ServicesResultExample": {
                    "$ref": "#/components/examples/ServicesResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/install": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "InstallLicense"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Install License",
        "description": "The HTTP POST request to the `/api/v1/license/install` path allows you to install a license on the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "InstallLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseInstallationSpec"
              },
              "examples": {
                "LicenseInstallationExample": {
                  "$ref": "#/components/examples/LicenseInstallationExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstalledLicenseModel"
                },
                "examples": {
                  "InstalledLicenseModelExample": {
                    "$ref": "#/components/examples/InstalledLicenseModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license": {
      "get": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetInstalledLicense"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Installed License",
        "description": "The HTTP GET request to the `/api/v1/license` path allows you to get the installed license on the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetInstalledLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstalledLicenseModel"
                },
                "examples": {
                  "InstalledLicenseModelExample": {
                    "$ref": "#/components/examples/InstalledLicenseModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/remove": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RemoveLicense"
          ]
        },
        "summary": "Remove License",
        "description": "The HTTP POST request to the `/api/v1/license/remove` path allows you to remove a license from the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "RemoveLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseRemoveSpec"
              },
              "examples": {
                "SocketLicenseRemoveExample": {
                  "$ref": "#/components/examples/SocketLicenseRemoveExample"
                },
                "InstanceLicenseRemoveExample": {
                  "$ref": "#/components/examples/InstanceLicenseRemoveExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstalledLicenseModel"
                },
                "examples": {
                  "InstalledLicenseModelExample": {
                    "$ref": "#/components/examples/InstalledLicenseModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/createReport": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateLicenseReport"
          ]
        },
        "summary": "Create License Usage Report",
        "description": "The HTTP POST request to the `/api/v1/license/createReport` path allows you to create a license usage report for the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateLicenseReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseCreateReportSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "LicenseCreateReportExample": {
                    "$ref": "#/components/examples/LicenseCreateReportExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/renew": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RenewInstalledLicense"
          ]
        },
        "summary": "Renew Installed License",
        "description": "The HTTP POST request to the `/api/v1/license/renew` path allows you to renew the license on the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "RenewInstalledLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseRenewSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseRenewalModel"
                },
                "examples": {
                  "LicenseRenewalModelExample": {
                    "$ref": "#/components/examples/LicenseRenewalModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/sockets": {
      "get": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetLicensedSockets"
          ]
        },
        "summary": "Get Consumption of Socket Licenses",
        "description": "The HTTP GET request to the `/api/v1/license/sockets` path allows you to get information about the consumption of socket licenses on the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetLicensedSockets",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of workloads to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of workloads to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts workloads by one of the socket workload parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESocketWorkloadsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts workloads in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters workloads by the `nameFilter` pattern. The pattern can match any workload parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "hostNameFilter",
            "description": "Filters workloads by hostname.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "hostIdFilter",
            "description": "Filters workloads by host ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "socketsNumberFilter",
            "description": "Filters workloads by the number of sockets they use.",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "coresNumberFilter",
            "description": "Filters workloads by the number of CPU cores they use.",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters workloads by host type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESocketLicenseObjectType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SocketWorkloadsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocketLicenseWorkloadResult"
                },
                "examples": {
                  "SocketLicenseWorkloadResultExample": {
                    "$ref": "#/components/examples/SocketLicenseWorkloadResultExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/sockets/{hostId}/revoke": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RevokeSocketLicense"
          ]
        },
        "summary": "Revoke Socket License",
        "description": "The HTTP POST request to the `/api/v1/license/sockets/{hostId}/revoke` path allows you to revoke a socket license from the host with the specified `hostId`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "RevokeSocketLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "hostId",
            "description": "ID of the licensed host.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocketLicenseWorkloadModel"
                },
                "examples": {
                  "SocketLicenseWorkloadModelExample": {
                    "$ref": "#/components/examples/SocketLicenseWorkloadModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/instances": {
      "get": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetLicensedInstances"
          ]
        },
        "summary": "Get Instance Licenses Consumption",
        "description": "The HTTP GET request to the `/api/v1/license/instances` path allows you to get information about instance license consumption on the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetLicensedInstances",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of workloads to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of workloads to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts workloads by one of the workload parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EInstanceWorkloadsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts workloads in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters workloads by the `nameFilter` pattern.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "hostNameFilter",
            "description": "Filters workloads by hostname.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "usedInstancesNumberFilter",
            "description": "Filters workloads by the number of consumed instances.",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters workloads by workload type.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          },
          {
            "name": "instanceIdFilter",
            "description": "Filters workloads by instance ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstanceWorkloadsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceLicenseWorkloadResult"
                },
                "examples": {
                  "InstanceLicenseWorkloadResultExample": {
                    "$ref": "#/components/examples/InstanceLicenseWorkloadResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/instances/{instanceId}/assign": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "AssignInstanceLicense"
          ]
        },
        "summary": "Assign Instance License",
        "description": "The HTTP POST request to the `/api/v1/license/instances/{instanceId}/assign` path allows you to set the product edition for a standalone Veeam Agent with the specified `instanceId`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "AssignInstanceLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "instanceId",
            "description": "Instance ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceLicenseAssignmentSpec"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceLicenseWorkloadModel"
                },
                "examples": {
                  "InstanceLicenseWorkloadModelExample": {
                    "$ref": "#/components/examples/InstanceLicenseWorkloadModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/instances/{instanceId}/revoke": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RevokeInstanceLicense"
          ]
        },
        "summary": "Revoke Instance License",
        "description": "The HTTP POST request to the `/api/v1/license/instances/{instanceId}/revoke` path allows you to revoke an instance license from the workload that has the specified `instanceId`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "RevokeInstanceLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "instanceId",
            "description": "Instance ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceLicenseWorkloadModel"
                },
                "examples": {
                  "RevokeInstanceLicenseExample": {
                    "$ref": "#/components/examples/RevokeInstanceLicenseExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/capacity": {
      "get": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetLicensedCapacity"
          ]
        },
        "summary": "Get Capacity License Consumption",
        "description": "The HTTP GET request to the `/api/v1/license/capacity` path allows you to get information about the capacity license instance consumption by file shares and object storages. <p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetLicensedCapacity",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapacityLicenseWorkloadResult"
                },
                "examples": {
                  "CapacityLicenseWorkloadResultExample": {
                    "$ref": "#/components/examples/CapacityLicenseWorkloadResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/capacity/{instanceId}/revoke": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RevokeCapacityLicense"
          ]
        },
        "summary": "Revoke Capacity License From Unstructured Data Workload",
        "description": "The HTTP POST request to the `/api/v1/license/capacity/{instanceId}/revoke` path allows you to revoke a capacity instance with the specified `instanceId` from an unstructured data workload (file share or object storage). <p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "RevokeCapacityLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "instanceId",
            "description": "Instance ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapacityLicenseWorkloadModel"
                },
                "examples": {
                  "CapacityLicenseWorkloadModelExample": {
                    "$ref": "#/components/examples/CapacityLicenseWorkloadModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/update": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "InstallLicense"
          ]
        },
        "summary": "Update License",
        "description": "The HTTP POST request to the `/api/v1/license/update` path allows you to manually update your license.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateLicense",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseUpdateModel"
                },
                "examples": {
                  "LicenseUpdateModelExample": {
                    "$ref": "#/components/examples/LicenseUpdateModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/autoupdate": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "InstallLicense"
          ]
        },
        "summary": "Enable or Disable License Auto Update",
        "description": "The HTTP POST request to the `/api/v1/license/autoupdate` allows you to enable or disable automatic update of the installed license.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "SetAutoUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseAutoUpdateSpec"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstalledLicenseModel"
                },
                "examples": {
                  "InstalledLicenseModelExample": {
                    "$ref": "#/components/examples/InstalledLicenseModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/license/agentConsumption": {
      "post": {
        "tags": [
          "License"
        ],
        "x-veeam-authorize": {
          "claims": [
            "InstallLicense"
          ]
        },
        "summary": "Enable or Disable Instance Consumption for Unlicensed Agents",
        "description": "The HTTP POST request to the `/api/v1/license/agentConsumption` allows you to enable or disable unlicensed standalone agents to consume instances.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "SetAgentConsumption",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseAgentConsumptionSpec"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstalledLicenseModel"
                },
                "examples": {
                  "InstalledLicenseModelExample": {
                    "$ref": "#/components/examples/InstalledLicenseModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/securityAnalyzer/start": {
      "post": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartSecurityAnalyzer"
          ]
        },
        "summary": "Start Security & Compliance Analyzer",
        "description": "The HTTP POST request to the `/api/v1/securityAnalyzer/start` path allows you to start Security & Compliance Analyzer on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "StartSecurityAnalyzer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "201": {
            "description": "A `SecurityComplianceAnalyzer` session has been created to start Security & Compliance Analyzer. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/securityAnalyzer/lastRun": {
      "get": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetSecurityAnalyzerSession"
          ]
        },
        "summary": "Get Security & Compliance Analyzer Last Run",
        "description": "The HTTP GET request to the `/api/v1/securityAnalyzer/lastRun` path allows you to get the last session of Security & Compliance Analyzer.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetSecurityAnalyzerSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/securityAnalyzer/schedule": {
      "get": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetSecurityAnalyzerSchedule"
          ]
        },
        "summary": "Get Security & Compliance Analyzer Schedule",
        "description": "The HTTP GET request to the `/api/v1/securityAnalyzer/schedule` path allows you to get the Security & Compliance Analyzer schedule. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetSecurityAnalyzerSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityAnalyzerScheduleSettingsModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ModifySecurityAnalyzerSchedule"
          ]
        },
        "summary": "Modify Security & Compliance Analyzer Schedule",
        "description": "The HTTP PUT request to the `/api/v1/securityAnalyzer/schedule` path allows you to modify the Security & Compliance Analyzer schedule.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ModifySecurityAnalyzerSchedule",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityAnalyzerScheduleSettingsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityAnalyzerScheduleSettingsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/securityAnalyzer/bestPractices/resetAll": {
      "post": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ManageBestPracticeCompliance"
          ]
        },
        "summary": "Reset All Security & Compliance Analyzer Statuses",
        "description": "The HTTP POST request to the `/api/v1/securityAnalyzer/bestPractices/resetAll` path allows you to restore default compliance statuses for all Security & Compliance Analyzer best practices.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ResetAllBestPracticesComplianceStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BestPracticesComplianceResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/securityAnalyzer/bestPractices": {
      "get": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetBestPracticesComplianceResult"
          ]
        },
        "summary": "Get Security & Compliance Analyzer Results",
        "description": "The HTTP GET request to the `/api/v1/securityAnalyzer/bestPractices` path allows you to get best practices compliance result from the Backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetBestPracticesComplianceResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BestPracticesComplianceResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/securityAnalyzer/bestPractices/{id}/suppress": {
      "post": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ManageBestPracticeCompliance"
          ]
        },
        "summary": "Suppress Security & Compliance Analyzer Best Practice Status",
        "description": "The HTTP POST request to the `/api/v1/securityAnalyzer/bestPractices/{id}/suppress` path allows you to suppress a Security & Compliance Analyzer best practice compliance status that has the specified `id`. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "SuppressBestPracticesComplianceAlert",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "Best practice status ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BestPracticesSuppressRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BestPracticesComplianceModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/securityAnalyzer/bestPractices/{id}/reset": {
      "post": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ManageBestPracticeCompliance"
          ]
        },
        "summary": "Reset Security & Compliance Analyzer Status",
        "description": "The HTTP POST request to the `/api/v1/securityAnalyzer/bestPractices/{id}/reset` path allows you to reset the compliance status of a Security & Compliance Analyzer best practice that has the specified `id`. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ResetBestPracticesComplianceStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "Option ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BestPracticesComplianceModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/oauth2/token": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Get Access Token",
        "description": "The HTTP POST request to the `/api/oauth2/token` path allows you to get an access token and a refresh token.<p>**Available to**&#58; All user roles.</p>",
        "operationId": "CreateToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenLoginSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenModel"
                },
                "examples": {
                  "TokenModelExample": {
                    "$ref": "#/components/examples/TokenModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": []
      }
    },
    "/api/oauth2/authorization_code": {
      "post": {
        "deprecated": true,
        "tags": [
          "Login"
        ],
        "summary": "Get Authorization Code",
        "description": "The HTTP POST request to the `/api/oauth2/authorization_code` path allows you to get an authorization code that is used to obtain an access token. For more information on authorization process, see [Requesting Authorization](https://helpcenter.veeam.com/docs/backup/vbr_rest/requesting_authorization.html?ver=120). <p>**Available to**&#58; All user roles.</p>",
        "operationId": "CreateAuthorizationCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodeModel"
                },
                "example": {
                  "code": "AAEAAPcbxUSe0PNKAN+ilV5d4M5Fkv9ONjwRa4hfZYoemxIDA/IHbrjldYbfu1MemydXxGR4KYe5woGq09k+URepuiwUVsg3WbXC179ECOARXmfMH9dFI5H4aiXTotwPvuXLAC2AU4nFSUI2Kr2jlg4Vm8hTEPisaEiOolaVPA5CTzSEribGVaPYwvzyEIn7qy+lLnvGN2dm46W6Q0QJ2dpw1SCI2DZRCRIz+L8Nq804hNwDQJk9TCPJ61ztwF4FM+wO2ToNvMkL6aVay7STpeTRlkFf5i5dAm2qC0a1fcDdkkxt2lwv47t52I2tyZafpdLXs1eb+y7ZnuYQGbDI3epq5GAIAAAAK1kt2wvg2Qg="
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/oauth2/logout": {
      "post": {
        "tags": [
          "Login"
        ],
        "operationId": "Logout",
        "summary": "Log Out",
        "description": "The HTTP POST request to the `/api/oauth2/logout` path allows you to perform the logout operation. After you log out, your access and refresh tokens are expired.<p>**Available to**&#58; All user roles.</p>",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/trafficRules": {
      "get": {
        "tags": [
          "Traffic Rules"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewTrafficRules"
          ]
        },
        "summary": "Get Traffic Rules",
        "description": "The HTTP GET request to the `/api/v1/trafficRules` path allows you to get network traffic rules that control traffic transferred between backup infrastructure components.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetAllTrafficRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalNetworkTrafficRulesModel"
                },
                "examples": {
                  "GlobalNetworkTrafficRulesModelExample": {
                    "$ref": "#/components/examples/GlobalNetworkTrafficRulesModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Traffic Rules"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateTrafficRules"
          ]
        },
        "summary": "Edit Traffic Rules",
        "description": "The HTTP PUT request to the `/api/v1/trafficRules` path allows you to edit network traffic rules that are configured on the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateTrafficRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalNetworkTrafficRulesModel"
              },
              "examples": {
                "GlobalNetworkTrafficRulesModelExample": {
                  "$ref": "#/components/examples/GlobalNetworkTrafficRulesModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to edit the traffic rules. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalNetworkTrafficRulesModel"
                },
                "examples": {
                  "GlobalNetworkTrafficRulesModelExample": {
                    "$ref": "#/components/examples/GlobalNetworkTrafficRulesModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/generalOptions": {
      "get": {
        "tags": [
          "General Options"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewGeneralOptions"
          ]
        },
        "summary": "Get General Options",
        "description": "The HTTP GET request to the `/api/v1/generalOptions` path allows you to get Veeam Backup & Replication settings.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetGeneralOptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralOptionsModel"
                },
                "examples": {
                  "GeneralOptionsModelExample": {
                    "$ref": "#/components/examples/GeneralOptionsModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "General Options"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateGeneralOptions"
          ]
        },
        "summary": "Edit General Options",
        "description": "The HTTP PUT request to the `/api/v1/generalOptions` path allows you to edit Veeam Backup & Replication settings.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateGeneralOptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneralOptionsModel"
              },
              "examples": {
                "GeneralOptionsModelExample": {
                  "$ref": "#/components/examples/GeneralOptionsModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Settings have been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralOptionsModel"
                },
                "examples": {
                  "GeneralOptionsModelExample": {
                    "$ref": "#/components/examples/GeneralOptionsModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/configBackup": {
      "get": {
        "tags": [
          "Configuration Backup"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewConfigBackupOptions"
          ]
        },
        "summary": "Get Configuration Backup",
        "description": "The HTTP GET request to the `/api/v1/configBackup` path allows you to get configuration backup of the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetConfigBackupOptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigBackupModel"
                },
                "examples": {
                  "ConfigBackupModelExample": {
                    "$ref": "#/components/examples/ConfigBackupModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Configuration Backup"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateConfigBackupOptions"
          ]
        },
        "summary": "Edit Configuration Backup",
        "description": "The HTTP PUT request to the `/api/v1/configBackup` path allows you to edit configuration backup of the backup server.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateConfigBackupOptions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigBackupModel"
              },
              "examples": {
                "ConfigBackupModelExample": {
                  "$ref": "#/components/examples/ConfigBackupModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configuration backup settings have been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigBackupModel"
                },
                "examples": {
                  "ConfigBackupModelExample": {
                    "$ref": "#/components/examples/ConfigBackupModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/configBackup/backup": {
      "post": {
        "tags": [
          "Configuration Backup"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartConfigBackup"
          ]
        },
        "summary": "Start Configuration Backup",
        "description": "The HTTP POST request to the `/api/v1/configBackup` path allows you to start configuration backup.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator.</p>",
        "operationId": "StartConfigBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration backup has been started.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "ConfigurationBackupSessionModelExample": {
                    "$ref": "#/components/examples/ConfigurationBackupSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSessions"
          ]
        },
        "summary": "Get All Sessions",
        "description": "The HTTP GET request to the `/api/v1/sessions` path allows you to get an array of sessions performed on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of sessions to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of sessions to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts sessions by one of the session parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts sessions in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters sessions by the `nameFilter` pattern. The pattern can match any session parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns sessions that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns sessions that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "endedAfterFilter",
            "description": "Returns sessions that are finished after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "endedBeforeFilter",
            "description": "Returns sessions that are finished before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters sessions by session type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters sessions by session state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "resultFilter",
            "description": "Filters sessions by session result.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionResult"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "jobIdFilter",
            "description": "Filters sessions by job ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                },
                "examples": {
                  "SessionsResultExample": {
                    "$ref": "#/components/examples/SessionsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/sessions/{id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSessions"
          ]
        },
        "summary": "Get Session",
        "description": "The HTTP GET request to the `/api/v1/sessions/{id}` path allows you to get a session that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetSession",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the session.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "SessionModelExample": {
                    "$ref": "#/components/examples/SessionModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/sessions/{id}/logs": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSessions"
          ]
        },
        "summary": "Get Session Logs",
        "description": "The HTTP GET request to the `/api/v1/sessions/{id}/logs` path allows you to get an array of log records of a session that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetSessionLogs",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the session.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionLogResult"
                },
                "examples": {
                  "SessionLogResultExample": {
                    "$ref": "#/components/examples/SessionLogResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/sessions/{id}/stop": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StopSessions"
          ]
        },
        "summary": "Stop Session",
        "description": "The HTTP POST request to the `/api/v1/sessions/{id}/stop` path allows you to stop a session that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator.</p>",
        "operationId": "StopSession",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the session.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/sessions/{id}/taskSessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewTaskSessions"
          ]
        },
        "summary": "Get Task Sessions For Specified Session",
        "description": "The HTTP GET request to the `/api/v1/sessions/{id}/taskSessions` path allows you to get an array of task sessions performed on the backup server for the session that has the specified `id` .<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetSessionTaskSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Session ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSessionsResult"
                },
                "examples": {
                  "TaskSessionsFromSessionResultExample": {
                    "$ref": "#/components/examples/TaskSessionsFromSessionResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/taskSessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewTaskSessions"
          ]
        },
        "summary": "Get All Task Sessions",
        "description": "The HTTP GET request to the `/api/v1/taskSessions` path allows you to get an array of task sessions performed on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetAllTaskSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of task sessions to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of task sessions to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts task sessions by one of the task session parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ETaskSessionsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts task sessions in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters task sessions by the `nameFilter` pattern. The pattern can match any task session parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters task sessions by the task session type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ETaskSessionType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "sessionTypeFilter",
            "description": "Filters task sessions by session type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns task sessions that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns task sessions that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "endedAfterFilter",
            "description": "Returns task sessions that are finished after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "endedBeforeFilter",
            "description": "Returns task sessions that are finished before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters task sessions by task session state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "resultFilter",
            "description": "Filters task sessions by task session result.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionResult"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "scanTypeFilter",
            "description": "Filters task sessions by scan type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EAntivirusScanType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "scanResultFilter",
            "description": "Filters task sessions by scan result.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EAntivirusScanResult"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "scanStateFilter",
            "description": "Filters task sessions by scan state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EAntivirusScanState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          },
          {
            "name": "sessionIdFilter",
            "description": "Filters task sessions by session id.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskSessionsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSessionsResult"
                },
                "examples": {
                  "TaskSessionsResultExample": {
                    "$ref": "#/components/examples/TaskSessionsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/taskSessions/{id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewTaskSessions"
          ]
        },
        "summary": "Get Task Session",
        "description": "The HTTP GET request to the `/api/v1/taskSessions/{id}` path allows you to get a task session that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetTaskSession",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the task session.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSessionModel"
                },
                "examples": {
                  "TaskSessionModelExample": {
                    "$ref": "#/components/examples/TaskSessionModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/taskSessions/{id}/logs": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewTaskSessionLogs"
          ]
        },
        "summary": "Get Task Session Logs",
        "description": "The HTTP GET request to the `/api/v1/taskSessions/{id}/logs` path allows you to get logs for a task session that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetTaskSessionLogs",
        "parameters": [
          {
            "name": "id",
            "description": "Task session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionLogResult"
                },
                "examples": {
                  "TaskSessionLogResultExample": {
                    "$ref": "#/components/examples/TaskSessionLogResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/connectionCertificate": {
      "post": {
        "tags": [
          "Connection"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CheckCertificate"
          ]
        },
        "summary": "Request TLS Certificate or SSH Fingerprint",
        "description": "The HTTP POST request to the `/api/v1/connectionCertificate` path allows you to get a TLS certificate or SSH fingerprint of the specified host.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetConnectionCertificate",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostConnectionSpec"
              },
              "examples": {
                "CertificateHostConnectionSpecExample": {
                  "$ref": "#/components/examples/CertificateHostConnectionSpecExample"
                },
                "FingerprintHostConnectionSpecExample": {
                  "$ref": "#/components/examples/FingerprintHostConnectionSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionCertificateModel"
                },
                "examples": {
                  "ConnectionCertificateModelExample": {
                    "$ref": "#/components/examples/ConnectionCertificateModelExample"
                  },
                  "FingerprintConnectionCertificateModelExample": {
                    "$ref": "#/components/examples/FingerprintConnectionCertificateModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/vmware/hosts": {
      "get": {
        "deprecated": true,
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewViHierarchy"
          ]
        },
        "summary": "Get All VMware vSphere Servers",
        "description": "The HTTP GET request to the `/api/v1/inventory/vmware/hosts` path allows you to get an array of all VMware vSphere servers added to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetAllInventoryVmwareHosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of VMware vSphere servers to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ViRootFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of VMware vSphere servers to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ViRootFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts VMware vSphere servers by one of the VMware vSphere server parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EViRootFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ViRootFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts VMware vSphere servers in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ViRootFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters VMware vSphere servers by the `nameFilter` pattern. The pattern can match any VMware vSphere server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ViRootFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViRootsResult"
                },
                "examples": {
                  "ViRootsResultExample": {
                    "$ref": "#/components/examples/ViRootsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/vmware/hosts/{name}": {
      "get": {
        "deprecated": true,
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewViHierarchy"
          ]
        },
        "summary": "Get VMware vSphere Server Objects",
        "description": "The HTTP GET request to the `/api/v1/inventory/vmware/hosts/{name}` path allows you to get an array of virtual infrastructure objects of the VMware vSphere server that has the specified `name`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetVmwareHostObject",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "name",
            "description": "Name of the VMware vSphere server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "description": "Number of objects to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of objects to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts objects by one of the object parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvCentersInventoryFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts objects in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "objectIdFilter",
            "description": "Filters objects by object ID.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "hierarchyTypeFilter",
            "description": "Filters objects by hierarchy type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EHierarchyType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters objects by the `nameFilter` pattern. The pattern can match any object parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters objects by virtual infrastructure type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EVmwareInventoryType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          },
          {
            "name": "parentContainerNameFilter",
            "description": "Filters objects by name of the parent container.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VCenterInventoryFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VCenterInventoryResult"
                },
                "examples": {
                  "VCenterInventoryResultExample": {
                    "$ref": "#/components/examples/VCenterInventoryResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory": {
      "post": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCloudDirectorHierarchy"
          ]
        },
        "summary": "Get All Servers",
        "description": "The HTTP POST request to the `/api/v1/inventory` path allows you to get an array of all servers and hosts added to the backup infrastructure.<div class=\"tip\"><strong>TIP</strong> <br>To filter servers by type, use the following possible values&#58; *VCenterServer*, *Folder*, *Host*, *CloudDirectorServer*. For details, see request samples.</div><p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetAllInventoryHosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryBrowserFilters"
              },
              "examples": {
                "ServersInventoryBrowserFiltersExample": {
                  "$ref": "#/components/examples/ServersInventoryBrowserFiltersExample"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryBrowserResult"
                },
                "examples": {
                  "ServersInventoryBrowserResultExample": {
                    "$ref": "#/components/examples/ServersInventoryBrowserResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/{hostname}": {
      "post": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCloudDirectorHierarchy"
          ]
        },
        "summary": "Get Inventory Objects",
        "description": "The HTTP POST request to the `/api/v1/inventory/{hostname}` path allows you to get an array of inventory objects of a virtualization server (or host) that has the specified `hostname`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetInventoryObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "hostname",
            "description": "Name of the server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resetCache",
            "description": "If `true`, the cache will be reset for this request. Resetting the cache slows down request processing but it allows you to get up-to-date data.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InventoryBrowserRequestOptions"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryBrowserFilters"
              },
              "examples": {
                "SmallVmsInventoryBrowserFiltersExample": {
                  "$ref": "#/components/examples/SmallVmsInventoryBrowserFiltersExample"
                },
                "OrgVmsInventoryBrowserFiltersExample": {
                  "$ref": "#/components/examples/OrgVmsInventoryBrowserFiltersExample"
                },
                "NetworksInventoryBrowserFiltersExample": {
                  "$ref": "#/components/examples/NetworksInventoryBrowserFiltersExample"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryBrowserResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/{hostname}/rescan": {
      "post": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RescanHierarchy"
          ]
        },
        "summary": "Rescan Inventory Objects",
        "description": "The HTTP POST request to the `/api/v1/inventory/{hostname}/rescan` path allows you to rescan inventory objects of a virtualization server (or host) that has the specified `hostname`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "RescanInventoryObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "hostname",
            "description": "Name of the server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A `HierarchyRescan` task has been started. To check the progress, track the task `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/unstructuredDataServers": {
      "get": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewUnstructuredDataServers"
          ]
        },
        "summary": "Get All Unstructured Data Servers",
        "description": "The HTTP GET request to the `/api/v1/unstructuredDataServers` path allows you to get an array of unstructured data servers available on a backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetAllUnstructuredDataServers",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of unstructured data servers to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataServersFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of unstructured data servers to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataServersFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts unstructured data servers by one of the Unstructured Data Servers parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EUnstructuredDataServersFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataServersFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts unstructured data servers in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataServersFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters unstructured data servers by the `nameFilter` pattern. The pattern can match any unstructured data server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataServersFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnstructuredDataServersResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/unstructuredDataServers/{id}": {
      "get": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewUnstructuredDataServers"
          ]
        },
        "summary": "Get Unstructured Data Servers",
        "description": "The HTTP GET request to the `/api/v1/inventory/unstructuredDataServers/{id}` path allows you to get an unstructured data server that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetUnstructuredDataServers",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the unstructured data server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnstructuredDataServerModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/entraId/tenants": {
      "get": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewEntraIDTenants"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get All Microsoft Entra ID Tenants",
        "description": "The HTTP GET request to the `/api/v1/inventory/entraId/tenants` path allows you to get an array of all Microsoft Entra ID tenants added to the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetAllEntraIDTenants",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of Microsoft Entra ID tenants to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EntraIDTenantsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of Microsoft Entra ID tenants to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EntraIDTenantsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts Microsoft Entra ID tenants by one of the tenant parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EEntraIDTenantsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EntraIDTenantsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts Microsoft Entra ID tenants in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EntraIDTenantsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters Microsoft Entra ID tenants by the `nameFilter` pattern. The pattern can match any Microsoft Entra ID tenant parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EntraIDTenantsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIDTenantsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateEntraIDTenant"
          ]
        },
        "summary": "Add Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/inventory/entraId/tenants` path allows you to add a Microsoft Entra ID tenant to the backup server. <p>When adding a tenant, specify an existing Microsoft Entra ID app registration or let Veeam Backup & Replication create a new one. If you choose to create a new app registration, you must generate a verification code and register the new application before you start adding a tenant&#58; <ol><li>To generate a code, use the [Get Microsoft Entra ID Verification Code](#tag/Credentials/operation/RequestAppRegistrationByDeviceCode) request.</li> <li>To register the new application, use the [Register Microsoft Entra ID Application](#tag/Credentials/operation/FinishAppRegistrationByDeviceCode) request.</li></ol></p> <p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateEntraIDTenant",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIDTenantSpec"
              },
              "examples": {
                "EntraIDTenantSpecNewAppExample": {
                  "$ref": "#/components/examples/EntraIDTenantSpecNewAppExample"
                },
                "EntraIDTenantSpecExistingAppExample": {
                  "$ref": "#/components/examples/EntraIDTenantSpecExistingAppExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to add the tenant. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/inventory/entraId/tenants/{id}": {
      "get": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewEntraIDTenants"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Microsoft Entra ID Tenant",
        "description": "The HTTP GET request to the `/api/v1/entraId/tenants/{id}` path allows you to get a Microsoft Entra ID tenant that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetEntraIDTenants",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Microsoft Entra ID tenant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIDTenantModel"
                },
                "examples": {
                  "EntraIDTenantModelExample": {
                    "$ref": "#/components/examples/EntraIDTenantModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateEntraIDTenants"
          ]
        },
        "summary": "Edit Microsoft Entra ID Tenant",
        "description": "The HTTP PUT request to the `/api/v1/entraId/tenants/{id}` path allows you to edit a Microsoft Entra ID tenant that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateEntraIDTenants",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Microsoft Entra ID tenant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIDTenantModel"
              },
              "examples": {
                "EntraIDTenantModelExample": {
                  "$ref": "#/components/examples/EntraIDTenantModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Microsoft Entra ID tenant has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIDTenantModel"
                },
                "examples": {
                  "EntraIDTenantModelExample": {
                    "$ref": "#/components/examples/EntraIDTenantModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Inventory Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteEntraIDTenants"
          ]
        },
        "summary": "Remove Microsoft Entra ID Tenant",
        "description": "The HTTP DELETE request to the `/api/v1/entraId/tenants/{id}` path allows you to remove a Microsoft Entra ID tenant that has the specified `id` from the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteEntraIDTenants",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Microsoft Entra ID tenant.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "An `InfrastructureItemDeletion` session has been created to remove the tenant. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureItemDeletionSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureItemDeletionSessionModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/managedServers": {
      "get": {
        "tags": [
          "Managed Servers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewManagedServers"
          ]
        },
        "summary": "Get All Servers",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/managedServers` path allows you to get an array of all servers that are added to the backup infrastructure.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllManagedServers",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of servers to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ManagedServersFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of servers to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ManagedServersFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts servers by one of the server parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EManagedServersFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ManagedServersFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts servers in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ManagedServersFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters servers by the `nameFilter` pattern. The pattern can match any server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ManagedServersFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters servers by server type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EManagedServerType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ManagedServersFilters"
            }
          },
          {
            "name": "viTypeFilter",
            "description": "Filters servers by the type of VMware vSphere server.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EViHostType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ManagedServersFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedServersResult"
                },
                "examples": {
                  "ManagedServersResultExample": {
                    "$ref": "#/components/examples/ManagedServersResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Managed Servers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateManagedServers"
          ]
        },
        "summary": "Add Server",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/managedServers` path allows you to add a server to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateManagedServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedServerSpec"
              },
              "examples": {
                "WindowsManagedServerSpecExample": {
                  "$ref": "#/components/examples/WindowsManagedServerSpecExample"
                },
                "LinuxManagedServerSpecExample": {
                  "$ref": "#/components/examples/LinuxManagedServerSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to add the server. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/managedServers/cloudDirectorHosts": {
      "post": {
        "tags": [
          "Managed Servers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateManagedServers"
          ]
        },
        "summary": "Get vCenter Servers Attached to Cloud Director Server",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/managedServers/cloudDirectorHosts` path allows you to get an array of vCenter Servers attached to a specific VMware Cloud Director server.<p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ResolveCloudDirectorHosts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudDirectorHostDiscoverySpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudDirectorHostDiscoveryResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/managedServers/{id}": {
      "get": {
        "tags": [
          "Managed Servers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewManagedServers"
          ]
        },
        "summary": "Get Server",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to get a managed server that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetManagedServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the managed server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedServerModel"
                },
                "examples": {
                  "LinuxManagedServerModelExample": {
                    "$ref": "#/components/examples/LinuxManagedServerModelExample"
                  },
                  "WindowsManagedServerModelExample": {
                    "$ref": "#/components/examples/WindowsManagedServerModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Managed Servers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateManagedServers"
          ]
        },
        "summary": "Edit Server",
        "description": "The HTTP PUT request to the `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to edit a managed server that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateManagedServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the managed server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedServerModel"
              },
              "examples": {
                "LinuxManagedServerModelExample": {
                  "$ref": "#/components/examples/LinuxManagedServerModelExample"
                },
                "WindowsManagedServerModelExample": {
                  "$ref": "#/components/examples/WindowsManagedServerModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to edit the server. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Managed Servers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteManagedServers"
          ]
        },
        "summary": "Remove Server",
        "description": "The HTTP DELETE request to the `/api/v1/backupInfrastructure/managedServers/{id}` path allows you to remove a managed server that has the specified `id` from the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteManagedServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the managed server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "An `InfrastructureItemDeletion` session has been created to remove the server. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureItemDeletionSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureItemDeletionSessionModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/managedServers/{id}/updateSingleUseCredentials": {
      "post": {
        "tags": [
          "Managed Servers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateManagedServers"
          ]
        },
        "summary": "Change to Single-Use Credentials",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/managedServers/{id}/updateSingleUseCredentials` path allows you to change from persistent to single-use credentials used to access a Linux server that has the specified `id`. Single-use type of credentials is required if you want to use the Linux server as a hardened repository.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateSingleUseCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the managed server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinuxCredentialsSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to edit the server. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/repositories": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewRepositories"
          ]
        },
        "summary": "Get All Repositories",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories` path allows you to get an array of all backup repositories that are added to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllRepositories",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of repositories to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of repositories to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts repositories by one of the repository parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ERepositoryFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts repositories in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters repositories by repository type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ERepositoryType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "hostIdFilter",
            "description": "Filters repositories by ID of the backup server.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "pathFilter",
            "description": "Filters repositories by path to the folder where backup files are stored.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "vmbApiFilter",
            "description": "Filters repositories by VM Backup API parameters converted to the base64 string. To obtain the string, call the `GetApiProductInfoString` method of VM Backup API.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          },
          {
            "name": "vmbApiPlatform",
            "description": "Filters repositories by ID of a platform that you use to communicate with VM Backup API.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoriesFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoriesResult"
                },
                "examples": {
                  "RepositoriesResultExample": {
                    "$ref": "#/components/examples/RepositoriesResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateRepositories"
          ]
        },
        "summary": "Add Repository",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/repositories` path allows you to add a repository to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "overwriteOwner",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryBehaviorFilters"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositorySpec"
              },
              "examples": {
                "WinLocalRepositorySpecExample": {
                  "$ref": "#/components/examples/WinLocalRepositorySpecExample"
                },
                "LinuxLocalRepositorySpecExample": {
                  "$ref": "#/components/examples/LinuxLocalRepositorySpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to add the repository. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/repositories/rescan": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RescanRepositories"
          ]
        },
        "summary": "Rescan Repositories",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/repositories/rescan` path allows you to rescan an array of the specified repositories.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "RescanRepositories",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoriesRescanSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `ConfigurationResynchronize` session has been created to rescan the repositories. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/repositories/states": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewRepositories"
          ]
        },
        "summary": "Get All Repository States",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/states` path allows you to get an array of all repository states. The states include repository location and brief statistics, such as repository capacity, free and used space.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllRepositoriesStates",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of repository states to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of repository states to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts repository states by one of the state parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ERepositoryStatesFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts repository states in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "idFilter",
            "description": "Filters repository states by repository ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters repository states by the `nameFilter` pattern. The pattern can match any repository state parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters repository states by repository type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ERepositoryType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "capacityFilter",
            "description": "Filters repository states by repository capacity.",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "freeSpaceFilter",
            "description": "Filters repository states by repository free space.",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "usedSpaceFilter",
            "description": "Filters repository states by repository used space.",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          },
          {
            "name": "isOnlineFilter",
            "description": "Filters repository states by repository connection status.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/RepositoryStatesFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryStatesResult"
                },
                "examples": {
                  "RepositoryStatesResultExample": {
                    "$ref": "#/components/examples/RepositoryStatesResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/repositories/{id}": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewRepositories"
          ]
        },
        "summary": "Get Repository",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/repositories/{id}` path allows you to get a backup repository that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryModel"
                },
                "examples": {
                  "LinuxLocalRepositoryModelExample": {
                    "$ref": "#/components/examples/LinuxLocalRepositoryModelExample"
                  },
                  "WinLocalRepositoryModelExample": {
                    "$ref": "#/components/examples/WinLocalRepositoryModelExample"
                  },
                  "AzureBlobRepositoryModelExample": {
                    "$ref": "#/components/examples/AzureBlobRepositoryModelExample"
                  },
                  "GoogleCloudRepositoryModelExample": {
                    "$ref": "#/components/examples/GoogleCloudRepositoryModelExample"
                  },
                  "IBMCloudRepositoryModelExample": {
                    "$ref": "#/components/examples/IBMCloudRepositoryModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateRepositories"
          ]
        },
        "summary": "Edit Repository",
        "description": "The HTTP PUT request to the `/api/v1/backupInfrastructure/repositories/{id}` path allows you to edit a backup repository that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryModel"
              },
              "examples": {
                "LinuxLocalRepositoryModelExample": {
                  "$ref": "#/components/examples/LinuxLocalRepositoryModelExample"
                },
                "WinLocalRepositoryModelExample": {
                  "$ref": "#/components/examples/WinLocalRepositoryModelExample"
                },
                "AzureBlobRepositoryModelExample": {
                  "$ref": "#/components/examples/AzureBlobRepositoryModelExample"
                },
                "GoogleCloudRepositoryModelExample": {
                  "$ref": "#/components/examples/GoogleCloudRepositoryModelExample"
                },
                "IBMCloudRepositoryModelExample": {
                  "$ref": "#/components/examples/IBMCloudRepositoryModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to edit the repository. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteRepositories"
          ]
        },
        "summary": "Remove Repository",
        "description": "The HTTP DELETE request to the `/api/v1/backupInfrastructure/repositories/{id}` path allows you to remove a backup repository that has the specified `id` from the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "deleteBackups",
            "description": "If `true`, Veeam Backup & Replication will remove backup files.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/DeleteRepositoryFilters"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Repository has been removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/proxies": {
      "get": {
        "tags": [
          "Proxies"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewProxies"
          ]
        },
        "summary": "Get All Proxies",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/proxies` path allows you to get an array of all backup proxies that are added to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllProxies",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of proxies to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProxiesFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of proxies to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProxiesFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts proxies by one of the proxy parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EProxiesFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProxiesFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts proxies in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProxiesFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters proxies by the `nameFilter` pattern. The pattern can match any proxy parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProxiesFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters proxies by proxy type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EProxyType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProxiesFilters"
            }
          },
          {
            "name": "hostIdFilter",
            "description": "Filters proxies by ID of the backup server.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProxiesFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxiesResult"
                },
                "examples": {
                  "ProxiesResultExample": {
                    "$ref": "#/components/examples/ProxiesResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Proxies"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateProxies"
          ]
        },
        "summary": "Add Proxy",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/proxies` path allows you to add a proxy to the backup infrastructure.<p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateProxy",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxySpec"
              },
              "examples": {
                "ProxySpecExample": {
                  "$ref": "#/components/examples/ProxySpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to add the proxy. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/proxies/{id}": {
      "get": {
        "tags": [
          "Proxies"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewProxies"
          ]
        },
        "summary": "Get Proxy",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/proxies/{id}` path allows you to get a backup proxy that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetProxy",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup proxy.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxyModel"
                },
                "examples": {
                  "ProxyModelExample": {
                    "$ref": "#/components/examples/ProxyModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Proxies"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateProxies"
          ]
        },
        "summary": "Edit Proxy",
        "description": "The HTTP PUT request to the `/api/v1/backupInfrastructure/proxies/{id}` path allows you to edit a backup proxy that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateProxy",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup proxy.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxyModel"
              },
              "examples": {
                "ProxyModelExample": {
                  "$ref": "#/components/examples/ProxyModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to edit the proxy. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InfrastructureSessionModelExample": {
                    "$ref": "#/components/examples/InfrastructureSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Proxies"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteProxies"
          ]
        },
        "summary": "Remove Proxy",
        "description": "The HTTP DELETE request to the `/api/v1/backupInfrastructure/proxies/{id}` path allows you to remove a backup proxy that has the specified `id` from the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteProxy",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup proxy.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/scaleOutRepositories": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewScaleOutRepositories"
          ]
        },
        "summary": "Get All Scale-Out Backup Repositories",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories` path allows you to get an array of all scale-out backup repositories that are added to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllScaleOutRepositories",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of repositories to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ScaleOutRepositoriesFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of repositories to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ScaleOutRepositoriesFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts repositories by one of the repository parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EScaleOutRepositoryFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ScaleOutRepositoriesFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts repositories in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ScaleOutRepositoriesFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ScaleOutRepositoriesFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScaleOutRepositoriesResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateScaleOutRepositories"
          ]
        },
        "summary": "Add Scale-Out Backup Repository",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories` path allows you to add a scale-out backup repository to the backup infrastructure.<p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateScaleOutRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScaleOutRepositorySpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to add the repository. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/scaleOutRepositories/{id}": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewScaleOutRepositories"
          ]
        },
        "summary": "Get Scale-Out Backup Repository",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}` path allows you to get a scale-out backup repository that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetScaleOutRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the scale-out backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScaleOutRepositoryModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateScaleOutRepositories"
          ]
        },
        "summary": "Edit Scale-Out Backup Repository",
        "description": "The HTTP PUT request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}` path allows you to edit a scale-out backup repository that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateScaleOutRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the scale-out backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScaleOutRepositoryModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Infrastructure` session has been created to edit the scale-out backup repository. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteScaleOutRepositories"
          ]
        },
        "summary": "Remove Scale-Out Backup Repository",
        "description": "The HTTP DELETE request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}` path allows you to remove a scale-out backup repository that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteScaleOutRepository",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the scale-out backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "deleteBackups",
            "description": "If `true`, Veeam Backup & Replication will remove backup files.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/DeleteRepositoryFilters"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Scale-out backup repository has been removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableSealedMode": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "EnableRepositorySealedMode"
          ]
        },
        "summary": "Enable Sealed Mode",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableSealedMode` path allows you to enable the Sealed mode for specified extents of a scale-out backup repository that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "EnableScaleOutExtentSealedMode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the scale-out backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScaleOutExtentMaintenanceSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `RepositoryMaintenance` session has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableSealedMode": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DisableRepositorySealedMode"
          ]
        },
        "summary": "Disable Sealed Mode",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableSealedMode` path allows you to disable the Sealed mode for specified extents of a scale-out backup repository that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DisableScaleOutExtentSealedMode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the scale-out backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScaleOutExtentMaintenanceSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `RepositoryMaintenance` session has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "EnableRepositoryMaintenanceMode"
          ]
        },
        "summary": "Enable Maintenance Mode",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/enableMaintenanceMode` path allows you to enable the Maintenance mode for specified extents of a scale-out backup repository that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "EnableScaleOutExtentMaintenanceMode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the scale-out backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScaleOutExtentMaintenanceSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `RepositoryMaintenance` session has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DisableRepositoryMaintenanceMode"
          ]
        },
        "summary": "Disable Maintenance Mode",
        "description": "The HTTP POST request to the `/api/v1/backupInfrastructure/scaleOutRepositories/{id}/disableMaintenanceMode` path allows you to disable the Maintenance mode for specified extents of a scale-out backup repository that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DisableScaleOutExtentMaintenanceMode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the scale-out backup repository.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScaleOutExtentMaintenanceSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `RepositoryMaintenance` session has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewJobs"
          ]
        },
        "summary": "Get All Jobs",
        "description": "The HTTP GET request to the `/api/v1/jobs` path allows you to get an array of all jobs coordinated by the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of jobs to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of jobs to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts jobs by one of the job parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EJobFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts jobs in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters jobs by the `nameFilter` pattern. The pattern can match any job parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters jobs by job type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EJobType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobsResult"
                },
                "examples": {
                  "JobsResultExample": {
                    "$ref": "#/components/examples/JobsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateJobs"
          ]
        },
        "summary": "Create Job",
        "description": "The HTTP POST request to the `/api/v1/jobs` path allows you to create a new job that has the specified parameters.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobSpec"
              },
              "examples": {
                "BackupJobSpecExample": {
                  "$ref": "#/components/examples/BackupJobSpecExample"
                },
                "EntraIDTenantBackupJobSpecExample": {
                  "$ref": "#/components/examples/EntraIDTenantBackupJobSpecExample"
                },
                "EntraIDAuditLogBackupJobSpecExample": {
                  "$ref": "#/components/examples/EntraIDAuditLogBackupJobSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Job has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobModel"
                },
                "examples": {
                  "vSphereBackupJobModelExample": {
                    "$ref": "#/components/examples/vSphereBackupJobModelExample"
                  },
                  "CloudDirectorBackupJobModelExample": {
                    "$ref": "#/components/examples/CloudDirectorBackupJobModelExample"
                  },
                  "vSphereReplicaJobModelExample": {
                    "$ref": "#/components/examples/vSphereReplicaJobModelExample"
                  },
                  "EntraIDTenantBackupJobModelExample": {
                    "$ref": "#/components/examples/EntraIDTenantBackupJobModelExample"
                  },
                  "EntraIDAuditLogBackupJobModelExample": {
                    "$ref": "#/components/examples/EntraIDAuditLogBackupJobModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs/states": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewJobs"
          ]
        },
        "summary": "Get All Job States",
        "description": "The HTTP GET request to the `/api/v1/jobs/states` path allows you to get an array of all job states. The states include brief job information that you can also find under the **Jobs** node in the Veeam Backup & Replication console.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllJobsStates",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of job states to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of job states to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts job states by one of the state parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EJobStatesFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts job states in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "idFilter",
            "description": "Filters job states by job ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters job states by the `nameFilter` pattern. The pattern can match any state parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters job states by job type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EJobType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "lastResultFilter",
            "description": "Filters job states by status with which jobs must finish.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionResult"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "statusFilter",
            "description": "Filters job states by current status of the job.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EJobStatus"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "workloadFilter",
            "description": "Filters job states by workloads that jobs must process.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EJobWorkload"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "lastRunAfterFilter",
            "description": "Returns job states for jobs that have run after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "lastRunBeforeFilter",
            "description": "Returns job states for jobs that have not run after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "isHighPriorityJobFilter",
            "description": "If `true`, returns job states for high priority jobs only.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "repositoryIdFilter",
            "description": "Filters job states by repository ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          },
          {
            "name": "objectsCountFilter",
            "description": "Filters job states by number of objects processed by the job.",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/JobStatesFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatesResult"
                },
                "examples": {
                  "JobStatesResultExample": {
                    "$ref": "#/components/examples/JobStatesResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs/{id}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewJobs"
          ]
        },
        "summary": "Get Job",
        "description": "The HTTP GET request to the `/api/v1/jobs/{id}` path allows you to get a job that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the job.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobModel"
                },
                "examples": {
                  "vSphereBackupJobModelExample": {
                    "$ref": "#/components/examples/vSphereBackupJobModelExample"
                  },
                  "CloudDirectorBackupJobModelExample": {
                    "$ref": "#/components/examples/CloudDirectorBackupJobModelExample"
                  },
                  "vSphereReplicaJobModelExample": {
                    "$ref": "#/components/examples/vSphereReplicaJobModelExample"
                  },
                  "EntraIDTenantBackupJobModelExample": {
                    "$ref": "#/components/examples/EntraIDTenantBackupJobModelExample"
                  },
                  "EntraIDAuditLogBackupJobModelExample": {
                    "$ref": "#/components/examples/EntraIDAuditLogBackupJobModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateJobs"
          ]
        },
        "summary": "Edit Job",
        "description": "The HTTP PUT request to the `/api/v1/jobs/{id}` path allows you to edit a job that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the job.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobModel"
              },
              "examples": {
                "vSphereBackupJobModelExample": {
                  "$ref": "#/components/examples/vSphereBackupJobModelExample"
                },
                "CloudDirectorBackupJobModelExample": {
                  "$ref": "#/components/examples/CloudDirectorBackupJobModelExample"
                },
                "vSphereReplicaJobModelExample": {
                  "$ref": "#/components/examples/vSphereReplicaJobModelExample"
                },
                "EntraIDTenantBackupJobModelExample": {
                  "$ref": "#/components/examples/EntraIDTenantBackupJobModelExample"
                },
                "EntraIDAuditLogBackupJobModelExample": {
                  "$ref": "#/components/examples/EntraIDAuditLogBackupJobModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Job has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobModel"
                },
                "examples": {
                  "vSphereBackupJobModelExample": {
                    "$ref": "#/components/examples/vSphereBackupJobModelExample"
                  },
                  "CloudDirectorBackupJobModelExample": {
                    "$ref": "#/components/examples/CloudDirectorBackupJobModelExample"
                  },
                  "vSphereReplicaJobModelExample": {
                    "$ref": "#/components/examples/vSphereReplicaJobModelExample"
                  },
                  "EntraIDTenantBackupJobModelExample": {
                    "$ref": "#/components/examples/EntraIDTenantBackupJobModelExample"
                  },
                  "EntraIDAuditLogBackupJobModelExample": {
                    "$ref": "#/components/examples/EntraIDAuditLogBackupJobModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteJobs"
          ]
        },
        "summary": "Delete Job",
        "description": "The HTTP DELETE request to the `/api/v1/jobs/{id}` path allows you to delete a job that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the job.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/Deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs/{id}/start": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartJobs"
          ]
        },
        "summary": "Start Job",
        "description": "The HTTP POST request to the `/api/v1/jobs/{id}/start` path allows you to start a job that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator.</p>",
        "operationId": "StartJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the job.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStartSpec"
              },
              "examples": {
                "JobStartSpecExample": {
                  "$ref": "#/components/examples/JobStartSpecExample"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "A `BackupJob` (or `ReplicaJob`) session has been started. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "JobSessionModelExample": {
                    "$ref": "#/components/examples/JobSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs/{id}/stop": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StopJobs"
          ]
        },
        "summary": "Stop Job",
        "description": "The HTTP POST request to the `/api/v1/jobs/{id}/stop` path allows you to stop a job that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator.</p>",
        "operationId": "StopJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the job.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStopSpec"
              },
              "example": {
                "gracefulStop": true
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Stopping the `BackupJob` (or `ReplicaJob`) session. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "JobSessionModelExample": {
                    "$ref": "#/components/examples/JobSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs/{id}/disable": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DisableJobs"
          ]
        },
        "summary": "Disable Job",
        "description": "The HTTP POST request to the `/api/v1/jobs/{id}/disable` path allows you to disable a job that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DisableJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the job.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job has been disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs/{id}/enable": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "EnableJobs"
          ]
        },
        "summary": "Enable Job",
        "description": "The HTTP POST request to the `/api/v1/jobs/{id}/enable` path allows you to enable a job that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "EnableJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the job.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job has been enabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/jobs/quickBackup/vSphere": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartQuickBackupJob"
          ]
        },
        "summary": "Start Quick Backup",
        "description": "The HTTP POST request to the `/api/v1/jobs/quickBackup/vSphere` path allows you to perform quick backup for the specified VMware vSphere or VMware Cloud Director VM.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator.</p>",
        "operationId": "StartVSphereQuickBackupJob",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VmwareObjectModel"
              },
              "examples": {
                "QuickBackupExample": {
                  "$ref": "#/components/examples/QuickBackupExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `BackupJob` session has been started. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "QuickBackupSessionExample": {
                    "$ref": "#/components/examples/QuickBackupSessionExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/credentials": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCredentials"
          ]
        },
        "summary": "Get All Credentials",
        "description": "The HTTP GET request to the `/api/v1/credentials` path allows you to get an array of credentials records that are added to the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetAllCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of credentials records to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of credentials records to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts credentials by one of the credentials parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECredentialsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts credentials in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters credentials by the `nameFilter` pattern. The pattern can match any credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters credentials by type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECredentialsType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns credentials that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns credentials that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CredentialsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateCredentials"
          ]
        },
        "summary": "Add Credentials Record",
        "description": "The HTTP POST request to the `/api/v1/credentials` path allows you to add a credentials record.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "CreateCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Account has been added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/credentials/{id}": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCredentials"
          ]
        },
        "summary": "Get Credentials Record",
        "description": "The HTTP GET request to the `/api/v1/credentials/{id}` path allows you to get a credentials record that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateCredentials"
          ]
        },
        "summary": "Edit Credentials Record",
        "description": "The HTTP PUT request to the `/api/v1/credentials/{id}` path allows you to edit a credentials record that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "UpdateCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credentials record has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteCredentials"
          ]
        },
        "summary": "Remove Credentials Record",
        "description": "The HTTP DELETE request to the `/api/v1/credentials/{id}` path allows you to remove a credentials record that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "DeleteCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Credentials record has been removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/credentials/{id}/changepassword": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ChangeAccountPassword"
          ]
        },
        "summary": "Change Password",
        "description": "The HTTP POST request to the `/api/v1/credentials/{id}/changepassword` path allows you to change a password of the credentials record that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangePasswordForCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsPasswordChangeSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/credentials/{id}/changeprivatekey": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ChangeLinuxPrivateKey"
          ]
        },
        "summary": "Change Linux Private Key",
        "description": "The HTTP POST request to the `/api/v1/credentials/{id}/changeprivatekey` path allows you to change a Linux private key of the credentials record that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangePrivateKeyForCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateKeyChangeSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Private key has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/credentials/{id}/changerootpassword": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ChangeLinuxRootPassword"
          ]
        },
        "summary": "Change Linux Root Password",
        "description": "The HTTP POST request to the `/api/v1/credentials/{id}/changerootpassword` path allows you to change a Linux root password of the credentials record that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangeRootPasswordForCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsPasswordChangeSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Root password has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCloudCredentials"
          ]
        },
        "summary": "Get All Cloud Credentials",
        "description": "The HTTP GET request to the `/api/v1/cloudCredentials` path allows you to get an array of credentials records used to connect to cloud services.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetAllCloudCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of cloud credentials records to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CloudCredentialsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of cloud credentials records to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CloudCredentialsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts cloud credentials by one of the cloud credentials parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECloudCredentialsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CloudCredentialsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts cloud credentials in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CloudCredentialsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters cloud credentials by the `nameFilter` pattern. The pattern can match any cloud credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CloudCredentialsFilters"
            }
          },
          {
            "name": "typeFilter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ECloudCredentialsType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CloudCredentialsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudCredentialsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateCloudCredentials"
          ]
        },
        "summary": "Add Cloud Credentials Record",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials` path allows you to add a credentials record used to connect to cloud services.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "CreateCloudCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudCredentialsSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Cloud credentials record has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudCredentialsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/appRegistration": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateCloudCredentials"
          ]
        },
        "summary": "Get Microsoft Entra ID Verification Code",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials/appRegistration` path allows you to get a single-use verification code required to register a new Microsoft Entra ID application.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "RequestAppRegistrationByDeviceCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudDeviceCodeSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Verification code has been received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudDeviceCodeModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/appRegistration/{verificationCode}": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateCloudCredentials"
          ]
        },
        "summary": "Register Microsoft Entra ID Application",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials/appRegistration/{verificationCode}` path allows you to register a new Microsoft Entra ID application using the specified `verificationCode`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "FinishAppRegistrationByDeviceCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "verificationCode",
            "description": "Verification code. To obtain the code, use the [Get Microsoft Entra ID Verification Code](#tag/Credentials/operation/RequestAppRegistrationByDeviceCode) request.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Microsoft Entra ID application has been registered.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudNativeApplicationModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/authenticate": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateCloudCredentials"
          ]
        },
        "summary": "Get Google Authentication Information",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials/authenticate` path allows you to get authentication information required to sign in to Google Cloud.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "RequestAuthentication",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "201": {
            "description": "Authentication information has been received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GoogleCloudComputeVerificationCodeModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/{id}": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCloudCredentials"
          ]
        },
        "summary": "Get Cloud Credentials Record",
        "description": "The HTTP GET request to the `/api/v1/cloudCredentials/{id}` path allows you to get a cloud credentials record that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetCloudCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the cloud credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudCredentialsModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateCloudCredentials"
          ]
        },
        "summary": "Edit Cloud Credentials Record",
        "description": "The HTTP PUT request to the `/api/v1/cloudCredentials/{id}` path allows you to edit a cloud credentials record that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "UpdateCloudCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the cloud credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudCredentialsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cloud credentials record has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudCredentialsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteCloudCredentials"
          ]
        },
        "summary": "Remove Cloud Credentials Record",
        "description": "The HTTP DELETE request to the `/api/v1/cloudCredentials/{id}` path allows you to remove a cloud credentials record that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "DeleteCloudCreds",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the cloud credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cloud credentials record has been removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/{id}/changeSecretKey": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ChangeCloudSecretKey"
          ]
        },
        "summary": "Change Secret Key",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/changeSecretKey` path allows you to change a secret key of a cloud credentials record that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangeCloudCredsSecretKey",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the cloud credentials record.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudCredentialsPasswordSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Secret key has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudCredentialsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/{id}/changeAccount": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateCloudCredentials"
          ]
        },
        "summary": "Change Google Service Account",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/changeAccount` path allows you to set a new Google Cloud service account associated with the same credentials id.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangeAccount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Google service account.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleCloudServiceCredentialsExistingAccountSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Service account has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/{id}/changeCertificate": {
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ChangeCloudCertificate"
          ]
        },
        "summary": "Change Certificate",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/changeCertificate` path allows you to change a certificate used for authentication in your Microsoft Entra ID application associated with an Azure compute account that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangeCloudCertificate",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Azure compute account.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateUploadSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Certificate has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudCredentialsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/{id}/helperAppliances": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCredentials"
          ]
        },
        "summary": "Get All Helper Appliances",
        "description": "The HTTP GET request to the `/api/v1/cloudCredentials/{id}/helperAppliances` path allows you to get an array of Linux-based helper appliances of a Microsoft Azure compute account that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetAllCredsHelperAppliances",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Microsoft Azure compute account.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudHelperApplianceResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateCloudCredentials"
          ]
        },
        "summary": "Add or Edit Helper Appliance",
        "operationId": "CreateCloudCredsHelperAppliance",
        "description": "The HTTP POST request to the `/api/v1/cloudCredentials/{id}/helperAppliances` path allows you to create a new Linux-based helper appliance or edit settings of an existing one for a Microsoft Azure compute account that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Microsoft Azure compute account.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudHelperApplianceSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `AzureApplianceDeploy` session has been created. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}": {
      "get": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateCloudCredentials"
          ]
        },
        "summary": "Get Helper Appliance",
        "operationId": "GetCloudCredsHelperAppliance",
        "description": "The HTTP GET request to the `/api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}` path allows you to get a Linux-based helper appliance with the `applianceId` of a Microsoft Azure compute account that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Microsoft Azure compute account.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "applianceId",
            "description": "ID of the helper appliance.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudHelperApplianceModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Credentials"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteCloudCredentials"
          ]
        },
        "summary": "Remove Helper Appliance",
        "description": "The HTTP DELETE request to the `/api/v1/cloudCredentials/{id}/helperAppliances/{applianceId}` path allows you to remove a Linux-based helper appliance with the `applianceId` of a Microsoft Azure compute account that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "DeleteCloudCredsHelperApplianceAsync",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the Microsoft Azure compute account.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "applianceId",
            "description": "ID of the helper appliance.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "An `AzureApplianceDeploy` session has been created to remove the helper appliance. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudBrowser": {
      "post": {
        "tags": [
          "Cloud Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewCloudHierarchy"
          ]
        },
        "summary": "Get Cloud Hierarchy",
        "description": "The HTTP POST request to the `/api/v1/cloudBrowser` path allows you to browse cloud resources (compute or storage) available for the specified storage account.<p>To reduce the response time and the number of records in the response, use `filters` if possible.</p><p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "BrowseCloudEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "resetCache",
            "description": "If `true`, the cache will be reset for this request. Resetting the cache slows down request processing but it allows you to get up-to-date data.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/CloudBrowserRequestOptions"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudBrowserSpec"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudBrowserModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/cloudBrowser/newFolder": {
      "post": {
        "tags": [
          "Cloud Browser"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateCloudStorageFolder"
          ]
        },
        "summary": "New Folder",
        "description": "The HTTP POST request to the `/api/v1/cloudBrowser/newFolder` path allows you to create a new folder in the cloud infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p><div class=\"note\"><strong>NOTE</strong><br>The REST API does not create new containers, you can create a folder in an existing container only.</div>",
        "operationId": "CreateNewCloudFolder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cloud folder has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/encryptionPasswords": {
      "get": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewEncryptionPasswords"
          ]
        },
        "summary": "Get All Encryption Passwords",
        "description": "The HTTP GET request to the `/api/v1/encryptionPasswords` path allows you to get an array of all passwords that are used for data encryption.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetAllEncryptionPasswords",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of passwords to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EncryptionPasswordsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of passwords to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EncryptionPasswordsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts passwords by one of the password parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EEncryptionPasswordsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EncryptionPasswordsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts passwords in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/EncryptionPasswordsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionPasswordsResult"
                },
                "examples": {
                  "EncryptionPasswordsResultExample": {
                    "$ref": "#/components/examples/EncryptionPasswordsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateEncryptionPasswords"
          ]
        },
        "summary": "Add Encryption Password",
        "description": "The HTTP POST request to the `/api/v1/encryptionPasswords` path allows you to add an encryption password.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "CreateEncryptionPassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptionPasswordSpec"
              },
              "examples": {
                "EncryptionPasswordSpecExample": {
                  "$ref": "#/components/examples/EncryptionPasswordSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Password has been added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionPasswordModel"
                },
                "examples": {
                  "EncryptionPasswordModelExample": {
                    "$ref": "#/components/examples/EncryptionPasswordModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/encryptionPasswords/{id}": {
      "get": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewEncryptionPasswords"
          ]
        },
        "summary": "Get Encryption Password",
        "description": "The HTTP GET request to the `/api/v1/encryptionPasswords/{id}` path allows you to get an encryption password that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetEncryptionPassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the encryption password.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionPasswordModel"
                },
                "examples": {
                  "EncryptionPasswordModelExample": {
                    "$ref": "#/components/examples/EncryptionPasswordModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateEncryptionPasswords"
          ]
        },
        "summary": "Edit Encryption Password",
        "description": "The HTTP PUT request to the `/api/v1/encryptionPasswords/{id}` path allows you to edit an encryption password that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "UpdateEncryptionPassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the encryption password.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptionPasswordModel"
              },
              "examples": {
                "EncryptionPasswordModelExample": {
                  "$ref": "#/components/examples/EncryptionPasswordModelExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionPasswordModel"
                },
                "examples": {
                  "EncryptionPasswordModelExample": {
                    "$ref": "#/components/examples/EncryptionPasswordModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteEncryptionPasswords"
          ]
        },
        "summary": "Remove Encryption Password",
        "description": "The HTTP DELETE request to the `/api/v1/encryptionPasswords/{id}` path allows you to remove an encryption password that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "DeleteEncryptionPassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the encryption password.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Password has been removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/encryptionPasswords/{id}/changepassword": {
      "post": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateEncryptionPasswords"
          ]
        },
        "summary": "Change Encryption Password",
        "description": "The HTTP POST request to the `/api/v1/encryptionPasswords/{id}/changepassword` path allows you to change an encryption password that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangeEncryptionPassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the encryption password.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptionPasswordChangeSpec"
              },
              "examples": {
                "EncryptionPasswordChangeSpecExample": {
                  "$ref": "#/components/examples/EncryptionPasswordChangeSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewBackups"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get All Backups",
        "description": "The HTTP GET request to the `/api/v1/backups` path allows you to get an array of all backups that are created on or imported to the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllBackups",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of backups to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of backups to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts backups by one of the backup parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EBackupsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts backups in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters backups by the `nameFilter` pattern. The pattern can match any backup parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns backups that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns backups that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "platformIdFilter",
            "description": "Filters backups by ID of the backup object platform.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "jobIdFilter",
            "description": "Filters backups by ID of the parent job.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          },
          {
            "name": "policyTagFilter",
            "description": "Filters backups by retention policy tag.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupsResult"
                },
                "examples": {
                  "BackupsResultExample": {
                    "$ref": "#/components/examples/BackupsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backups/{id}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewBackups"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Backup",
        "description": "The HTTP GET request to the `/api/v1/backups/{id}` path allows you to get a backup that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupModel"
                },
                "examples": {
                  "BackupModelExample": {
                    "$ref": "#/components/examples/BackupModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Backups"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteBackups"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Delete Backup",
        "description": "The HTTP DELETE request to the `/api/v1/backups/{id}` path allows you to delete a backup that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteBackup",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromDBIfSPUnavailable",
            "description": "(Only for Veeam Cloud Connect infrastructure) If `true`, Veeam Backup & Replication deletes the backup record from the configuration database if the service provider is not available (for example, if a cloud gateway is down, a cloud repository is not available, or the Cloud Connect license is expired).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeGFS",
            "description": "If `true`, Veeam Backup & Replication also deletes the backups with GFS flags (weekly, monthly and yearly full backups).",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fromDB",
            "description": "If `true`, Veeam Backup & Replication deletes only the record of the backup from the configuration database and keeps the backup in the backup repository.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A `DeleteBackup` session has been created to delete the backup. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "BackupModelExample": {
                    "$ref": "#/components/examples/SessionModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backups/{id}/downloadBackupMeta": {
      "post": {
        "tags": [
          "Backups"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DownloadBackupMeta"
          ]
        },
        "summary": "Download Backup Metadata",
        "description": "The HTTP POST request to the `/api/v1/backups/{id}/downloadBackupMeta` path allows you to download metadata of a backup that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DownloadBackupMeta",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnstructuredBackupDownloadMetaSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "An `UnstructuredDownloadMeta` session has been created to download the backup metadata. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backups/{id}/backupFiles": {
      "get": {
        "tags": [
          "Backups"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewBackupFiles"
          ]
        },
        "summary": "Get All Backup Files",
        "description": "The HTTP GET request to the `/api/v1/backups/{id}/backupFiles` path allows you to get an array of all backup files in a backup that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetAllBackupFiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "skip",
            "description": "Number of backup files to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of backup files to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts backup files by one of the backup files parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EBackupFilesFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts backup files in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters backup files by the `nameFilter` pattern. The pattern can match any backup files parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns backup files that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns backup files that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          },
          {
            "name": "gfsPeriodFilter",
            "description": "Filters backup files by GFS period.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EBackupFileGFSPeriod"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupFilesFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupFilesResult"
                },
                "examples": {
                  "BackupFilesResultExample": {
                    "$ref": "#/components/examples/BackupFilesResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backups/{id}/backupFiles/{backupFileId}": {
      "get": {
        "tags": [
          "Backups"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewBackupFiles"
          ]
        },
        "summary": "Get Backup File",
        "description": "The HTTP GET request to the `/api/v1/backups/{backupId}/backupFiles/{id}` path allows you to get a backup file with the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetBackupFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupFileId",
            "description": "Backup file ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupFileModel"
                },
                "examples": {
                  "BackupFileModelExample": {
                    "$ref": "#/components/examples/BackupFileModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backups/{id}/objects": {
      "get": {
        "tags": [
          "Backups"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewBackupObjects"
          ]
        },
        "summary": "Get Backup Objects",
        "description": "The HTTP GET request to the `/api/v1/backups/{id}/objects` path allows you to get an array of virtual infrastructure objects (VMs and VM containers) that are included in a backup that has the specified ID. <p>Types of backup objects differ depending on the backup job platform:<ul> <li>Backups of VMware vSphere jobs contain VMs only.</li> <li>Backups of VMware Cloud Director jobs contain VMs and vApps.</li></ul></p> <p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetBackupObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupObjectsResult"
                },
                "examples": {
                  "BackupObjectsResultExample": {
                    "$ref": "#/components/examples/BackupObjectsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupObjects": {
      "get": {
        "tags": [
          "Backup Objects"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewBackupObjects"
          ]
        },
        "summary": "Get All Backup Objects",
        "description": "The HTTP GET request to the `/api/v1/backupObjects` path allows you to get an array of virtual infrastructure objects (VMs and VM containers) that are included in backups created by the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllBackupObjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of backup objects to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of backup objects to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts backup objects by one of the backup object parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EBackupObjectsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts backup objects in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters backup objects by the `nameFilter` pattern. The pattern can match any backup object parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "platformNameFilter",
            "description": "Filters backup objects by platform ID.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EPlatformType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "platformIdFilter",
            "description": "Filters backup objects by platform ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters backup objects by object type.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          },
          {
            "name": "viTypeFilter",
            "description": "Filters backup objects by the type of VMware vSphere server.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupObjectsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupObjectsResult"
                },
                "examples": {
                  "AllBackupObjectsResultExample": {
                    "$ref": "#/components/examples/AllBackupObjectsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupObjects/{id}": {
      "get": {
        "tags": [
          "Backup Objects"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewBackupObjects"
          ]
        },
        "summary": "Get Backup Object",
        "description": "The HTTP GET request to the `/api/v1/backupObjects/{id}` path allows you to get a backup object that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetBackupObject",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup object.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupObjectModel"
                },
                "examples": {
                  "BackupObjectModelExample": {
                    "$ref": "#/components/examples/BackupObjectModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupObjects/{id}/restorePoints": {
      "get": {
        "tags": [
          "Backup Objects"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewRestorePoints"
          ]
        },
        "summary": "Get Restore Points",
        "description": "The HTTP GET request to the `/api/v1/backupObjects/{id}/restorePoints` path allows you to get an array of restore points of a backup object that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetBackupObjectRestorePoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the backup object.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectRestorePointsResult"
                },
                "examples": {
                  "ObjectRestorePointsResultExample": {
                    "$ref": "#/components/examples/ObjectRestorePointsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restorePoints": {
      "get": {
        "tags": [
          "Restore Points"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewRestorePoints"
          ]
        },
        "summary": "Get All Restore Points",
        "description": "The HTTP GET request to the `/api/v1/restorePoints` path allows you to get an array of all restore points created on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllObjectRestorePoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of restore points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of restore points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts restore points by one of the restore point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EObjectRestorePointsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts restore points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns restore points that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns restore points that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters restore points by the `nameFilter` pattern. The pattern can match any restore point parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "platformNameFilter",
            "description": "Filters restore points by name of the backup object platform.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EPlatformType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "platformIdFilter",
            "description": "Filters restore points by ID of the backup object platform.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "backupIdFilter",
            "description": "Filters restore points by backup ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "backupObjectIdFilter",
            "description": "Filters restore points by backup object ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          },
          {
            "name": "malwareStatusFilter",
            "description": "Filters restore points by malware status.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ObjectRestorePointsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectRestorePointsResult"
                },
                "examples": {
                  "ObjectRestorePointsResultExample": {
                    "$ref": "#/components/examples/ObjectRestorePointsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restorePoints/{id}": {
      "get": {
        "tags": [
          "Restore Points"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewRestorePoints"
          ]
        },
        "summary": "Get Restore Point",
        "description": "The HTTP GET request to the `/api/v1/restorePoints/{id}` path allows you to get a restore point that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetObjectRestorePoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the restore point.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectRestorePointModel"
                },
                "examples": {
                  "ObjectRestorePointModelExample": {
                    "$ref": "#/components/examples/ObjectRestorePointModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restorePoints/{id}/disks": {
      "get": {
        "tags": [
          "Restore Points"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewRestorePointDisks"
          ]
        },
        "summary": "Get Restore Point Disks",
        "description": "The HTTP GET request to the `/api/v1/restorePoints/{id}/disks` path allows you to get an array of disks from a restore point that has the specified `id`.<p> **Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetObjectRestorePointDisks",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the restore point.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectRestorePointDisksResult"
                },
                "examples": {
                  "ObjectRestorePointDisksResultExample": {
                    "$ref": "#/components/examples/ObjectRestorePointDisksResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/replicas": {
      "get": {
        "tags": [
          "Replicas"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewReplicas"
          ]
        },
        "summary": "Get All Replicas",
        "description": "The HTTP GET request to the `/api/v1/replicas` path allows you to get an array of all replicas that are created on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetAllReplicas",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of replicas to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of replicas to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts replicas by one of the replica parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EReplicasFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts replicas in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters replicas by the `nameFilter` pattern. The pattern can match any replica parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns replicas that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns replicas that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "platformIdFilter",
            "description": "Filters replicas by ID of the backup object platform.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "jobIdFilter",
            "description": "Filters replicas by ID of the parent job.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "policyTagFilter",
            "description": "Filters replicas by retention policy unique ID.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters replicas by state.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicasFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicasResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/replicas/{id}": {
      "get": {
        "tags": [
          "Replicas"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewReplicas"
          ]
        },
        "summary": "Get Replica",
        "description": "The HTTP GET request to the `/api/v1/replicas/{id}` path allows you to get a replica that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetReplica",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the replica.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/replicas/rescan": {
      "post": {
        "tags": [
          "Replicas"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RescanReplicas"
          ]
        },
        "summary": "Rescan Replicas",
        "description": "The HTTP POST request to the `/api/v1/replicas/rescan` path allows you to rescan replicas.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "RescanReplica",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplicaRescanSpec"
              },
              "examples": {
                "ReplicaRescanSpecExample": {
                  "$ref": "#/components/examples/ReplicaRescanSpecExample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A `ConfigurationResynchronize` session has been created to rescan replicas. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "ConfigurationResynchronizeSessionModelExample": {
                    "$ref": "#/components/examples/ConfigurationResynchronizeSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/replicas/{id}/replicaPoints": {
      "get": {
        "tags": [
          "Replicas"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewReplicaPoints"
          ]
        },
        "summary": "Get All Replica Restore Points",
        "description": "The HTTP GET request to the `/api/v1/replicas/{id}/replicaPoints` path allows you to get an array of all replica restore points for a replica that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetObjectReplicaRestorePoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of restore points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of restore points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts restore points by one of the restore point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EReplicaRestorePointsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts restore points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "id",
            "description": "Replica ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns restore points that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns restore points that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters restore points by the `nameFilter` pattern. The pattern can match any restore point parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "platformNameFilter",
            "description": "Filters restore points by replica platform name.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EPlatformType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "platformIdFilter",
            "description": "Filters restore points by replica platform ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "replicaIdFilter",
            "description": "Filters restore points by replica ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaPointsResult"
                },
                "examples": {
                  "ReplicaPointsResultExample": {
                    "$ref": "#/components/examples/ReplicaPointsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/replicas/{replicaId}/replicaPoints/{id}": {
      "get": {
        "tags": [
          "Replicas"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewReplicaPoints"
          ]
        },
        "summary": "Get Replica Restore Point",
        "description": "The HTTP GET request to the `/api/v1/replicas/{replicaId}/replicaPoints/{id}` path allows you to get a restore point that has the specified `id` for a replica that has the specified `replicaId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetObjectReplicaRestorePointInReplica",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "replicaId",
            "description": "Replica ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "description": "Restore point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaPointModel"
                },
                "examples": {
                  "ReplicaPointModelExample": {
                    "$ref": "#/components/examples/ReplicaPointModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/replicaPoints": {
      "get": {
        "tags": [
          "Replica Restore Points"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewReplicaPoints"
          ]
        },
        "summary": "Get All Replica Restore Points",
        "description": "The HTTP GET request to the `/api/v1/replicaRestorePoints` path allows you to get an array of all replica restore points created on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetAllObjectReplicaRestorePoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of restore points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of restore points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts restore points by one of the restore point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EReplicaRestorePointsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts restore points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns restore points that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns restore points that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters restore points by the `nameFilter` pattern. The pattern can match any restore point parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "platformNameFilter",
            "description": "Filters restore points by replica platform name.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EPlatformType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "platformIdFilter",
            "description": "Filters restore points by replica platform ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "replicaIdFilter",
            "description": "Filters restore points by replica ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          },
          {
            "name": "malwareStatusFilter",
            "description": "Filters restore points by malware status.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ReplicaRestorePointsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaPointsResult"
                },
                "examples": {
                  "ReplicaPointsResultExample": {
                    "$ref": "#/components/examples/ReplicaPointsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/replicaPoints/{id}": {
      "get": {
        "tags": [
          "Replica Restore Points"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewReplicaPoints"
          ]
        },
        "summary": "Get Replica Restore Point",
        "description": "The HTTP GET request to the `/api/v1/replicaPoints/{id}` path allows you to get a replica restore point that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetObjectReplicaRestorePoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the restore point.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplicaPointModel"
                },
                "examples": {
                  "ReplicaPointModelExample": {
                    "$ref": "#/components/examples/ReplicaPointModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/wanAccelerators": {
      "get": {
        "tags": [
          "WAN Accelerators"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewWANAccelerators"
          ]
        },
        "summary": "Get All WAN Accelerators",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/wanAccelerators` path allows you to get an array of all WAN accelerators that are added to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetAllWANAccelerators",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of WAN accelerators to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/WANAcceleratorsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of WAN accelerators to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/WANAcceleratorsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts WAN accelerators by one of the WAN accelerator parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EWANAcceleratorsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/WANAcceleratorsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts WAN accelerators in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/WANAcceleratorsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters WAN accelerators by the `nameFilter` pattern. The pattern can match any WAN accelerator parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/WANAcceleratorsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WANAcceleratorsResult"
                },
                "examples": {
                  "WANAcceleratorsResultExample": {
                    "$ref": "#/components/examples/WANAcceleratorsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupInfrastructure/wanAccelerators/{id}": {
      "get": {
        "tags": [
          "WAN Accelerators"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewWANAccelerators"
          ]
        },
        "summary": "Get WAN Accelerator",
        "description": "The HTTP GET request to the `/api/v1/backupInfrastructure/wanAccelerators/{id}` path allows you to get a WAN accelerator that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetWANAccelerator",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the WAN accelerator.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WANAcceleratorModel"
                },
                "examples": {
                  "WANAcceleratorModelExample": {
                    "$ref": "#/components/examples/WANAcceleratorModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failover/failoverNow/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failover"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaFailover"
          ]
        },
        "summary": "Start Failover",
        "description": "The HTTP POST request to the `/api/v1/failover/failoverNow/vSphere/snapshot` path allows you to start failover of VMware vSphere VMs to their snapshot replicas.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaFailover",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaFailoverSpec"
              },
              "examples": {
                "ViVMSnapshotReplicaFailoverSpecExample": {
                  "$ref": "#/components/examples/ViVMSnapshotReplicaFailoverSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `Failover` sessions have been started to perform the failover. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                },
                "examples": {
                  "FailoverSessionsResultExample": {
                    "$ref": "#/components/examples/FailoverSessionsResultExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failover/plannedFailover/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failover"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaPlannedFailover"
          ]
        },
        "summary": "Start Planned Failover",
        "description": "The HTTP POST request to the `/api/v1/failover/plannedFailover/vSphere/snapshot` path allows you to start planned failover of VMware vSphere VMs to their snapshot replicas.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaPlannedFailover",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaFailoverSpec"
              },
              "examples": {
                "ViVMSnapshotReplicaFailoverSpecExample": {
                  "$ref": "#/components/examples/ViVMSnapshotReplicaFailoverSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `PlannedFailover` sessions have been started to perform the failover. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                },
                "examples": {
                  "PlannedFailoverSessionsResultExample": {
                    "$ref": "#/components/examples/PlannedFailoverSessionsResultExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failover/permanentFailover/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failover"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaPermanentFailover"
          ]
        },
        "summary": "Start Permanent Failover",
        "description": "The HTTP POST request to the `/api/v1/failover/permanentFailover/vSphere/snapshot` path allows you to start permanent failover of VMware vSphere VMs to their snapshot replicas.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaPermanentFailover",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaFailoverSpec"
              },
              "examples": {
                "ViVMSnapshotReplicaFailoverSpecExample": {
                  "$ref": "#/components/examples/ViVMSnapshotReplicaFailoverSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `PermanentFailover` sessions have been started to perform the failover. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                },
                "examples": {
                  "PermanentFailoverSessionsResultExample": {
                    "$ref": "#/components/examples/PermanentFailoverSessionsResultExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failover/undoFailover/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failover"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaUndoFailover"
          ]
        },
        "summary": "Undo Failover",
        "description": "The HTTP POST request to the `/api/v1/failover/undoFailover/vSphere/snapshot` path allows you to undo failover for snapshot replicas of VMware vSphere VMs.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaUndoFailover",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaFailoverSpec"
              },
              "examples": {
                "ViVMSnapshotReplicaFailoverSpecExample": {
                  "$ref": "#/components/examples/ViVMSnapshotReplicaFailoverSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `UndoFailover` sessions have been started to undo the failover. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                },
                "examples": {
                  "UndoFailoverSessionsResultExample": {
                    "$ref": "#/components/examples/UndoFailoverSessionsResultExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failback/failbackToProduction/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failback"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaFailback"
          ]
        },
        "summary": "Start Failback",
        "description": "The HTTP POST request to the `/api/v1/failback/vSphere/snapshot` path allows you to fail back from snapshot replicas to production VMware vSphere VMs.<p>Failback must be finalized. After you have switched over to production VMs (automatically or manually), do one of the following&#58;<ul><li>If a production VM works as expected, commit failback for the VM.</li><li>If a production VM does not work as expected, undo failback for the VM.</li></ul><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaFailback",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `Failback` sessions have been started to perform the failback. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failback/switchToProduction/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failback"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaSwitchToProductionFailback"
          ]
        },
        "summary": "Switch over to Production",
        "description": "The HTTP POST request to the `/api/v1/failback/switchToProduction/vSphere/snapshot` path allows you to manually switch over from snapshot replicas to production VMware vSphere VMs.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaSwitchToProduction",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaSwitchToProductionFailbackSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `SwitchReplicaToProduction` sessions have been started to perform switchover. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failback/changeSwitchoverTime/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failback"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ChangeReplicaFailbackSwitchoverTime"
          ]
        },
        "summary": "Change Switchover Time",
        "description": "The HTTP POST request to the `/api/v1/failback/changeSwitchoverTime/vSphere/snapshot` path allows you to change the time when you want to switch over from snapshot replicas to production VMware vSphere VMs.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ChangeReplicaFailbackSwitchoverTime",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaChangeSwitchoverTimeFailbackSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Switchover time has been changed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failback/commitFailback/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failback"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaCommitFailback"
          ]
        },
        "summary": "Commit Failback",
        "description": "The HTTP POST request to the `/api/v1/failback/commitFailback/vSphere/snapshot` path allows you to commit failback from snapshot replicas to production VMware vSphere VMs.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaCommitFailback",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaCommitFailbackSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `CommitFailback` sessions have been started to commit the failback. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/failback/undoFailback/vSphere/snapshot": {
      "post": {
        "tags": [
          "Failback"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMSnapshotReplicaUndoFailback"
          ]
        },
        "summary": "Undo Failback",
        "description": "The HTTP POST request to the `/api/v1/failback/undoFailback/vSphere/snapshot` path allows you to undo failback from snapshot replicas to production VMware vSphere VMs.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ViVMSnapshotReplicaUndoFailback",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaUndoFailbackSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "One or more `UndoFailback` sessions have been started to undo the failback. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/vm": {
      "get": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewIRMountedVMs"
          ]
        },
        "summary": "Get All VM Mount Points",
        "description": "The HTTP GET request to the `/api/v1/restore/instantRecovery/vSphere/vm` path allows you to get an array of VM mount points.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetAllInstantViVMRecoveryMounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of mount points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstantViVMRecoveryMountsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of mount points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstantViVMRecoveryMountsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts mount points by one of the mount point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EInstantViVMRecoveryMountsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstantViVMRecoveryMountsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstantViVMRecoveryMountsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters mount points by mount point state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EInstantRecoveryMountState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/InstantViVMRecoveryMountsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstantViVMRecoveryMountsResult"
                },
                "examples": {
                  "InstantViVMRecoveryMountsResultExample": {
                    "$ref": "#/components/examples/InstantViVMRecoveryMountsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartViVMInstantRecovery"
          ]
        },
        "summary": "Start Instant Recovery",
        "description": "The HTTP POST request to the `/api/v1/restore/instantRecovery/vSphere/vm` path allows you to start Instant Recovery of a VMware vSphere VM to VMware vSphere. You can recover a VM from the specified restore point to the original location with initial VM settings, or to any location but with different settings.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "InstantViVMRecoveryMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstantViVMRecoverySpec"
              },
              "examples": {
                "OriginalLocationInstantViVMRecoverySpecExample": {
                  "$ref": "#/components/examples/OriginalLocationInstantViVMRecoverySpecExample"
                },
                "CustomizedInstantViVMRecoverySpecExample": {
                  "$ref": "#/components/examples/CustomizedInstantViVMRecoverySpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `InstantRecovery` session has been started to start Instant Recovery. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InstantRecoverySessionModelExample": {
                    "$ref": "#/components/examples/InstantRecoverySessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/vm/{mountId}": {
      "get": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewIRMountedVMs"
          ]
        },
        "summary": "Get VM Mount Point",
        "description": "The HTTP GET request to the `/api/v1/restore/instantRecovery/vSphere/vm/{mountId}` path allows you to get a VM mount point that has the specified `mountID`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetInstantViVMRecoveryMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstantViVMRecoveryMount"
                },
                "examples": {
                  "InstantViVMRecoveryMountExample": {
                    "$ref": "#/components/examples/InstantViVMRecoveryMountExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/vm/{mountId}/unmount": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DismountIRVMs"
          ]
        },
        "summary": "Stop VM Publishing",
        "description": "The HTTP POST request to the `/api/v1/restore/instantRecovery/vSphere/vm/{mountId}/unmount` path allows you to stop publishing the recovered VM and remove it from the destination host.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "InstantViVMRecoveryUnmount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An `InstantRecovery` session has been started to stop publishing the VM. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "InstantRecoverySessionModelExample": {
                    "$ref": "#/components/examples/InstantRecoverySessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/vm/{mountId}/migrate": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "MigrateIRMountedVMs"
          ]
        },
        "summary": "Start VM Migration",
        "description": "The HTTP POST request to the `/api/v1/restore/instantRecovery/vSphere/vm/{mountId}/migrate` path allows you to start VM migration from the specified mount.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "InstantViVMRecoveryMigrate",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViVMQuickMigrationSpec"
              },
              "examples": {
                "ViVMQuickMigrationSpecExample": {
                  "$ref": "#/components/examples/ViVMQuickMigrationSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A `QuickMigration` session has been started to migrate the VM. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "QuickMigrationSessionModelExample": {
                    "$ref": "#/components/examples/QuickMigrationSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/vmRestore/vSphere": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartEntireVmRestore"
          ]
        },
        "summary": "Restore Entire VMware vSphere VM",
        "description": "The HTTP POST request to the `/api/v1/restore/vmRestore/vSphere` path allows you to perform entire VM restore of a VMware vSphere VM to VMware vSphere. You can restore a VM from the specified restore point to the original location with initial VM settings, or to any location but with different settings.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "EntireVmRestoreVmware",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntireViVMRestoreSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Restore session has been created. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/vmRestore/cloudDirector": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartEntireVmRestoreCloudDirector"
          ]
        },
        "summary": "Restore Entire VMware Cloud Director VM",
        "description": "The HTTP POST request to the `/api/v1/restore/vmRestore/cloudDirector` path allows you to perform entire VM restore of a VMware Cloud Director VM to VMware Cloud Director. You can restore a VM from the specified restore point to the original location with initial VM settings, or to any location but with different settings.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "EntireVmRestoreCloudDirector",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntireCloudDirectorVMRestoreSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `RestoreVm` session has been created. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/fcd": {
      "get": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewIRMountedDisks"
          ]
        },
        "summary": "Get All FCD Mounts",
        "description": "The HTTP GET request to the `/api/v1/restore/instantRecovery/vSphere/fcd` path allows you to get an array of FCD mounts.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetAllVmwareFcdInstantRecoveryMountModels",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of mount points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMountsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of mount points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMountsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts mount points by one of the mount point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EVmwareFcdInstantRecoveryMountsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMountsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMountsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters mount points by mount point state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EInstantRecoveryMountState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMountsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMountsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartFCDInstantRecovery"
          ]
        },
        "summary": "Start Instant FCD Recovery",
        "description": "The HTTP POST request to the `/api/v1/restore/instantRecovery/vSphere/fcd` path allows you to start Instant FCD Recovery from the restore point to the destination cluster.<p>Specify the destination cluster in the `destinationCluster` parameter of the request body as a model of the VMware vSphere object. For details on how to get the cluster model, see [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects).<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "InstantRecoveryVmwareFcdMountWithSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VmwareFcdInstantRecoverySpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Instant FCD Recovery has been started. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/fcd/{mountId}": {
      "get": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewIRMountedDisks"
          ]
        },
        "summary": "Get FCD Mount Point",
        "description": "The HTTP GET request to the `/api/v1/restore/instantRecovery/vSphere/fcd/{mountId}` path allows you to get information about the mounted vPower NFS datastore, such as restore session ID, mount point state, instant FCD recovery settings and disks that will be recovered.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Tape Operator, Veeam Backup Viewer.</p>",
        "operationId": "GetVmwareFcdInstantRecoveryMountModel",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMount"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/fcd/{mountId}/dismount": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DismountIRDisks"
          ]
        },
        "summary": "Stop FCD Publishing",
        "description": "The HTTP POST request to the `/api/v1/restore/instantRecovery/vSphere/fcd/{mountId}/dismount` path allows you to stop publishing the recovered FCDs and remove the disks from the datastore.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "InstantRecoveryVmwareFcdDismountWithSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The disks have been unmounted. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/instantRecovery/vSphere/fcd/{mountId}/migrate": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "MigrateIRMountedDisks"
          ]
        },
        "summary": "Start FCD Migration",
        "description": "The HTTP POST request to the `/api/v1/restore/instantRecovery/vSphere/fcd/{mountId}/migrate` path allows you to start migration of FCDs from the specified mount point.<p>In the request body specify FCD migration configuration:<ul> <li>Disks for migration</li> <li>Target datastore</li> <li>Storage policy that will be applied to the migrated disks</li></ul> For details on how to get models of the datastore and storage policy, see [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects).<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "InstantRecoveryVmwareFcdMigrateWithSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VmwareFcdQuickMigrationSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "FCD Migration has been started. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/agents/recoveryTokens": {
      "get": {
        "tags": [
          "Agents"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewComputerRecoveryTokens"
          ]
        },
        "summary": "Get All Recovery Tokens",
        "description": "The HTTP GET request to the `/api/v1/agents/recoveryTokens` path allows you to get an array of all recovery tokens.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetAllComputerRecoveryTokens",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of recovery tokens to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ComputerRecoveryTokenFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of recovery tokens to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ComputerRecoveryTokenFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts recovery tokens by one of the parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EComputerRecoveryTokenFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ComputerRecoveryTokenFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts recovery tokens in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ComputerRecoveryTokenFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters recovery tokens by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ComputerRecoveryTokenFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerRecoveryTokenResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Agents"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateComputerRecoveryToken"
          ]
        },
        "summary": "Create Recovery Token",
        "description": "The HTTP POST request to the `/api/v1/agents/recoveryTokens` path allows you to create a new recovery token.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "CreateComputerRecoveryToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputerRecoveryTokenSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Recovery token has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerRecoveryTokenModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/agents/recoveryTokens/{id}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewComputerRecoveryTokens"
          ]
        },
        "summary": "Get Recovery Token",
        "description": "The HTTP GET request to the `/api/v1/agents/recoveryTokens/{id}` path allows you to get a recovery token that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "GetComputerRecoveryToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the recovery token.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerRecoveryTokenModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Agents"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateComputerRecoveryToken"
          ]
        },
        "summary": "Edit Recovery Token",
        "description": "The HTTP PUT request to the `/api/v1/agents/recoveryTokens/{id}` path allows you to edit settings of a recovery token that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "UpdateComputerRecoveryToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the recovery token.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputerRecoveryTokenModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Recovery token has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerRecoveryTokenModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Agents"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteComputerRecoveryToken"
          ]
        },
        "summary": "Delete Recovery Token",
        "description": "The HTTP DELETE request to the `/api/v1/agents/recoveryTokens/{id}` path allows you to delete a recovery token that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "DeleteComputerRecoveryToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the recovery token.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Token has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/agents/protectedComputers": {
      "get": {
        "tags": [
          "Agents"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewProtectedComputers"
          ]
        },
        "summary": "Get All Protected Computers",
        "description": "The HTTP GET request to the `/api/v1/agents/protectedComputers` path allows you to get an array of all protected computers. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetProtectedComputers",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of protected computers to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProtectedComputerFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of protected computers to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProtectedComputerFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts protected computers by one of the protected computer parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EProtectedComputerFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProtectedComputerFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts protected computers in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProtectedComputerFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters protected computers by the `nameFilter` pattern. The pattern can match any protected computer parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProtectedComputerFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters protected computers by protected computer type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EProtectedComputerType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/ProtectedComputerFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectedComputerResult"
                },
                "example": {
                  "property": "value"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/agents/protectedComputers/{id}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewProtectedComputers"
          ]
        },
        "summary": "Get Protected Computer",
        "description": "The HTTP GET request to the `/api/v1/agents/protectedComputers/{id}` path allows you to get a protected computer that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetProtectedComputer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the protected computer.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectedComputerModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/jobs/import": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ImportJobs"
          ]
        },
        "summary": "Import Jobs",
        "description": "The HTTP POST request to the `/api/v1/automation/jobs/import` path allows you to import jobs to Veeam Backup & Replication.<p> <div class=\"note\"><strong>NOTE</strong><br>In this REST API version, you can import VMware vSphere backup jobs only.</div><p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ImportJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobImportSpecCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Automation` session has been created to import the jobs. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/jobs/export": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportJobs"
          ]
        },
        "summary": "Export Jobs",
        "description": "The HTTP POST request to the `/api/v1/automation/jobs/export` path allows you to export jobs from Veeam Backup & Replication.<p> <div class=\"note\"><strong>NOTE</strong><br>In this REST API version, you can export VMware vSphere backup jobs only.</div><p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ExportJobs",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobExportSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobImportSpecCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/credentials/import": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ImportCredentials"
          ]
        },
        "summary": "Import Credentials",
        "description": "The HTTP POST request to the `/api/v1/automation/credentials/import` path allows you to import credentials to Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ImportCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsImportSpecCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Automation` session has been created to import the credentials. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/credentials/export": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportCredentials"
          ]
        },
        "summary": "Export Credentials",
        "description": "The HTTP POST request to the `/api/v1/automation/credentials/export` path allows you to export credentials from Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ExportCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsExportSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialsImportSpecCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/cloudcredentials/import": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ImportCredentials"
          ]
        },
        "summary": "Import Cloud Credentials",
        "description": "The HTTP POST request to the `/api/v1/automation/cloudcredentials/import` path allows you to import cloud credentials to Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ImportCloudCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudCredentialsImportSpecCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Automation` session has been created to import the cloud credentials. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/cloudcredentials/export": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportCredentials"
          ]
        },
        "summary": "Export Cloud Credentials",
        "description": "The HTTP POST request to the `/api/v1/automation/cloudcredentials/export` path allows you to export cloud credentials from Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ExportCloudCredentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudCredentialsExportSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudCredentialsImportSpecCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/proxies/import": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ImportProxies"
          ]
        },
        "summary": "Import Proxies",
        "description": "The HTTP POST request to the `/api/v1/automation/proxies/import` path allows you to import backup proxies to Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ImportProxies",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxyImportSpecCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Automation` session has been created to import the proxies. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/proxies/export": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportProxies"
          ]
        },
        "summary": "Export Proxies",
        "description": "The HTTP POST request to the `/api/v1/automation/proxies/export` path allows you to export backup proxies from Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ExportProxies",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxyExportSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProxyImportSpecCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/managedServers/import": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ImportManagedServers"
          ]
        },
        "summary": "Import Servers",
        "description": "The HTTP POST request to the `/api/v1/automation/managedServers/import` path allows you to import managed servers to Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ImportManagedServers",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageServerImportSpecCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Automation` session has been created to import the servers. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/managedServers/export": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportManagedServers"
          ]
        },
        "summary": "Export Servers",
        "description": "The HTTP POST request to the `/api/v1/automation/managedServers/export` path allows you to export managed servers from Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ExportManagedServers",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageServerExportSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageServerImportSpecCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/repositories/import": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ImportRepositories"
          ]
        },
        "summary": "Import Repositories",
        "description": "The HTTP POST request to the `/api/v1/automation/repositories/import` path allows you to import backup repositories to Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ImportRepositories",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryImportSpecCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Automation` session has been created to import the repositories. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/repositories/export": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportRepositories"
          ]
        },
        "summary": "Export Repositories",
        "description": "The HTTP POST request to the `/api/v1/automation/repositories/export` path allows you to export backup repositories from Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ExportRepositories",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryExportSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryImportSpecCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/encryptionPasswords/import": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ImportEncryptionPasswords"
          ]
        },
        "summary": "Import Encryption Passwords",
        "description": "The HTTP POST request to the `/api/v1/automation/encryptionPasswords/import` path allows you to import encryption passwords to Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ImportEncryptionPasswords",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptionPasswordImportSpecCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `Automation` session has been created to import the passwords. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/encryptionPasswords/export": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportEncryptionPasswords"
          ]
        },
        "summary": "Export Encryption Passwords",
        "description": "The HTTP POST request to the `/api/v1/automation/encryptionPasswords/export` path allows you to export encryption passwords from Veeam Backup & Replication.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "ExportEncryptionPasswords",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptionPasswordExportSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionPasswordImportSpecCollection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/sessions": {
      "get": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSessions"
          ]
        },
        "summary": "Get All Automation Sessions",
        "description": "The HTTP GET request to the `/api/v1/automation/sessions` path allows you to get an array of all automation sessions performed on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllAutomationSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of sessions to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of sessions to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts sessions by one of the session parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts sessions in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters sessions by the `nameFilter` pattern. The pattern can match any session parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns sessions that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns sessions that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "endedAfterFilter",
            "description": "Returns sessions that are finished after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "endedBeforeFilter",
            "description": "Returns sessions that are finished before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters sessions by session type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters sessions by session state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "resultFilter",
            "description": "Filters sessions by session result.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESessionResult"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          },
          {
            "name": "jobIdFilter",
            "description": "Filters sessions by job ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SessionsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/sessions/{id}": {
      "get": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSessions"
          ]
        },
        "summary": "Get Automation Session",
        "description": "The HTTP GET request to the `/api/v1/automation/sessions/{id}` path allows you to get an automation session that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAutomationSession",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the session.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/sessions/{id}/logs": {
      "get": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSessions"
          ]
        },
        "summary": "Get Automation Session Logs",
        "description": "The HTTP GET request to the `/api/v1/automation/sessions/{id}/logs` path allows you to get an array of log records of an automation session that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAutomationSessionLogs",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the session.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionLogResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/automation/sessions/{id}/stop": {
      "post": {
        "tags": [
          "Automation"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StopSessions"
          ]
        },
        "summary": "Stop Automation Session",
        "description": "The HTTP POST request to the `/api/v1/automation/sessions/{id}/stop` path allows you to stop an automation session that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator.</p>",
        "operationId": "StopAutomationSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the session.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/flr": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartFlrRestore"
          ]
        },
        "summary": "Start File Restore",
        "description": "The HTTP POST request to the `/api/v1/restore/flr` path allows you to start file restore from a backup or replica of a Microsoft Windows or Linux machine. The operation starts a file restore session and mounts the machine file system to a mount point.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StartFlrMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrMountSpec"
              },
              "examples": {
                "LinuxHelperHostFlrMountSpecExample": {
                  "$ref": "#/components/examples/LinuxHelperHostFlrMountSpecExample"
                },
                "LinuxHelperApplianceFlrMountSpecExample": {
                  "$ref": "#/components/examples/LinuxHelperApplianceFlrMountSpecExample"
                },
                "LinuxOriginalHostFlrMountSpecExample": {
                  "$ref": "#/components/examples/LinuxOriginalHostFlrMountSpecExample"
                },
                "WindowsFlrMountSpecExample": {
                  "$ref": "#/components/examples/WindowsFlrMountSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "File system has been mounted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlrBrowseMountModel"
                },
                "examples": {
                  "LinuxFlrBrowseMountModelExample": {
                    "$ref": "#/components/examples/LinuxFlrBrowseMountModelExample"
                  },
                  "WindowsFlrBrowseMountModelExample": {
                    "$ref": "#/components/examples/WindowsFlrBrowseMountModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/flr/{sessionId}/unmount": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UnmountFlrRestore"
          ]
        },
        "summary": "Unmount File System",
        "description": "The HTTP POST request to the `/api/v1/restore/flr/{sessionId}/unmount` path allows you to unmount the file system from a mount point and stop a file restore session that has the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StopFlrMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Restore session has been stopped.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/entraId/tenant/deviceCode": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetEntraIdTenantRestoreDeviceCode"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get User Code for Delegated Restore of Microsoft Entra ID Items",
        "description": "The HTTP POST request to the `/api/v1/restore/entraId/tenant/deviceCode` path allows you to obtain a user code required to get credentials for delegated restore of Microsoft Entra ID items.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetEntraIdTenantRestoreDeviceCode",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantRestoreDeviceCodeSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User and device codes have been received.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestoreDeviceCodeModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/entraId/tenant/deviceCode/state": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GetEntraIdTenantRestoreDeviceCodeState"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Credentials for Delegated Restore of Microsoft Entra ID Items",
        "description": "The HTTP POST request to the `/api/v1/restore/entraId/tenant/deviceCode/state` path allows you to get credentials that are required for delegated restore of Microsoft Entra ID items. Before you request the credentials, obtain a user code using the [Get User Code for Microsoft Entra ID Item Restore](#tag/Restore/operation/GetEntraIdTenantRestoreDeviceCode) request.<p>You can use the credentials in the following requests&#58;</p> <ul><li>[Restore Microsoft Entra ID Items](#tag/BackupBrowsers/operation/RestoreEntraIdTenantItems)</li> <li>[Restore Microsoft Entra ID Item Properties](#tag/BackupBrowsers/operation/RestoreEntraIdTenantItemAttributes)</li> </ul><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetEntraIdTenantRestoreDeviceCodeState",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantRestoreDeviceCodeStateSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestoreDeviceCodeStateModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/entraId/tenant": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartEntraIDTenantRestore"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Mount Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/restore/entraId/tenant` path allows you to mount a Microsoft Entra ID tenant from its backup and start a mount session required for Microsoft Entra ID tenant restore.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StartEntraIDTenantRestore",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantStartRestoreSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tenant has been mounted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseMountModel"
                },
                "examples": {
                  "EntraIdTenantBrowseMountModelExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseMountModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/entraId/tenant/{sessionId}/stop": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StopEntraIDTenantRestore"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Unmount Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/restore/entraId/tenant/{sessionId}/stop` path allows you to unmount a Microsoft Entra ID tenant and stop a mount session that has the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StopEntraIDTenantRestore",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStopSpec"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Mount session has been stopped.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/entraId/auditLog": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartEntraIDAuditLogRestore"
          ]
        },
        "summary": "Start Microsoft Entra ID Audit Log Restore",
        "description": "The HTTP POST request to the `/api/v1/restore/entraId/auditLog` path allows you to start the Entra ID audit log restore from a backup of Microsoft Entra ID audit logs. The operation starts a file restore session and mounts the log files to a mount point.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StartEntraIDAuditLogMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnstructuredDataMountSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Log files has been mounted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/restore/entraId/auditLog/{sessionId}/unmount": {
      "post": {
        "tags": [
          "Restore"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UnmountEntraIDAuditLogRestore"
          ]
        },
        "summary": "Unmount Microsoft Entra ID Audit Logs",
        "description": "The HTTP POST request to the `/api/v1/restore/entraId/auditLog/{sessionId}/unmount` path allows you to unmount Microsoft Entra ID log files from a mount point and stop a file restore session that has the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StopEntraIDAuditLogMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Restore session has been stopped.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/dataIntegration": {
      "get": {
        "tags": [
          "Data Integration API"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewContentPublicationMounts"
          ]
        },
        "summary": "Get All Disk Publishing Mount Points",
        "description": "The HTTP GET request to the `/api/v1/dataIntegration` path allows you to get an array of mount points for disk publishing operations.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetAllContentPublicationMounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of mount points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupContentMountsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of mount points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupContentMountsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts mount points by one of the mount point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EBackupContentMountsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupContentMountsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupContentMountsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters mount points by mount point state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EBackupContentMountState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupContentMountsFilters"
            }
          },
          {
            "name": "modeFilter",
            "description": "Filters mount points by mount mode.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EBackupContentDiskPublishMode"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/BackupContentMountsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupContentMountsResult"
                },
                "examples": {
                  "BackupContentMountsResultExample": {
                    "$ref": "#/components/examples/BackupContentMountsResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/dataIntegration/publish": {
      "post": {
        "tags": [
          "Data Integration API"
        ],
        "x-veeam-authorize": {
          "claims": [
            "PublishBackupContent"
          ]
        },
        "summary": "Start Disk Publishing",
        "description": "The HTTP POST request to the `/api/v1/dataIntegration/publish` path allows you to start a disk publishing session.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "PublishBackupContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishBackupContentSpec"
              },
              "examples": {
                "PublishBackupContentSpecExample": {
                  "$ref": "#/components/examples/PublishBackupContentSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `PublishBackupContentViaMount` session has been started to publish disks. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "DataIntegrationAPIStartSessionModelExample": {
                    "$ref": "#/components/examples/DataIntegrationAPIStartSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/dataIntegration/{mountId}": {
      "get": {
        "tags": [
          "Data Integration API"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewContentPublicationMounts"
          ]
        },
        "summary": "Get Disk Publishing Mount Point",
        "description": "The HTTP GET request to the `/api/v1/dataIntegration/{mountId}` path allows you to get a disk publishing mount point that has the specified `mountID`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetContentPublicationMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupContentMountModel"
                },
                "examples": {
                  "BackupContentMountModelExample": {
                    "$ref": "#/components/examples/BackupContentMountModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/dataIntegration/{mountId}/unpublish": {
      "post": {
        "tags": [
          "Data Integration API"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UnpublishBackupContent"
          ]
        },
        "summary": "Stop Disk Publishing",
        "description": "The HTTP POST request to the `/api/v1/dataIntegration/{mountId}/unpublish` path allows you to stop publishing a mount point that has the specified `mountID`. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UnpublishBackupContent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "mountId",
            "description": "Mount point ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A `PublishBackupContentViaMount` session has been started to unpublish disks. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "SessionModelDataIntegrationAPIUnpublishExample": {
                    "$ref": "#/components/examples/DataIntegrationAPIUnpublishSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFlr"
          ]
        },
        "summary": "Get All File Restore Mount Points",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/flr` path allows you to get an array of all active file restore mount points.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetAllFlrBrowseSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of mount points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of mount points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts mount points by one of the mount point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EFlrBrowseMountFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlrBrowseMountResult"
                },
                "examples": {
                  "FlrBrowseMountResultExample": {
                    "$ref": "#/components/examples/FlrBrowseMountResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFlr"
          ]
        },
        "summary": "Get File Restore Mount Point",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/flr/{sessionId}` path allows you to get a file restore mount point that was created by a restore session that has the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetFlrBrowseSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlrBrowseMountModel"
                },
                "examples": {
                  "LinuxFlrBrowseMountModelExample": {
                    "$ref": "#/components/examples/LinuxFlrBrowseMountModelExample"
                  },
                  "WindowsFlrBrowseMountModelExample": {
                    "$ref": "#/components/examples/WindowsFlrBrowseMountModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/browse": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFlr"
          ]
        },
        "summary": "Browse File System",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/browse` path allows you to browse file system items (drives, folders, files and links) available in a restore session that has the specified `sessionId`.<p>You can use this request in the following cases:<li>To browse the file system before you restore an item</li><li>To check the item state (changed, not changed, and so on) after you have compared the item in the backup and on the production machine</li></p><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseFlrMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrBrowseFolderSpec"
              },
              "examples": {
                "DrivesFlrBrowseFolderSpecExample": {
                  "$ref": "#/components/examples/DrivesFlrBrowseFolderSpecExample"
                },
                "LinuxRootFlrBrowseFolderSpecExample": {
                  "$ref": "#/components/examples/LinuxRootFlrBrowseFolderSpecExample"
                },
                "WindowsFolderFlrBrowseFolderSpecExample": {
                  "$ref": "#/components/examples/WindowsFolderFlrBrowseFolderSpecExample"
                },
                "LinuxFolderFlrBrowseFolderSpecExample": {
                  "$ref": "#/components/examples/LinuxFolderFlrBrowseFolderSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlrBrowseFolderModel"
                },
                "examples": {
                  "WindowsFlrBrowseFolderModelExample": {
                    "$ref": "#/components/examples/WindowsFlrBrowseFolderModelExample"
                  },
                  "LinuxFlrBrowseFolderModelExample": {
                    "$ref": "#/components/examples/LinuxFlrBrowseFolderModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/compareAttributes": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFlr"
          ]
        },
        "summary": "Compare Attributes",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/compareAttributes` path allows you to compare attributes of file system items (drives, folders, files and links) from a restore session that has the specified `sessionId` with attributes of original items. <p> <div class=\"note\"><strong>NOTE</strong><br>The operation is allowed for Microsoft Windows machines only.</div><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "WindowsFlrBrowseCompareAttributes",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrCompareAttributesSpec"
              },
              "examples": {
                "FlrCompareAttributesSpecExample": {
                  "$ref": "#/components/examples/FlrCompareAttributesSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlrCompareAttributesModel"
                },
                "examples": {
                  "FlrCompareAttributesModelExample": {
                    "$ref": "#/components/examples/FlrCompareAttributesModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/compareToProduction": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFlr"
          ]
        },
        "summary": "Compare Files and Folders",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/compareToProduction` path allows you to compare file system items (drives, folders, files and links) on the production machine with the items available in a restore session that has the specified `sessionId`. After the comparison completes, check the comparison results using the [Browse Files and Folders](#tag/Backup-Browser/operation/BrowseFlrMount) request.<p> <div class=\"note\"><strong>NOTE</strong><br>The operation is allowed for Microsoft Windows machines only.</div><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "WindowsFlrBrowseCompareToProduction",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrCompareToProductionSpec"
              },
              "examples": {
                "FlrCompareToProductionSpecExample": {
                  "$ref": "#/components/examples/FlrCompareToProductionSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/search": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "FlrSearchFor"
          ]
        },
        "summary": "Search for Files and Folders",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/search` path allows you to create a search task to find required file system items (drives, folders, files and links) available in a restore session that has the specified `sessionId`. <p>To get the search results, use the [Browse Search Results](#tag/Backup-Browsers/operation/FlrBrowseSearchResult) request. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "FlrStartSearchFor",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrStartSearchForSpec"
              },
              "examples": {
                "FlrStartSearchForSpecExample": {
                  "$ref": "#/components/examples/FlrStartSearchForSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `FlrSearch` task has been created to search for file system items. To check the progress, track the task `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                },
                "examples": {
                  "FlrSearchTaskModelExample": {
                    "$ref": "#/components/examples/FlrSearchTaskModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/search/{taskId}/browse": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "FlrSearchFor"
          ]
        },
        "summary": "Browse Search Results",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/search/{taskId}/browse` path allows you to browse search results of a search task that has the specified `taskId`. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "FlrBrowseSearchResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taskId",
            "description": "ID of the search task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrSearchForResultSpec"
              },
              "examples": {
                "FlrSearchForResultSpecExample": {
                  "$ref": "#/components/examples/FlrSearchForResultSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlrSearchForResultModel"
                },
                "examples": {
                  "FlrSearchForResultModelExample": {
                    "$ref": "#/components/examples/FlrSearchForResultModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/restore": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RestoreFlrItem"
          ]
        },
        "summary": "Restore Files and Folders to Original Location",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/restore` path allows you to restore file system items (folders, files and links) to the original location.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "FlrMountRestore",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrRestoreSpec"
              },
              "examples": {
                "WindowsFlrRestoreSpecExample": {
                  "$ref": "#/components/examples/WindowsFlrRestoreSpecExample"
                },
                "LinuxFlrRestoreSpecExample": {
                  "$ref": "#/components/examples/LinuxFlrRestoreSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `FlrRestore` task has been created to restore the items. To check the progress, track the task `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                },
                "examples": {
                  "FlrRestoreTaskModelExample": {
                    "$ref": "#/components/examples/FlrRestoreTaskModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/restoreTo": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RestoreFlrItem"
          ]
        },
        "summary": "Restore Files and Folders to Another Location",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/restoreTo` path allows you to restore file system items (folders, files and links) to another location.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "FlrMountRestoreTo",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrRestoreToSpec"
              },
              "examples": {
                "WindowsFlrRestoreToSpecExample": {
                  "$ref": "#/components/examples/WindowsFlrRestoreToSpecExample"
                },
                "LinuxFlrRestoreToSpecExample": {
                  "$ref": "#/components/examples/LinuxFlrRestoreToSpecExample"
                },
                "AgentFlrRestoreToSpecExample": {
                  "$ref": "#/components/examples/AgentFlrRestoreToSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `FlrRestore` task has been created to restore the items. To check the progress, track the task `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                },
                "examples": {
                  "FlrRestoreTaskModelExample": {
                    "$ref": "#/components/examples/FlrRestoreTaskModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/prepareDownload": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DownloadFlrItem"
          ]
        },
        "summary": "Prepare Files and Folders for Download",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/prepareDownload` path allows you to prepare files and folders for download and pack them into a ZIP file. In response, a download task is created. <p>To download the ZIP file, specify the task ID in the [Download Files and Folders](#tag/Backup-Browsers/operation/DownloadFlrItem) request. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "PrepareFlrItemDownload",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrStartDownloadSpec"
              },
              "examples": {
                "FlrStartDownloadSpecExample": {
                  "$ref": "#/components/examples/FlrStartDownloadSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `FlrDownload` task has been created to restore the items. To check the progress, track the task `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                },
                "examples": {
                  "FlrDownloadTaskModelExample": {
                    "$ref": "#/components/examples/FlrDownloadTaskModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/{sessionId}/prepareDownload/{taskId}/download": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DownloadFlrItem"
          ]
        },
        "summary": "Download Files and Folders",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/{sessionId}/prepareDownload/{taskId}/download` path allows you to download a ZIP archive with files and folders of a download task that has the specified `taskId`. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "DownloadFlrItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taskId",
            "description": "ID of the download task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrStartDownloadSpec"
              },
              "examples": {
                "FlrStartDownloadSpecExample": {
                  "$ref": "#/components/examples/FlrStartDownloadSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/unstructuredData": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFLRUnstructuredData"
          ]
        },
        "summary": "Get All Unstructured Data Mount Points",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/flr/unstructuredData` path allows you to get an array of all active unstructured data mount points.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetAllUnstructuredDataFLRBrowseSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of mount points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of mount points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts mount points by one of the mount point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EUnstructuredDataFlrBrowseMountFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/unstructuredData/{sessionId}": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFLRUnstructuredData"
          ]
        },
        "summary": "Get Unstructured Data Mount Point",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/flr/unstructuredData/{sessionId}` path allows you to get an unstructured data mount point that was created by a restore session that has the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetUnstructuredDataFlrBrowseSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/browse": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseFLRUnstructuredData"
          ]
        },
        "summary": "Browse Unstructured Data File System",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/browse` path allows you to browse file system items (drives, folders, files and links) available in a restore session that has the specified `sessionId`.<p>You can use this request in the following cases:<li>To browse the file system before you restore an item</li><li>To check the item state (changed, not changed, and so on) after you have compared the item in the backup and on the production machine</li></p><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseFLRUnstructuredDataMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnstructuredDataFlrBrowseFolderSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnstructuredDataFlrBrowseFolderModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/search": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UnstructuredDataFlrSearchFor"
          ]
        },
        "summary": "Search for Files and Folders in Unstructured Data Source",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/search` path allows you to create a search task to find required file system items (drives, folders, files and links) available in a restore session that has the specified `sessionId`. <p>To get the search results, use the [Browse Search Results](#tag/Backup-Browsers/operation/FlrBrowseSearchResult) request. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UnstructuredDataFlrStartSearchFor",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrStartSearchForSpec"
              },
              "examples": {
                "FlrStartSearchForSpecExample": {
                  "$ref": "#/components/examples/FlrStartSearchForSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `FlrSearch` task has been created to search for file system items. To check the progress, track the task `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                },
                "examples": {
                  "FlrSearchTaskModelExample": {
                    "$ref": "#/components/examples/FlrSearchTaskModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/search/{taskId}/browse": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UnstructuredDataFlrSearchFor"
          ]
        },
        "summary": "Browse Search Results",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/search/{taskId}/browse` path allows you to browse search results of a search task that has the specified `taskId`. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UnstructuredDataFlrBrowseSearchResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taskId",
            "description": "ID of the search task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlrSearchForResultSpec"
              },
              "examples": {
                "FlrSearchForResultSpecExample": {
                  "$ref": "#/components/examples/FlrSearchForResultSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlrSearchForResultModel"
                },
                "examples": {
                  "FlrSearchForResultModelExample": {
                    "$ref": "#/components/examples/FlrSearchForResultModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/copyTo": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CopyUnstructuredDataFlrItem"
          ]
        },
        "summary": "Copy Files and Folders to Specific Folder",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/flr/unstructuredData/{sessionId}/copyTo` path allows you to copy file system items (folders, files and links) to the machine where the Veeam Backup & Replication console is installed or to a network shared folder.<p>When copying symbolic links, Veeam Backup & Replication copies the content that the links point to.</p><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UnstructuredDataFlrCopyTo",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileBackupFLRCopyToSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "An `FlrRestore` task has been created to restore the items. To check the progress, track the task `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                },
                "examples": {
                  "FlrRestoreTaskModelExample": {
                    "$ref": "#/components/examples/FlrRestoreTaskModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIdTenant"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Mount Points of All Entra ID Tenants",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/entraIdTenant` path allows you to get an array of all active mount points created for all Microsoft Entra ID tenants. <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetAllEntraIdTenantBrowseSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of mount points to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of mount points to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts mount points by one of the mount point parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EFlrBrowseMountFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/FlrBrowseMountFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseMountResult"
                },
                "examples": {
                  "EntraIdTenantBrowseMountResultExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseMountResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIdTenant"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Mount Point of Microsoft Entra ID Tenant",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}` path allows you to get a Microsoft Entra ID tenant mount point created by a mount session that has the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetEntraIdTenantBrowseSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseMountModel"
                },
                "examples": {
                  "EntraIdTenantBrowseMountModelExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseMountModelExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/restorePoints": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIdTenantBackupRestorePoints"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Restore Points of Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/restorePoints` path allows you to get an array of restore points available in a Microsoft Entra ID tenant backup that has the specified `backupId`. This request helps you find the restore point that you want to restore tenant items from.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseEntraIdTenantBackupRestorePoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantRestorePointSpec"
              },
              "examples": {
                "EntraIdTenantRestorePointSpecExample": {
                  "$ref": "#/components/examples/EntraIdTenantRestorePointSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestorePointsResult"
                },
                "examples": {
                  "EntraIdTenantRestorePointsResultExample": {
                    "$ref": "#/components/examples/EntraIdTenantRestorePointsResultExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/browse": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIdTenant"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Microsoft Entra ID Items",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/browse` path allows you to browse Microsoft Entra ID items available in a backup that has the specified `backupId`. Use this request to find the items that you want to restore. In the request body, you must specify an item type&#58; user, group, administrative unit, role or application.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseEntraIdTenantMount",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
              },
              "examples": {
                "EntraIdTenantBrowseSpecUserExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecUserExample"
                },
                "EntraIdTenantBrowseSpecGroupExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecGroupExample"
                },
                "EntraIdTenantBrowseSpecAdminUnitExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecAdminUnitExample"
                },
                "EntraIdTenantBrowseSpecRoleExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecRoleExample"
                },
                "EntraIdTenantBrowseSpecApplicationExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecApplicationExample"
                },
                "EntraIdTenantBrowseSpecConditionalAccessPolicyExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecConditionalAccessPolicyExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseResult"
                },
                "examples": {
                  "EntraIdTenantBrowseResultUserExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultUserExample"
                  },
                  "EntraIdTenantBrowseResultGroupExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultGroupExample"
                  },
                  "EntraIdTenantBrowseResultAdminUnitExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultAdminUnitExample"
                  },
                  "EntraIdTenantBrowseResultRoleExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultRoleExample"
                  },
                  "EntraIdTenantBrowseResultApplicationExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultApplicationExample"
                  },
                  "EntraIdTenantBrowseResultConditionalAccessPolicyExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultConditionalAccessPolicyExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/browse/{itemId}": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIdTenantItems"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Microsoft Entra ID Item",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/browse/{itemId}` path allows you to get a specific Microsoft Entra ID item available in a tenant backup that has the specified `backupId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseEntraIdTenantItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "description": "Item ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantItemTypeSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
                },
                "examples": {
                  "EntraIdTenantBrowseModelUserExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseModelUserExample"
                  },
                  "EntraIdTenantBrowseModelGroupExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseModelGroupExample"
                  },
                  "EntraIdTenantBrowseModelAdminUnitExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseModelAdminUnitExample"
                  },
                  "EntraIdTenantBrowseModelRoleExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseModelRoleExample"
                  },
                  "EntraIdTenantBrowseModelApplicationExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseModelApplicationExample"
                  },
                  "EntraIdTenantBrowseModelConditionalAccessPolicyExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseModelConditionalAccessPolicyExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/browse/{itemId}/restorePoints": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIdTenantRestorePoints"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Restore Points of Microsoft Entra ID Item",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/browse/{itemId}/restorePoints` path allows you to get restore points that were created for a Microsoft Entra ID item that has the specified `itemId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseEntraIdTenantRestorePoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "description": "Item ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantRestorePointSpec"
              },
              "examples": {
                "EntraIdTenantRestorePointSpecExample": {
                  "$ref": "#/components/examples/EntraIdTenantRestorePointSpecExample"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestorePointsResult"
                },
                "examples": {
                  "EntraIdTenantRestorePointsResultExample": {
                    "$ref": "#/components/examples/EntraIdTenantRestorePointsResultExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/validate": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ValidateEntraIdTenantItems"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Validate Microsoft Entra ID Items",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/validate` path allows you to validate that Microsoft Entra ID items specified in the request body are available in a specified restore point.<p>In the response body, you receive an array of items that are missing in the restore point. To browse restore points that are available for each of the missing items, use the [Get Restore Points of Microsoft Entra ID Item](#tag/BackupBrowsers/operation/BrowseEntraIdTenantRestorePoints) request.</p><p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ValidateEntraIdTenantItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantValidateSpec"
              },
              "examples": {
                "EntraIdTenantValidateSpecExample": {
                  "$ref": "#/components/examples/EntraIdTenantValidateSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantValidateModel"
                },
                "examples": {
                  "EntraIdTenantValidateModelExample": {
                    "$ref": "#/components/examples/EntraIdTenantValidateModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/checkProductionItems": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RestoreEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Check Microsoft Entra ID Items in Production",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/checkProductionItems` path allows you to check if specified Entra ID items from a mounted tenant backup are available in production.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "CheckEntraIdTenantProductionItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantCheckProductionItemsSpec"
              },
              "examples": {
                "EntraIdTenantCheckProductionItemsSpecExample": {
                  "$ref": "#/components/examples/EntraIdTenantCheckProductionItemsSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantCheckProductionItemsModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/passwords/generate": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "GenerateEntraIdTenantPassword"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Generate Microsoft Entra ID User Passwords",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/passwords/generate` path allows you to generate passwords for Microsoft Entra ID users that you want to restore.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GenerateEntraIdTenantPassword",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantGeneratePasswordSpec"
              },
              "examples": {
                "EntraIdTenantGeneratePasswordSpecExample": {
                  "$ref": "#/components/examples/EntraIdTenantGeneratePasswordSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantGeneratedPasswordsModel"
                },
                "examples": {
                  "EntraIdTenantGeneratedPasswordsModelExample": {
                    "$ref": "#/components/examples/EntraIdTenantGeneratedPasswordsModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreItems": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RestoreEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Restore Microsoft Entra ID Items",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreItems` path allows you to restore Microsoft Entra ID items from a mount point with the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "RestoreEntraIdTenantItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantItemRestoreSpec"
              },
              "examples": {
                "EntraIdTenantItemRestoreSpecExample": {
                  "$ref": "#/components/examples/EntraIdTenantItemRestoreSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A `RestoreTenant` session has been created to restore tenant items. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestoreSessionModel"
                },
                "examples": {
                  "EntraIdTenantRestoreSessionModelExample": {
                    "$ref": "#/components/examples/EntraIdTenantRestoreSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreItemAttributes": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "RestoreEntraIdTenantItemAttributes"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Restore Microsoft Entra ID Item Properties",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreItemAttributes` path allows you to restore Microsoft Entra ID item properties from a mount point with the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "RestoreEntraIdTenantItemAttributes",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantRestoreItemAttributesSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A `RestoreTenant` session has been created to restore item properties. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestoreSessionModel"
                },
                "examples": {
                  "EntraIdTenantRestoreSessionModelExample": {
                    "$ref": "#/components/examples/EntraIdTenantRestoreSessionModelExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/compare": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CompareEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Compare Microsoft Entra ID Item Properties",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/compare` path allows you to compare the properties of a Microsoft Entra ID item available in a mount session that has the specified `sessionId`.<p>You can compare item properties either between two restore points or between a restore point and production. To compare the item to production, do not specify `newRestorePointId`.</p><p>This request is synchronous, meaning that the client will wait until comparison results are ready. Alternatively, you can use an asynchronous request that returns a comparison session immediately so the client can continue execution, and you can process the comparison results later when the session changes its state to `Success`. For details on the asynchronous request, see [Start Comparing Microsoft Entra ID Item Properties](#tag/BackupBrowsers/operation/StartCompareEntraIdTenantItem).</p> <p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "CompareEntraIdTenantItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantItemComparisonSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantItemComparisonModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/startCompare": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CompareEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Start Comparing Microsoft Entra ID Item Properties",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/startCompare` path allows you to start comparing the properties of a Microsoft Entra ID item available in a mount session that has the specified `sessionId`.<p>You can compare item properties either between two restore points or between a restore point and production. To compare the item to production, do not specify `newRestorePointId`.</p><p>This request is asynchronous, meaning that the request returns a comparison session immediately so the client can continue execution, and you can process the comparison results later when the session changes its state to `Success`. To get the comparison results, send the [Get Comparison Results for Microsoft Entra ID Items](#tag/BackupBrowsers/operation/GetCompareEntraIdTenantItemResult) request. For details on synchronous request, see [Compare Microsoft Entra ID Item Properties](#tag/BackupBrowsers/operation/CompareEntraIdTenantItem).</p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StartCompareEntraIdTenantItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantItemComparisonSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantItemStartComparisonModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/compare/{compareSessionId}/result": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CompareEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Comparison Results for Microsoft Entra ID Items",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/compare/{compareSessionId}/result` path allows you to get comparison results for Microsoft Entra ID items, initiated by a comparison session with the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetCompareEntraIdTenantItemResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "compareSessionId",
            "description": "Comparison session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantItemComparisonSessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/startRecursiveCompare": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CompareEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Start Comparing Microsoft Entra ID Conditional Access Policy",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/StartRecursiveCompare` path allows you to start a recursive comparison of the properties of a Microsoft Entra ID conditional access policy available in a mount session that has the specified `sessionId`.<p>You can compare item properties either between two restore points or between a restore point and production. To compare the item to production, do not specify `newRestorePointId`.</p><p>This request is asynchronous, meaning that the request returns a comparison session immediately so the client can continue execution, and you can process the comparison results later when the session changes its state to `Success`. To get the comparison results, send the [Get Comparison Results for Microsoft Entra ID Conditional Access Policy](#tag/BackupBrowsers/operation/GetRecursiveComparisonEntraIdTenantItemResult) request. </p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>\"",
        "operationId": "StartRecursiveComparisonEntraIdTenantItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantItemRecursiveComparisonSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantItemStartRecursiveComparisonModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/recursiveCompare/{compareSessionId}/result": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CompareEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Comparison Results for Microsoft Entra ID Conditional Access Policy",
        "description": "The HTTP GET request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/recursiveCompare/{compareSessionId}/result` path allows you to get comparison results for a Microsoft Entra ID conditional access policy, initiated by a comparison session with the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "GetRecursiveComparisonEntraIdTenantItemResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "compareSessionId",
            "description": "Comparison session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantItemRecursiveComparisonSessionModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/export": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ExportEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Export Microsoft Entra ID Items",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/export` path allows you to export Microsoft Entra ID items from backup that has the specified `backupId` to an XML or CSV file. The exported file contains all item properties that are available in the backup.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "ExportEntraIdTenantItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "toXml",
            "description": "If `true`, the format of the output file is XML, otherwise — CSV.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
              },
              "examples": {
                "EntraIdTenantBrowseSpecUserExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecUserExample"
                },
                "EntraIdTenantBrowseSpecGroupExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecGroupExample"
                },
                "EntraIdTenantBrowseSpecAdminUnitExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecAdminUnitExample"
                },
                "EntraIdTenantBrowseSpecRoleExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecRoleExample"
                },
                "EntraIdTenantBrowseSpecApplicationExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecApplicationExample"
                },
                "EntraIdTenantBrowseSpecConditionalAccessPolicyExample": {
                  "$ref": "#/components/examples/EntraIdTenantBrowseSpecConditionalAccessPolicyExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadUser": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UploadEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Upload Microsoft Entra ID Users",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadUser` path allows you to upload a CSV file and get an array of users, which is ready to be specified in the body of the restore request. The CSV file must contain a list of IDs or user principal names of Microsoft Entra ID users.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UploadEntraIdTenantUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "description": "Comma-separated list of user IDs. For users, you can also specify a list of user principle names.",
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseResult"
                },
                "examples": {
                  "EntraIdTenantBrowseResultUserExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultUserExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadGroup": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UploadEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Upload Microsoft Entra ID Groups",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadGroup` path allows you to upload a CSV file and get an array of groups, which is ready to be specified in the body of the restore request. The CSV file must contain a list of IDs of Microsoft Entra ID groups.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UploadEntraIdTenantGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "description": "Comma-separated list of group IDs.",
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseResult"
                },
                "examples": {
                  "EntraIdTenantBrowseResultGroupExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultGroupExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadAdministrativeUnit": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UploadEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Upload Microsoft Entra ID Administrative Units",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadAdministrativeUnit` path allows you to upload a CSV file and get an array of administrative units, which is ready to be specified in the body of the restore request. The CSV file must contain a list of IDs of Microsoft Entra ID administrative units.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UploadEntraIdTenantAdministrativeUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "description": "Comma-separated list of administrative unit IDs.",
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseResult"
                },
                "examples": {
                  "EntraIdTenantBrowseResultAdminUnitExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultAdminUnitExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadRole": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UploadEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Upload Microsoft Entra ID Roles",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadRole` path upload a CSV file and get an array of roles, which is ready to be specified in the body of the restore request. The CSV file must contain a list of IDs of Microsoft Entra ID roles.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UploadEntraIdTenantRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "description": "Comma-separated list of role IDs.",
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseResult"
                },
                "examples": {
                  "EntraIdTenantBrowseResultRoleExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultRoleExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadApplication": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UploadEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Upload Microsoft Entra ID Applications",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadApplication` path allows you to upload a CSV file and get an array of applications, which is ready to be specified in the body of the restore request. The CSV file must contain a list of IDs of Microsoft Entra ID applications.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UploadEntraIdTenantApplication",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "description": "Comma-separated list of application IDs.",
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseResult"
                },
                "examples": {
                  "EntraIdTenantBrowseResultApplicationExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultApplicationExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadConditionalAccessPolicy": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UploadEntraIdTenantItem"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Upload Microsoft Entra ID Conditional Access Policies",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{backupId}/uploadConditionalAccessPolicy` path allows you to upload a CSV file and get an array of conditional access policies, which is ready to be specified in the body of the restore request. The CSV file must contain a list of IDs of Microsoft Entra ID conditional access policies.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "UploadEntraIdTenantConditionalAccessPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "backupId",
            "description": "Backup ID.",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Comma-separated list of IDs of conditional access policies that you want to upload.",
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantBrowseResult"
                },
                "examples": {
                  "EntraIdTenantBrowseResultConditionalAccessPolicyExample": {
                    "$ref": "#/components/examples/EntraIdTenantBrowseResultConditionalAccessPolicyExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreSessions": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIDTenantRestoreSessions"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get All Restore Sessions of Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreSessions` path allows you to get an array of restore sessions that were started for a Microsoft Entra ID tenant mount point with the specified `sessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseEntraIDTenantRestoreSessions",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestoreSessionsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreSessions/{restoreSessionId}": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIDTenantRestoreSessions"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Restore Session of Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/restoreSessions/{restoreSessionId}` path allows you to get a restore session that has the specified `restoreSessionId`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseEntraIDTenantRestoreSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "restoreSessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestoreSessionModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreSessions/{restoreSessionId}/logs": {
      "get": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "BrowseEntraIDTenantRestoreSessions"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Get Restore Session Logs of Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreSessions/{restoreSessionId}/logs` path allows you to get restore session logs of a Microsoft Entra ID tenant.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "BrowseEntraIDTenantRestoreSessionLogs",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "restoreSessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntraIdTenantRestoreSessionLogsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreSessions/{restoreSessionId}/stop": {
      "post": {
        "tags": [
          "Backup Browsers"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StopEntraIdTenantItemRestoreSession"
          ],
          "roles": [
            "NoLicense"
          ]
        },
        "summary": "Stop Restore Session of Microsoft Entra ID Tenant",
        "description": "The HTTP POST request to the `/api/v1/backupBrowser/entraIdTenant/{sessionId}/restoreSessions/{restoreSessionId}/stop` path allows you to stop a restore session of a Microsoft Entra ID tenant.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Restore Operator.</p>",
        "operationId": "StopEntraIdTenantItemRestoreSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "sessionId",
            "description": "Mount session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "restoreSessionId",
            "description": "Restore session ID.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewTasks"
          ]
        },
        "summary": "Get All Tasks",
        "description": "The HTTP GET request to the `/api/v1/tasks` path allows you to get an array of restore tasks performed on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetAllTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of tasks to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of tasks to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts tasks by one of the session parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ETaskFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts tasks in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters tasks by the `nameFilter` pattern. The pattern can match any task parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns tasks that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns tasks that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "endedAfterFilter",
            "description": "Returns tasks that are finished after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "endedBeforeFilter",
            "description": "Returns tasks that are finished before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters tasks by task type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ETaskType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters tasks by task state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ETaskState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          },
          {
            "name": "resultFilter",
            "description": "Filters tasks by task result.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ETaskResult"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/TaskFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewTasks"
          ]
        },
        "summary": "Get Task",
        "description": "The HTTP GET request to the `/api/v1/task/{id}` path allows you to get a restore task that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Backup Operator, Veeam Restore Operator, Veeam Backup Viewer, Veeam Tape Operator.</p>",
        "operationId": "GetTask",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/tasks/{id}/stop": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StopTasks"
          ]
        },
        "summary": "Stop Task",
        "description": "The HTTP POST request to the `/api/v1/tasks/{id}/stop` path allows you to stop a restore task that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator.</p>",
        "operationId": "StopTask",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the task.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/kmsServers": {
      "get": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewKMServers"
          ]
        },
        "summary": "Get All KMS Servers",
        "description": "The HTTP GET request to the `/api/v1/kmsServers` path allows you to get an array of all KMS servers that are added to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetAllKMSServers",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of KMS servers to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/KMSFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of KMS servers to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/KMSFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts KMS servers by one of the KMS server parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EKMSFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/KMSFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts KMS servers in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/KMSFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters KMS servers by the `nameFilter` pattern. The pattern can match any KMS server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/KMSFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters KMS servers by KMS server type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EKeyManagementServerType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/KMSFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyManagementServersResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateKMServers"
          ]
        },
        "summary": "Add KMS Server",
        "description": "The HTTP POST request to the `/api/v1/kmsServers` path allows you to add a KMS server to the backup infrastructure.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "CreateKMSServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyManagementServerBaseSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "KMS server has been added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyManagementServerBaseModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/kmsServers/{id}": {
      "get": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewKMServers"
          ]
        },
        "summary": "Get KMS Server",
        "description": "The HTTP GET request to the `/api/v1/kmsServers/{id}` path allows you to get a KMS server that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetKMSServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the KMS server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyManagementServerBaseModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "UpdateKMServers"
          ]
        },
        "summary": "Edit KMS Server",
        "description": "The HTTP PUT request to the `/api/v1/kmsServers/{id}` path allows you to edit a KMS server that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "UpdateKMSServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the KMS server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyManagementServerBaseModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "KMS server has been updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyManagementServerBaseModel"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "DeleteKMServers"
          ]
        },
        "summary": "Remove KMS Server",
        "description": "The HTTP DELETE request to the `/api/v1/kmsServers/{id}` path allows you to remove a KMS server that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "DeleteKMSServer",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the KMS server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "KMS server has been removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/kmsServers/{id}/changeCertificate": {
      "post": {
        "tags": [
          "Encryption"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ChangeKMServerCertificate"
          ]
        },
        "summary": "Change KMS Server Certificate",
        "description": "The HTTP POST request to the `/api/v1/kmsServers/{id}/changeCertificate` path allows you to change a certificate of a KMS server that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "ChangeKMServerCertificate",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the KMS server.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KMSServerChangeCertificateSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "KMS server certificate has been changed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptySuccessResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/malwareDetection/events": {
      "get": {
        "tags": [
          "Malware Detection"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSuspiciousActivityEvents"
          ]
        },
        "summary": "Get All Malware Events",
        "description": "The HTTP GET request to the `/api/v1/malwareDetection/events` path allows you to get an array of all malware events created on the backup server.<p>**Available to**&#58; Veeam Backup Administrator, Incident API Operator.</p>",
        "operationId": "ViewSuspiciousActivityEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of events to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of events to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts events by one of the event parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESuspiciousActivityEventsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts events in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "typeFilter",
            "description": "Filters events by event type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESuspiciousActivityType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "detectedAfterTimeUtcFilter",
            "description": "Returns events created after the specified time, in UTC.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "detectedBeforeTimeUtcFilter",
            "description": "Returns events created before the specified time, in UTC.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "backupObjectIdFilter",
            "description": "Filters events by backup object ID.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters events by state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESuspiciousActivityState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "sourceFilter",
            "description": "Filters events by source type.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESuspiciousActivitySourceType"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "severityFilter",
            "description": "Filters events by severity.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "createdByFilter",
            "description": "Filters events by the `createdBy` pattern. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          },
          {
            "name": "engineFilter",
            "description": "Filters events by the `engine` pattern. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/SuspiciousActivityEventsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuspiciousActivityEventsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Malware Detection"
        ],
        "x-veeam-authorize": {
          "claims": [
            "CreateSuspiciousActivityEvent"
          ]
        },
        "summary": "Create Malware Event",
        "description": "The HTTP POST request to the `/api/v1/malwareDetection/events` path allows you to create a new malware event.<p>**Available to**&#58; Veeam Backup Administrator, Incident API Operator.</p>",
        "operationId": "CreateSuspiciousActivityEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspiciousActivityEventSpec"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Malware event has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuspiciousActivityEventsResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/malwareDetection/events/{id}": {
      "get": {
        "tags": [
          "Malware Detection"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewSuspiciousActivityEvents"
          ]
        },
        "summary": "Get Malware Event",
        "description": "The HTTP GET request to the `/api/v1/malwareDetection/events/{id}` path allows you to get a malware event that has the specified `id`. <p>**Available to**&#58; Veeam Backup Administrator, Incident API Operator.</p>",
        "operationId": "GetSuspiciousActivityEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the event.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuspiciousActivityEventModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/malwareDetection/yaraRules": {
      "get": {
        "tags": [
          "Malware Detection"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewYaraRules"
          ]
        },
        "summary": "Get YARA Rules",
        "description": "The HTTP GET request to the `/api/v1/malwareDetection/yaraRules` path allows you to get YARA rules located in the Veeam Backup & Replication installation folder. The default path is %ProgramFiles%\\Veeam\\Backup and Replication\\Backup\\YaraRules. <p>**Available to**&#58; Veeam Backup Administrator, Incident API Operator.</p>",
        "operationId": "GetYaraRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YaraRulesResult"
                },
                "examples": {
                  "YaraRulesResultExample": {
                    "$ref": "#/components/examples/YaraRulesResultExample"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/malwareDetection/scanBackup": {
      "post": {
        "tags": [
          "Malware Detection"
        ],
        "x-veeam-authorize": {
          "claims": [
            "StartMalwareBackupScan"
          ]
        },
        "summary": "Scan Backups with Antivirus or YARA Rules",
        "description": "The HTTP POST request to the `/api/v1/malwareDetection/scanBackup` allows you to scan backups with antivirus or YARA rules.<p>**Available to**&#58; Veeam Backup Administrator, Incident API Operator.</p>",
        "operationId": "StartMalwareBackupScan",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MalwareBackupScanSpec"
              },
              "examples": {
                "MalwareBackupScanSpecExample": {
                  "$ref": "#/components/examples/MalwareBackupScanSpecExample"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A `SureBackup` session has been created to scan the backup. To check the progress, track the session `state`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionModel"
                },
                "examples": {
                  "SureBackupSessionExample": {
                    "$ref": "#/components/examples/SureBackupSessionExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/authorization/events": {
      "get": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewAuthorizationEvents"
          ]
        },
        "summary": "Get All Authorization Events",
        "description": "The HTTP GET request to the `/api/v1/authorization/events` path allows you to get an array of security-related events. These events cover the following operation types&#58;<ul> <li>Approved and rejected requests</li> <li>Updated four-eyes authorization settings</li> <li>Updated settings for users and user groups</li> <li>Assigned roles</li> <li>Added or deleted users and user groups</li></ul> <p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetAllAuthorizationEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "skip",
            "description": "Number of authorization events to skip.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "limit",
            "description": "Maximum number of authorization events to return.",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "orderColumn",
            "description": "Sorts authorization events by one of the authorization events parameters.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EAuthorizationEventsFiltersOrderColumn"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "orderAsc",
            "description": "If `true`, sorts authorization events in the ascending order by the `orderColumn` parameter.",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "nameFilter",
            "description": "Filters authorization events by the `nameFilter` pattern. The pattern can match any authorization event parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "createdAfterFilter",
            "description": "Returns authorization events that are created after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "createdBeforeFilter",
            "description": "Returns authorization events that are created before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "processedAfterFilter",
            "description": "Returns authorization events that are processed after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "processedBeforeFilter",
            "description": "Returns authorization events that are processed before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "stateFilter",
            "description": "Filters authorization events by state.",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EAuthorizationEventState"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "createdByFilter",
            "description": "Filters authorization events created by the specified user.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "processedByFilter",
            "description": "Filters authorization events processed by the specified user.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "expireBeforeFilter",
            "description": "Returns authorization events that expire before the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          },
          {
            "name": "expireAfterFilter",
            "description": "Returns authorization events that expire after the specified date and time.",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "x-veeam-spec": {
              "$ref": "#/components/schemas/AuthorizationEventsFilters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationEventsResult"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/authorization/events/{id}": {
      "get": {
        "tags": [
          "Security"
        ],
        "x-veeam-authorize": {
          "claims": [
            "ViewAuthorizationEvents"
          ]
        },
        "summary": "Get Authorization Event",
        "description": "The HTTP GET request to the `/api/v1/authorization/events/{id}` path allows you to get an authorization event that has the specified `id`.<p>**Available to**&#58; Veeam Backup Administrator, Veeam Security Administrator.</p>",
        "operationId": "GetAuthorizationEvent",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParam"
          },
          {
            "name": "id",
            "description": "ID of the authorization event.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationEventModel"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Deleted": {
        "description": "Removed.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EmptySuccessResponse"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request. This error is related to POST/PUT requests. The request body is malformed, incomplete or otherwise invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. The authorization header has been expected but not found (or found but is expired).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. The user sending the request does not have adequate privileges to access one or more objects specified in the request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found. No object was found with the path parameter specified in the request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "Method not allowed. Indicates that the server knows the request method, but the target resource doesn't support this method.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error. The request has been received but could not be completed because of an internal error at the server side.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "ServerTimeModel": {
        "required": [
          "serverTime"
        ],
        "type": "object",
        "properties": {
          "serverTime": {
            "description": "Current date and time on the backup server.",
            "type": "string",
            "format": "date-time"
          },
          "timeZone": {
            "description": "Time zone where the backup server is located.",
            "type": "string"
          }
        }
      },
      "ServerInfoModel": {
        "required": [
          "vbrId",
          "name",
          "buildVersion",
          "patches",
          "databaseVendor",
          "sqlServerEdition",
          "sqlServerVersion",
          "databaseSchemaVersion",
          "databaseContentVersion"
        ],
        "type": "object",
        "properties": {
          "vbrId": {
            "description": "Veeam Backup & Replication installation ID.",
            "type": "string"
          },
          "name": {
            "description": "Full DNS name or IP address of the backup server.",
            "type": "string"
          },
          "buildVersion": {
            "description": "Veeam Backup & Replication build number.",
            "type": "string"
          },
          "patches": {
            "description": "Array of Veeam Backup & Replication cumulative patches installed on the backup server.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "databaseVendor": {
            "description": "Database engine (Microsoft SQL Server or PostgreSQL).",
            "type": "string"
          },
          "sqlServerEdition": {
            "description": "Database server edition.",
            "type": "string"
          },
          "sqlServerVersion": {
            "description": "Database server version.",
            "type": "string"
          },
          "databaseSchemaVersion": {
            "description": "Database schema version.",
            "type": "string"
          },
          "databaseContentVersion": {
            "description": "Database content version.",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "The error code is a string that uniquely identifies an error condition and should be understood by programs that detect and handle errors by type.",
            "enum": [
              "AccessDenied",
              "ExpiredToken",
              "InvalidToken",
              "InvalidURI",
              "MethodNotAllowed",
              "NotFound",
              "NotImplemented",
              "ServiceUnavailable",
              "UnexpectedContent",
              "UnknownError"
            ]
          },
          "message": {
            "type": "string",
            "description": "The error message contains a generic description of the error condition in English. It is intended for a human audience."
          },
          "resourceId": {
            "type": "string",
            "description": "ID of the object that is involved in the error (or empty)."
          }
        }
      },
      "PaginationResult": {
        "description": "Pagination settings.",
        "required": [
          "total",
          "count"
        ],
        "type": "object",
        "properties": {
          "total": {
            "description": "Total number of results.",
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "description": "Number of returned results.",
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "description": "Number of skipped results.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmptySuccessResponse": {
        "type": "object",
        "description": "Empty success response (200, 201, 204)."
      },
      "SessionsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ESessionsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "endedAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "endedBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ESessionType"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/ESessionState"
          },
          "resultFilter": {
            "$ref": "#/components/schemas/ESessionResult"
          },
          "jobIdFilter": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ESessionsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "SessionType",
          "CreationTime",
          "EndTime",
          "State",
          "Result"
        ]
      },
      "SessionsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of sessions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "SessionModel": {
        "required": [
          "jobId",
          "creationTime",
          "id",
          "name",
          "sessionType",
          "state",
          "usn"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the session.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the session.",
            "type": "string"
          },
          "jobId": {
            "description": "ID of the job or job related activity.",
            "type": "string",
            "format": "uuid"
          },
          "sessionType": {
            "$ref": "#/components/schemas/ESessionType"
          },
          "creationTime": {
            "description": "Date and time when the session was created.",
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "description": "Date and time when the session was ended.",
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/ESessionState"
          },
          "progressPercent": {
            "description": "Progress percentage of the session.",
            "type": "integer"
          },
          "result": {
            "$ref": "#/components/schemas/SessionResultModel"
          },
          "resourceId": {
            "description": "ID of the resource.",
            "type": "string",
            "format": "uuid"
          },
          "resourceReference": {
            "description": "URI of the resource.",
            "type": "string"
          },
          "parentSessionId": {
            "description": "ID of the parent session.",
            "type": "string",
            "format": "uuid"
          },
          "usn": {
            "description": "Update sequence number.",
            "type": "integer",
            "format": "int64"
          },
          "platformName": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformId": {
            "description": "ID of the resource platform. The value is always *00000000-0000-0000-0000-000000000000* except for custom platforms.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SessionProgress": {
        "description": "Details on the progress of the session.",
        "type": "object",
        "required": [
          "duration",
          "processingRate",
          "bottleneck",
          "processedSize",
          "readSize",
          "transferredSize"
        ],
        "nullable": true,
        "properties": {
          "duration": {
            "description": "Time from the session start till the current moment or job end.",
            "type": "string"
          },
          "processingRate": {
            "description": "Average speed of data processing.",
            "type": "string",
            "nullable": true
          },
          "bottleneck": {
            "$ref": "#/components/schemas/ESessionBottleneckType"
          },
          "processedSize": {
            "description": "Total size of all disks processed in the session.",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "readSize": {
            "description": "Amount of data read from the datastore by the source-side Data Mover prior to applying compression and deduplication.",
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transferredSize": {
            "description": "Amount of data transferred from the source-side Veeam Data Mover to the target-side Veeam Data Mover after applying compression and deduplication.",
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SessionResultModel": {
        "description": "Session result.",
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ESessionResult"
          },
          "message": {
            "description": "Message that explains the session result.",
            "type": "string"
          },
          "isCanceled": {
            "description": "If `true`, the session has been canceled.",
            "type": "boolean"
          }
        }
      },
      "ESessionType": {
        "description": "Type of the session.",
        "type": "string",
        "enum": [
          "Infrastructure",
          "BackupJob",
          "Automation",
          "ConfigurationBackup",
          "PublishBackupContentViaMount",
          "RepositoryMaintenance",
          "RepositoryEvacuate",
          "InfrastructureItemDeletion",
          "RestoreVm",
          "InstantRecovery",
          "FirstClassDiskInstantRestore",
          "AzureApplianceDeploy",
          "QuickMigration",
          "FileLevelRestore",
          "LinuxFileLevelRestore",
          "ReplicaJob",
          "ConfigurationResynchronize",
          "Failover",
          "PlannedFailover",
          "PermanentFailover",
          "UndoFailover",
          "Failback",
          "CommitFailback",
          "UndoFailback",
          "SwitchReplicaToProduction",
          "CloudDirectorVmRestore",
          "CloudDirectorVAppRestore",
          "MalwareDetection",
          "FirstClassDiskQuickMigration",
          "EntraIdRestore",
          "BackupCopyJob",
          "SecurityComplianceAnalyzer",
          "FileServerSave",
          "SureBackup",
          "NasRestore",
          "UnstructuredDataBrowse",
          "UnstructuredDownloadMeta",
          "DeleteBackup",
          "BackgroundOperation",
          "EntraIdRescanRepository"
        ]
      },
      "ESessionState": {
        "description": "State of the session.",
        "type": "string",
        "enum": [
          "Stopped",
          "Starting",
          "Stopping",
          "Working",
          "Pausing",
          "Resuming",
          "WaitingTape",
          "Idle",
          "Postprocessing",
          "WaitingRepository",
          "WaitingSlot"
        ]
      },
      "ESessionBottleneckType": {
        "description": "Session bottleneck type.",
        "enum": [
          "NotDefined",
          "None",
          "Throttling",
          "SourceProxy",
          "SourceNetwork",
          "SourceWan",
          "TargetProxy",
          "TargetNetwork",
          "TargetWan",
          "Source",
          "Proxy",
          "Network",
          "Target",
          "TargetDisk"
        ],
        "type": "string"
      },
      "ETaskLogRecordStatus": {
        "description": "Status of the log record.",
        "type": "string",
        "enum": [
          "None",
          "Succeeded",
          "Warning",
          "Failed"
        ]
      },
      "ESessionResult": {
        "description": "Result status.",
        "type": "string",
        "enum": [
          "None",
          "Success",
          "Warning",
          "Failed"
        ]
      },
      "SessionLogResult": {
        "description": "Log of the session.",
        "type": "object",
        "properties": {
          "totalRecords": {
            "description": "Total number of records.",
            "type": "integer"
          },
          "records": {
            "description": "Array of log records.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionLogRecordModel"
            }
          }
        }
      },
      "SessionLogRecordModel": {
        "description": "Log record of the session.",
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the log record.",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/ETaskLogRecordStatus"
          },
          "startTime": {
            "description": "Date and time when the operation was started.",
            "type": "string",
            "format": "date-time"
          },
          "updateTime": {
            "description": "Date and time when the log record was updated.",
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "description": "Title of the log record.",
            "type": "string"
          },
          "description": {
            "description": "Description of the log record.",
            "type": "string"
          }
        }
      },
      "TaskSessionsResult": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "description": "Array of task sessions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSessionModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ETaskSessionType": {
        "description": "Task session type.",
        "type": "string",
        "enum": [
          "Backup",
          "Restore",
          "Antivirus",
          "Replica"
        ]
      },
      "TaskSessionModel": {
        "description": "Task session model.",
        "type": "object",
        "required": [
          "id",
          "type",
          "sessionId",
          "sessionType",
          "creationTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Task session ID.",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/ETaskSessionType"
          },
          "sessionId": {
            "type": "string",
            "description": "Session ID.",
            "format": "uuid"
          },
          "sessionType": {
            "$ref": "#/components/schemas/ESessionType"
          },
          "creationTime": {
            "description": "Date and time when the task session was created.",
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "description": "Date and time when the task session ended.",
            "type": "string",
            "format": "date-time"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/BackupTaskSessionModel"
          },
          {
            "$ref": "#/components/schemas/ReplicaTaskSessionModel"
          },
          {
            "$ref": "#/components/schemas/RestoreTaskSessionModel"
          },
          {
            "$ref": "#/components/schemas/AntivirusTaskSessionModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Backup": "#/components/schemas/BackupTaskSessionModel",
            "Restore": "#/components/schemas/RestoreTaskSessionModel",
            "Antivirus": "#/components/schemas/AntivirusTaskSessionModel",
            "Replica": "#/components/schemas/ReplicaTaskSessionModel"
          }
        }
      },
      "BackupTaskSessionModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskSessionModel"
          },
          {
            "type": "object",
            "required": [
              "name",
              "state",
              "usn"
            ],
            "properties": {
              "name": {
                "description": "Name of the object.",
                "type": "string"
              },
              "restorePointId": {
                "type": "string",
                "description": "Restore point ID.",
                "format": "uuid"
              },
              "restorePointReference": {
                "description": "Restore point reference in the `/api/v1/restorePoints/{restorePointId}` format.",
                "type": "string"
              },
              "algorithm": {
                "$ref": "#/components/schemas/ETaskSessionAlgorithm"
              },
              "repositoryId": {
                "description": "Repository ID.",
                "type": "string",
                "format": "uuid"
              },
              "usn": {
                "description": "Update sequence number.",
                "type": "integer",
                "format": "int64"
              },
              "state": {
                "$ref": "#/components/schemas/ESessionState"
              },
              "result": {
                "$ref": "#/components/schemas/SessionResultModel"
              },
              "progress": {
                "$ref": "#/components/schemas/SessionProgress"
              }
            }
          }
        ]
      },
      "ReplicaTaskSessionModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskSessionModel"
          },
          {
            "type": "object",
            "required": [
              "name",
              "state",
              "usn"
            ],
            "properties": {
              "name": {
                "description": "Name of the object.",
                "type": "string"
              },
              "replicaPointId": {
                "type": "string",
                "format": "uuid"
              },
              "replicaPointReference": {
                "type": "string"
              },
              "algorithm": {
                "$ref": "#/components/schemas/ETaskSessionAlgorithm"
              },
              "usn": {
                "description": "Update sequence number.",
                "type": "integer",
                "format": "int64"
              },
              "state": {
                "$ref": "#/components/schemas/ESessionState"
              },
              "result": {
                "$ref": "#/components/schemas/SessionResultModel"
              },
              "progress": {
                "$ref": "#/components/schemas/SessionProgress"
              }
            }
          }
        ]
      },
      "RestoreTaskSessionModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskSessionModel"
          },
          {
            "type": "object",
            "required": [
              "name",
              "state",
              "usn"
            ],
            "properties": {
              "name": {
                "description": "Name of the object.",
                "type": "string"
              },
              "usn": {
                "description": "Update sequence number.",
                "type": "integer",
                "format": "int64"
              },
              "state": {
                "$ref": "#/components/schemas/ESessionState"
              },
              "result": {
                "$ref": "#/components/schemas/SessionResultModel"
              }
            }
          }
        ]
      },
      "EAntivirusScanState": {
        "description": "State of the antivirus scan.",
        "enum": [
          "NotStarted",
          "InProgress",
          "Finished"
        ],
        "type": "string"
      },
      "EAntivirusScanResult": {
        "description": "Antivirus scan result.",
        "enum": [
          "None",
          "Clean",
          "Infected",
          "Failed",
          "Canceled",
          "Inconclusive"
        ],
        "type": "string"
      },
      "EAntivirusScanType": {
        "description": "Type of antivirus scan.",
        "enum": [
          "Antivirus",
          "Yara"
        ],
        "type": "string"
      },
      "AntivirusTaskSessionModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskSessionModel"
          },
          {
            "type": "object",
            "required": [
              "name",
              "scanType",
              "scanResult",
              "scanState"
            ],
            "properties": {
              "name": {
                "description": "Name of the object.",
                "type": "string"
              },
              "restorePointId": {
                "type": "string",
                "format": "uuid"
              },
              "restorePointReference": {
                "type": "string"
              },
              "scanType": {
                "$ref": "#/components/schemas/EAntivirusScanType"
              },
              "scanResult": {
                "$ref": "#/components/schemas/EAntivirusScanResult"
              },
              "scanState": {
                "$ref": "#/components/schemas/EAntivirusScanState"
              },
              "antivirusName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ETaskSessionAlgorithm": {
        "description": "Task session algorithm type.",
        "enum": [
          "Full",
          "Increment",
          "None",
          "Synthetic"
        ],
        "type": "string"
      },
      "TaskSessionsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of task sessions to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of task sessions to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ETaskSessionsFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts task sessions in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters sessions by the `nameFilter` pattern. The pattern can match any session parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ETaskSessionType"
          },
          "sessionTypeFilter": {
            "$ref": "#/components/schemas/ESessionType"
          },
          "createdAfterFilter": {
            "description": "Returns task sessions that are created after the specified date and time.",
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "description": "Returns task sessions created before the specified date and time.",
            "type": "string",
            "format": "date-time"
          },
          "endedAfterFilter": {
            "description": "Returns task sessions that finished after the specified date and time.",
            "type": "string",
            "format": "date-time"
          },
          "endedBeforeFilter": {
            "description": "Returns task sessions that finished before the specified date and time.",
            "type": "string",
            "format": "date-time"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/ESessionState"
          },
          "resultFilter": {
            "$ref": "#/components/schemas/ESessionResult"
          },
          "scanTypeFilter": {
            "$ref": "#/components/schemas/EAntivirusScanType"
          },
          "scanResultFilter": {
            "$ref": "#/components/schemas/EAntivirusScanResult"
          },
          "scanStateFilter": {
            "$ref": "#/components/schemas/EAntivirusScanState"
          },
          "sessionIdFilter": {
            "description": "Returns the task sessions with the specified session ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "InstanceWorkloadsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "description": "Number of workloads to skip.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of workloads to return.",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EInstanceWorkloadsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean",
            "description": "If `true`, sorts workloads in the ascending order by the `orderColumn` parameter."
          },
          "nameFilter": {
            "type": "string",
            "description": "Filters workloads by the `nameFilter` pattern. The pattern can match any session parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both."
          },
          "hostNameFilter": {
            "type": "string",
            "description": "Filters workloads by hostname."
          },
          "usedInstancesNumberFilter": {
            "type": "number",
            "description": "Filters workloads by the number of consumed instances.",
            "format": "double"
          },
          "typeFilter": {
            "type": "string",
            "description": "Filters workloads by workload type."
          },
          "instanceIdFilter": {
            "type": "string",
            "description": "Filters workloads by instance ID.",
            "format": "uuid"
          }
        }
      },
      "SocketWorkloadsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "description": "Number of workloads to skip.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of results to return.",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ESocketWorkloadsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean",
            "description": "If `true`, sorts workloads in the ascending order by the `orderColumn` parameter."
          },
          "nameFilter": {
            "type": "string",
            "description": "Filters workloads by name."
          },
          "hostNameFilter": {
            "type": "string",
            "description": "Filters workloads by hostname."
          },
          "hostIdFilter": {
            "type": "string",
            "description": "Filters workloads by host ID.",
            "format": "uuid"
          },
          "socketsNumberFilter": {
            "type": "integer",
            "description": "Filters workloads by the number of sockets they use."
          },
          "coresNumberFilter": {
            "type": "integer",
            "description": "Filters workloads by the number of CPU cores they use."
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ESocketLicenseObjectType"
          }
        }
      },
      "ETaskSessionsFiltersOrderColumn": {
        "description": "Sorts task sessions according to one of the parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "SessionType",
          "CreationTime",
          "EndTime",
          "State",
          "Result",
          "ScanState",
          "ScanResult"
        ]
      },
      "EInstanceWorkloadsFiltersOrderColumn": {
        "description": "Sorts licensed workloads according to one of the parameters.",
        "type": "string",
        "enum": [
          "Name",
          "HostName",
          "UsedInstancesNumber",
          "Type",
          "InstanceId"
        ]
      },
      "ESocketWorkloadsFiltersOrderColumn": {
        "description": "Sorts licensed hosts according to one of the parameters.",
        "type": "string",
        "enum": [
          "Name",
          "HostName",
          "HostId",
          "SocketsNumber",
          "CoresNumber",
          "Type"
        ]
      },
      "CertificateModel": {
        "description": "Certificate settings.",
        "required": [
          "issuedBy",
          "issuedTo",
          "keyAlgorithm",
          "keySize",
          "serialNumber",
          "subject",
          "thumbprint",
          "validBy",
          "validFrom"
        ],
        "type": "object",
        "properties": {
          "thumbprint": {
            "description": "Thumbprint of the certificate.",
            "type": "string"
          },
          "serialNumber": {
            "description": "Serial number of the certificate.",
            "type": "string"
          },
          "keyAlgorithm": {
            "description": "Key algorithm of the certificate.",
            "type": "string"
          },
          "keySize": {
            "description": "Key size of the certificate.",
            "type": "string"
          },
          "subject": {
            "description": "Subject of the certificate.",
            "type": "string"
          },
          "issuedTo": {
            "description": "Acquirer of the certificate.",
            "type": "string"
          },
          "issuedBy": {
            "description": "Issuer of the certificate.",
            "type": "string"
          },
          "validFrom": {
            "description": "Date and time the certificate is valid from.",
            "type": "string",
            "format": "date-time"
          },
          "validBy": {
            "description": "Expiration date and time of the certificate.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthorizationCodeModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "description": "String that is used to obtain an access token. Lifetime of the authorization code is 60 seconds.",
            "type": "string"
          }
        }
      },
      "TokenLoginSpec": {
        "required": [
          "grant_type"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "$ref": "#/components/schemas/ELoginGrantType"
          },
          "username": {
            "description": "User name. Required if the `grant_type` value is `password`.",
            "type": "string"
          },
          "password": {
            "description": "Password. Required if the `grant_type` value is `password`.",
            "type": "string",
            "format": "password"
          },
          "refresh_token": {
            "description": "Refresh token. Required if the `grant_type` value is `refresh_token`.",
            "type": "string"
          },
          "code": {
            "type": "string",
            "description": "Authorization code. Required if the `grant_type` value is `authorization_code`."
          },
          "use_short_term_refresh": {
            "description": "If `true`, a short-term refresh token is used. Lifetime of the short-term refresh token is the access token lifetime plus 15 minutes.",
            "type": "boolean"
          },
          "vbr_token": {
            "description": "Veeam Backup & Replication platform service token.",
            "type": "string"
          }
        }
      },
      "ELoginGrantType": {
        "description": "Authorization grant type.<p>Available values:<ul> <li>`password` — used to obtain an access token by providing a user name and password.</li> <li>`refresh_token` — used to refresh an expired or lost access token by providing a refresh token.</li> <li>`authorization_code` — used to obtain an access token by providing an authorization code.</li> <li>`vbr_token` — used to obtain an access token by providing a Veeam Backup & Replication token. This grant type is only used in a restricted mode for integration with Veeam Backup & Replication.</li></ul>",
        "type": "string",
        "enum": [
          "password",
          "refresh_token",
          "authorization_code",
          "vbr_token"
        ],
        "default": "password"
      },
      "TokenModel": {
        "required": [
          ".expires",
          ".issued",
          "access_token",
          "expires_in",
          "refresh_token",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "description": "String that represents authorization issued to the client. It must be specified in all requests. An access token can be used multiple times, but its lifetime is 15 minutes.",
            "type": "string"
          },
          "token_type": {
            "description": "Type of the access token.",
            "type": "string"
          },
          "refresh_token": {
            "description": "String that is used to obtain a new access token if the current access token expires or becomes lost. A refresh token can be used only once, and its default lifetime is 14 days.",
            "type": "string"
          },
          "expires_in": {
            "description": "Lifetime of the access token in seconds.",
            "type": "integer",
            "format": "int32"
          },
          ".issued": {
            "description": "Date and time when the access token is issued.",
            "type": "string",
            "format": "date-time"
          },
          ".expires": {
            "description": "Date and time when the access token expires.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HostConnectionSpec": {
        "required": [
          "serverName",
          "type"
        ],
        "type": "object",
        "properties": {
          "serverName": {
            "description": "Full DNS name or IP address of the server.",
            "type": "string"
          },
          "credentialsStorageType": {
            "$ref": "#/components/schemas/ECredentialsStorageType"
          },
          "credentialsId": {
            "description": "ID of a credentials record used to connect to the server.",
            "type": "string",
            "format": "uuid"
          },
          "singleUseCredentials": {
            "$ref": "#/components/schemas/LinuxCredentialsSpec"
          },
          "type": {
            "$ref": "#/components/schemas/EManagedServerType"
          },
          "port": {
            "description": "Port used to communicate with the server.",
            "type": "integer"
          }
        }
      },
      "ERepositoryType": {
        "description": "Repository type.",
        "type": "string",
        "enum": [
          "WinLocal",
          "LinuxLocal",
          "Smb",
          "Nfs",
          "AzureBlob",
          "AzureDataBox",
          "AzureArchive",
          "AmazonS3",
          "AmazonSnowballEdge",
          "AmazonS3Glacier",
          "S3Compatible",
          "GoogleCloud",
          "IBMCloud",
          "ExtendableRepository",
          "DDBoost",
          "ExaGrid",
          "HPStoreOnceIntegration",
          "Quantum",
          "WasabiCloud",
          "LinuxHardened",
          "Infinidat",
          "Fujitsu"
        ]
      },
      "ManagedServersFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EManagedServersFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/EManagedServerType"
          },
          "viTypeFilter": {
            "$ref": "#/components/schemas/EViHostType"
          }
        }
      },
      "EManagedServersFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "Description"
        ]
      },
      "ManagedServersResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of managed servers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManagedServerModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EManagedServersStatus": {
        "description": "Availability status.",
        "type": "string",
        "enum": [
          "Available",
          "Unavailable"
        ]
      },
      "ManagedServerModel": {
        "required": [
          "description",
          "id",
          "name",
          "type",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the server.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Full DNS name or IP address of the server.",
            "type": "string"
          },
          "description": {
            "description": "Description of the server.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EManagedServerType"
          },
          "status": {
            "$ref": "#/components/schemas/EManagedServersStatus"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/WindowsHostModel"
          },
          {
            "$ref": "#/components/schemas/LinuxHostModel"
          },
          {
            "$ref": "#/components/schemas/ViHostModel"
          },
          {
            "$ref": "#/components/schemas/CloudDirectorHostModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "WindowsHost": "#/components/schemas/WindowsHostModel",
            "LinuxHost": "#/components/schemas/LinuxHostModel",
            "ViHost": "#/components/schemas/ViHostModel",
            "CloudDirectorHost": "#/components/schemas/CloudDirectorHostModel"
          }
        }
      },
      "EManagedServerType": {
        "description": "Type of the server.",
        "type": "string",
        "enum": [
          "WindowsHost",
          "LinuxHost",
          "ViHost",
          "CloudDirectorHost"
        ]
      },
      "ManagedServerSpec": {
        "required": [
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Full DNS name or IP address of the server.",
            "type": "string"
          },
          "description": {
            "description": "Description of the server.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EManagedServerType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/WindowsHostSpec"
          },
          {
            "$ref": "#/components/schemas/LinuxHostSpec"
          },
          {
            "$ref": "#/components/schemas/ViHostSpec"
          },
          {
            "$ref": "#/components/schemas/CloudDirectorHostSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "WindowsHost": "#/components/schemas/WindowsHostSpec",
            "LinuxHost": "#/components/schemas/LinuxHostSpec",
            "ViHost": "#/components/schemas/ViHostSpec",
            "CloudDirectorHost": "#/components/schemas/CloudDirectorHostSpec"
          }
        }
      },
      "WindowsHostSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerSpec"
          },
          {
            "type": "object",
            "required": [
              "credentialsId"
            ],
            "properties": {
              "credentialsId": {
                "description": "ID of the credentials used to connect to the server.",
                "type": "string",
                "format": "uuid"
              },
              "networkSettings": {
                "$ref": "#/components/schemas/WindowsHostPortsModel"
              }
            }
          }
        ]
      },
      "WindowsHostModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerModel"
          },
          {
            "type": "object",
            "required": [
              "credentialsId"
            ],
            "properties": {
              "credentialsId": {
                "description": "ID of the credentials used to connect to the server.",
                "type": "string",
                "format": "uuid"
              },
              "networkSettings": {
                "$ref": "#/components/schemas/WindowsHostPortsModel"
              }
            }
          }
        ]
      },
      "WindowsHostPortsModel": {
        "description": "Veeam Backup & Replication components installed on the server and ports used by the components.",
        "type": "object",
        "properties": {
          "components": {
            "description": "Array of Veeam Backup & Replication components.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WindowsHostComponentPortModel"
            }
          },
          "portRangeStart": {
            "description": "Start port used for data transfer.",
            "type": "integer"
          },
          "portRangeEnd": {
            "description": "End port used for data transfer.",
            "type": "integer"
          },
          "serverSide": {
            "description": "If `true`, the server is run on this side.",
            "type": "boolean"
          }
        }
      },
      "WindowsHostComponentPortModel": {
        "description": "Ports used by Veeam Backup & Replication components.",
        "required": [
          "componentName",
          "port"
        ],
        "type": "object",
        "properties": {
          "componentName": {
            "$ref": "#/components/schemas/EWindowsHostComponentType"
          },
          "port": {
            "description": "Port used by the component.",
            "type": "integer"
          }
        }
      },
      "EWindowsHostComponentType": {
        "description": "Veeam Backup & Replication component.",
        "type": "string",
        "enum": [
          "Transport",
          "Nfs",
          "HvIntegration",
          "DeployerSvc",
          "WanAccelerator",
          "Tape",
          "CloudGate",
          "CloudServiceInvoker",
          "CloudServiceRemoting",
          "RestoreProxy",
          "EpAgent",
          "EpAgentSqlLocalDB",
          "EpAgentSharedManagementObjects",
          "EpAgentSqlSysClrTypes",
          "AgentConfigureService",
          "VawRedist",
          "ValRedist",
          "GuestControl",
          "FileSystemVssIntegration",
          "VssHwSnapshotProvider",
          "Cdp",
          "VamRedist"
        ]
      },
      "LinuxHostSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerSpec"
          }
        ],
        "type": "object",
        "required": [
          "credentialsStorageType",
          "sshFingerprint"
        ],
        "properties": {
          "credentialsStorageType": {
            "$ref": "#/components/schemas/ECredentialsStorageType"
          },
          "credentialsId": {
            "description": "Permanent credentials ID.",
            "type": "string",
            "format": "uuid"
          },
          "singleUseCredentials": {
            "$ref": "#/components/schemas/LinuxCredentialsSpec"
          },
          "sshSettings": {
            "$ref": "#/components/schemas/LinuxHostSSHSettingsModel"
          },
          "sshFingerprint": {
            "description": "SSH key fingerprint used to verify the server identity. For details on how to get the fingerprint, see [Request TLS Certificate or SSH Fingerprint](#tag/Connection/operation/GetConnectionCertificate).",
            "type": "string"
          }
        }
      },
      "LinuxHostModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerModel"
          },
          {
            "type": "object",
            "required": [
              "credentialsStorageType"
            ],
            "properties": {
              "credentialsStorageType": {
                "$ref": "#/components/schemas/ECredentialsStorageType"
              },
              "credentialsId": {
                "description": "Permanent credentials ID.",
                "type": "string",
                "format": "uuid"
              },
              "singleUseCredentials": {
                "$ref": "#/components/schemas/LinuxCredentialsSpec"
              },
              "sshSettings": {
                "$ref": "#/components/schemas/LinuxHostSSHSettingsModel"
              }
            }
          }
        ]
      },
      "ECredentialsStorageType": {
        "description": "Credentials type used to connect to the Linux server.",
        "type": "string",
        "enum": [
          "Permanent",
          "SingleUse"
        ]
      },
      "LinuxHostSSHSettingsModel": {
        "description": "SSH settings.",
        "type": "object",
        "properties": {
          "sshTimeOutMs": {
            "description": "SSH timeout, in ms. If a task targeted at the server is inactive after the timeout, the task is terminated.",
            "type": "integer"
          },
          "portRangeStart": {
            "description": "Start port used for data transfer.",
            "type": "integer"
          },
          "portRangeEnd": {
            "description": "End port used for data transfer.",
            "type": "integer"
          },
          "serverSide": {
            "description": "If `true`, the server is run on this side.",
            "type": "boolean"
          },
          "managementPort": {
            "description": "Port used as a control channel from the Veeam Backup & Replication console to the Linux server.",
            "type": "integer"
          }
        }
      },
      "ViHostModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerModel"
          },
          {
            "type": "object",
            "required": [
              "credentialsId",
              "port"
            ],
            "properties": {
              "credentialsId": {
                "description": "ID of the credentials used to connect to the server.",
                "type": "string",
                "format": "uuid"
              },
              "viHostType": {
                "$ref": "#/components/schemas/EViHostType"
              },
              "port": {
                "description": "Port used to communicate with the server.",
                "type": "integer"
              }
            }
          }
        ]
      },
      "EViHostType": {
        "description": "Type of the VMware vSphere server.",
        "type": "string",
        "enum": [
          "ESX",
          "ESXi",
          "VC"
        ]
      },
      "ViHostSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerSpec"
          },
          {
            "type": "object",
            "required": [
              "credentialsId"
            ],
            "properties": {
              "credentialsId": {
                "description": "ID of the credentials used to connect to the server.",
                "type": "string",
                "format": "uuid"
              },
              "port": {
                "description": "Port used to communicate with the server.",
                "type": "integer"
              },
              "certificateThumbprint": {
                "description": "Certificate thumbprint used to verify the server identity. For details on how to get the thumbprint, see [Request TLS Certificate or SSH Fingerprint](#tag/Connection/operation/GetConnectionCertificate).",
                "type": "string"
              }
            }
          }
        ]
      },
      "CloudDirectorHostDiscoverySpec": {
        "required": [
          "credentialsId",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "description": "URL of the VMware Cloud Director server.",
            "type": "string"
          },
          "credentialsId": {
            "description": "ID of the credentials used to connect to the server.",
            "type": "string",
            "format": "uuid"
          },
          "certificateThumbprint": {
            "description": "Certificate thumbprint used to verify the server identity. For details on how to get the thumbprint, see [Request TLS Certificate or SSH Fingerprint](#tag/Connection/operation/GetConnectionCertificate).",
            "type": "string"
          }
        }
      },
      "CloudDirectorHostDiscoveryResult": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of VMware vCenter Servers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudDirectorHostDiscoveryModel"
            }
          }
        }
      },
      "CloudDirectorHostDiscoveryModel": {
        "type": "object",
        "required": [
          "viServerName"
        ],
        "properties": {
          "viServerName": {
            "description": "VMware vCenter Server name.",
            "type": "string"
          },
          "certificateThumbprint": {
            "description": "Certificate thumbprint used to verify the server identity.",
            "type": "string"
          }
        }
      },
      "CloudDirectorHostSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerSpec"
          },
          {
            "type": "object",
            "required": [
              "credentialsId",
              "viServers"
            ],
            "properties": {
              "credentialsId": {
                "description": "ID of the credentials used to connect to the server.",
                "type": "string",
                "format": "uuid"
              },
              "url": {
                "type": "string"
              },
              "certificateThumbprint": {
                "type": "string"
              },
              "viServers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CloudDirectorViHostSpec"
                }
              }
            }
          }
        ]
      },
      "CloudDirectorViHostSpec": {
        "type": "object",
        "required": [
          "viServerName",
          "viCredentialsId"
        ],
        "properties": {
          "viServerName": {
            "type": "string"
          },
          "viCredentialsId": {
            "type": "string",
            "format": "uuid"
          },
          "certificateThumbprint": {
            "type": "string"
          }
        }
      },
      "CloudDirectorHostModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedServerModel"
          },
          {
            "type": "object",
            "required": [
              "credentialsId",
              "viServers"
            ],
            "properties": {
              "credentialsId": {
                "description": "ID of the credentials used to connect to the server.",
                "type": "string",
                "format": "uuid"
              },
              "url": {
                "type": "string"
              },
              "certificateThumbprint": {
                "type": "string"
              },
              "viServers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CloudDirectorViHostModel"
                }
              }
            }
          }
        ]
      },
      "CloudDirectorViHostModel": {
        "type": "object",
        "required": [
          "viServerName",
          "viCredentialsId",
          "cloudDirectorViServerName"
        ],
        "properties": {
          "viServerName": {
            "type": "string"
          },
          "certificateThumbprint": {
            "type": "string"
          },
          "viCredentialsId": {
            "type": "string",
            "format": "uuid"
          },
          "cloudDirectorViServerName": {
            "type": "string"
          }
        }
      },
      "RepositoriesFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of repositories to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of repositories to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ERepositoryFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts repositories in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "hostIdFilter": {
            "description": "Filters repositories by ID of the backup server.",
            "type": "string",
            "format": "uuid"
          },
          "pathFilter": {
            "description": "Filters repositories by path to the folder where backup files are stored.",
            "type": "string"
          },
          "vmbApiFilter": {
            "description": "Filters repositories by VM Backup API parameters converted to the base64 string. To obtain the string, call the `GetApiProductInfoString` method of VM Backup API.",
            "type": "string"
          },
          "vmbApiPlatform": {
            "description": "Filters repositories by ID of a platform that you use to communicate with VM Backup API.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ERepositoryFiltersOrderColumn": {
        "description": "Sorts repositories by one of the repository parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Description",
          "Type",
          "Host",
          "Path"
        ]
      },
      "RepositoriesResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of backup repositories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepositoryModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "RepositoryBehaviorFilters": {
        "type": "object",
        "properties": {
          "overwriteOwner": {
            "type": "boolean"
          }
        }
      },
      "VmbApiFilterModel": {
        "type": "object",
        "required": [
          "protocolVersion",
          "assemblyVersion",
          "productId",
          "versionFlags"
        ],
        "properties": {
          "protocolVersion": {
            "type": "integer"
          },
          "assemblyVersion": {
            "type": "string"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "versionFlags": {
            "type": "integer"
          }
        }
      },
      "RepositorySpec": {
        "required": [
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/WindowsLocalStorageSpec"
          },
          {
            "$ref": "#/components/schemas/LinuxLocalStorageSpec"
          },
          {
            "$ref": "#/components/schemas/NfsStorageSpec"
          },
          {
            "$ref": "#/components/schemas/SmbStorageSpec"
          },
          {
            "$ref": "#/components/schemas/AzureBlobStorageSpec"
          },
          {
            "$ref": "#/components/schemas/AzureDataBoxStorageSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonS3StorageSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonSnowballEdgeStorageSpec"
          },
          {
            "$ref": "#/components/schemas/S3CompatibleStorageSpec"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudStorageSpec"
          },
          {
            "$ref": "#/components/schemas/IBMCloudStorageSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonS3GlacierStorageSpec"
          },
          {
            "$ref": "#/components/schemas/AzureArchiveStorageSpec"
          },
          {
            "$ref": "#/components/schemas/WasabiCloudStorageSpec"
          },
          {
            "$ref": "#/components/schemas/LinuxHardenedStorageSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "WinLocal": "#/components/schemas/WindowsLocalStorageSpec",
            "LinuxLocal": "#/components/schemas/LinuxLocalStorageSpec",
            "Smb": "#/components/schemas/SmbStorageSpec",
            "Nfs": "#/components/schemas/NfsStorageSpec",
            "AzureBlob": "#/components/schemas/AzureBlobStorageSpec",
            "AzureDataBox": "#/components/schemas/AzureDataBoxStorageSpec",
            "AzureArchive": "#/components/schemas/AzureArchiveStorageSpec",
            "AmazonS3": "#/components/schemas/AmazonS3StorageSpec",
            "AmazonSnowballEdge": "#/components/schemas/AmazonSnowballEdgeStorageSpec",
            "AmazonS3Glacier": "#/components/schemas/AmazonS3GlacierStorageSpec",
            "S3Compatible": "#/components/schemas/S3CompatibleStorageSpec",
            "GoogleCloud": "#/components/schemas/GoogleCloudStorageSpec",
            "IBMCloud": "#/components/schemas/IBMCloudStorageSpec",
            "WasabiCloud": "#/components/schemas/WasabiCloudStorageSpec",
            "LinuxHardened": "#/components/schemas/LinuxHardenedStorageSpec"
          }
        }
      },
      "RepositoriesRescanSpec": {
        "type": "object",
        "required": [
          "repositoryIds"
        ],
        "properties": {
          "repositoryIds": {
            "description": "Array of repository IDs to rescan.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "RepositoryModel": {
        "required": [
          "description",
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the backup repository.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/WindowsLocalStorageModel"
          },
          {
            "$ref": "#/components/schemas/LinuxLocalStorageModel"
          },
          {
            "$ref": "#/components/schemas/NfsStorageModel"
          },
          {
            "$ref": "#/components/schemas/SmbStorageModel"
          },
          {
            "$ref": "#/components/schemas/AzureBlobStorageModel"
          },
          {
            "$ref": "#/components/schemas/AzureDataBoxStorageModel"
          },
          {
            "$ref": "#/components/schemas/AmazonS3StorageModel"
          },
          {
            "$ref": "#/components/schemas/AmazonSnowballEdgeStorageModel"
          },
          {
            "$ref": "#/components/schemas/S3CompatibleStorageModel"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudStorageModel"
          },
          {
            "$ref": "#/components/schemas/IBMCloudStorageModel"
          },
          {
            "$ref": "#/components/schemas/AmazonS3GlacierStorageModel"
          },
          {
            "$ref": "#/components/schemas/AzureArchiveStorageModel"
          },
          {
            "$ref": "#/components/schemas/WasabiCloudStorageModel"
          },
          {
            "$ref": "#/components/schemas/LinuxHardenedStorageModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "WinLocal": "#/components/schemas/WindowsLocalStorageModel",
            "LinuxLocal": "#/components/schemas/LinuxLocalStorageModel",
            "Smb": "#/components/schemas/SmbStorageModel",
            "Nfs": "#/components/schemas/NfsStorageModel",
            "AzureBlob": "#/components/schemas/AzureBlobStorageModel",
            "AzureDataBox": "#/components/schemas/AzureDataBoxStorageModel",
            "AzureArchive": "#/components/schemas/AzureArchiveStorageModel",
            "AmazonS3": "#/components/schemas/AmazonS3StorageModel",
            "AmazonSnowballEdge": "#/components/schemas/AmazonSnowballEdgeStorageModel",
            "AmazonS3Glacier": "#/components/schemas/AmazonS3GlacierStorageModel",
            "S3Compatible": "#/components/schemas/S3CompatibleStorageModel",
            "GoogleCloud": "#/components/schemas/GoogleCloudStorageModel",
            "IBMCloud": "#/components/schemas/IBMCloudStorageModel",
            "WasabiCloud": "#/components/schemas/WasabiCloudStorageModel",
            "LinuxHardened": "#/components/schemas/LinuxHardenedStorageModel"
          }
        }
      },
      "SmbRepositoryShareSettingsModel": {
        "description": "Share settings.",
        "required": [
          "credentialsId",
          "sharePath"
        ],
        "type": "object",
        "properties": {
          "sharePath": {
            "description": "Path to the shared folder that is used as a backup repository.",
            "type": "string"
          },
          "credentialsId": {
            "description": "ID of the credentials record used to access the shared folder.",
            "type": "string",
            "format": "uuid"
          },
          "gatewayServer": {
            "$ref": "#/components/schemas/RepositoryShareGatewayModel"
          }
        }
      },
      "NfsRepositoryShareSettingsModel": {
        "description": "Share settings.",
        "required": [
          "sharePath"
        ],
        "type": "object",
        "properties": {
          "sharePath": {
            "description": "Path to the shared folder that is used as a backup repository.",
            "type": "string"
          },
          "gatewayServer": {
            "$ref": "#/components/schemas/RepositoryShareGatewayModel"
          }
        }
      },
      "RepositoryShareGatewayModel": {
        "description": "Settings for the gateway server.",
        "type": "object",
        "required": [
          "autoSelectEnabled"
        ],
        "properties": {
          "autoSelectEnabled": {
            "description": "If `true`, Veeam Backup & Replication automatically selects a gateway server.",
            "type": "boolean"
          },
          "gatewayServerIds": {
            "description": "Array of gateway server IDs.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ObjectStorageConnectionModel": {
        "description": "Object storage connection settings.",
        "type": "object",
        "required": [
          "connectionType"
        ],
        "properties": {
          "connectionType": {
            "$ref": "#/components/schemas/ERepositoryConnectionType"
          },
          "gatewayServerIds": {
            "description": "Array of gateway server IDs. The value is *null* if the connection type is *Direct*.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ERepositoryConnectionType": {
        "description": "Repository connection type (direct or through a gateway server).",
        "type": "string",
        "enum": [
          "Direct",
          "SelectedGateway"
        ]
      },
      "WindowsLocalRepositorySettingsModel": {
        "description": "Repository settings.",
        "type": "object",
        "properties": {
          "path": {
            "description": "Path to the folder where backup files are stored.",
            "type": "string"
          },
          "taskLimitEnabled": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "readWriteLimitEnabled": {
            "description": "If `true`, reading and writing speed is limited.",
            "type": "boolean"
          },
          "readWriteRate": {
            "description": "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk.",
            "type": "integer"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/RepositoryAdvancedSettingsModel"
          }
        }
      },
      "LinuxLocalRepositorySettingsModel": {
        "description": "Repository settings.",
        "type": "object",
        "properties": {
          "path": {
            "description": "Path to the folder where backup files are stored.",
            "type": "string"
          },
          "taskLimitEnabled": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "readWriteLimitEnabled": {
            "description": "If `true`, reading and writing speed is limited.",
            "type": "boolean"
          },
          "readWriteRate": {
            "description": "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk.",
            "type": "integer"
          },
          "useFastCloningOnXFSVolumes": {
            "description": "If `true`, fast cloning on XFS volumes is used.",
            "type": "boolean"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/RepositoryAdvancedSettingsModel"
          }
        }
      },
      "LinuxHardenedRepositorySettingsModel": {
        "description": "Repository settings.",
        "type": "object",
        "properties": {
          "path": {
            "description": "Path to the folder where backup files are stored.",
            "type": "string"
          },
          "taskLimitEnabled": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "readWriteLimitEnabled": {
            "description": "If `true`, reading and writing speed is limited.",
            "type": "boolean"
          },
          "readWriteRate": {
            "description": "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk.",
            "type": "integer"
          },
          "useFastCloningOnXFSVolumes": {
            "description": "If `true`, fast cloning on XFS volumes is used.",
            "type": "boolean"
          },
          "makeRecentBackupsImmutableDays": {
            "description": "Number of days to keep immutable backups.",
            "type": "integer"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/RepositoryAdvancedSettingsModel"
          }
        }
      },
      "NetworkRepositorySettingsModel": {
        "description": "Repository settings.",
        "type": "object",
        "properties": {
          "taskLimitEnabled": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "readWriteLimitEnabled": {
            "description": "If `true`, reading and writing speed is limited.",
            "type": "boolean"
          },
          "readWriteRate": {
            "description": "Maximum rate that restricts the total speed of reading and writing data to the backup repository disk.",
            "type": "integer"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/RepositoryAdvancedSettingsModel"
          }
        }
      },
      "RepositoryAdvancedSettingsModel": {
        "description": "Advanced settings for the backup repository.",
        "type": "object",
        "properties": {
          "alignDataBlocks": {
            "description": "If `true`, Veeam Backup & Replication aligns VM data saved to a backup file at a 4 KB block boundary.",
            "type": "boolean"
          },
          "decompressBeforeStoring": {
            "description": "If `true`, Veeam Backup & Replication decompresses backup data blocks before storing to improve deduplication ratios.",
            "type": "boolean"
          },
          "rotatedDrives": {
            "description": "If `true`, the repository drive is rotated.",
            "type": "boolean"
          },
          "perVmBackup": {
            "description": "If `true`, Veeam Backup & Replication creates a separate backup file for every VM in the job.",
            "type": "boolean"
          },
          "RotatedDriveCleanupMode": {
            "$ref": "#/components/schemas/ERotatedDriveCleanupMode"
          }
        }
      },
      "ERotatedDriveCleanupMode": {
        "description": "Cleanup mode:<ul> <li>`Disabled` — continue the backup chain on an inserted drive.</li> <li>`ClearBackupFolder` — delete existing backups belonging to the job.</li> <li>`ClearRepositoryFolder` — delete all existing backups from repository.</li></ul>",
        "type": "string",
        "enum": [
          "Disabled",
          "ClearBackupFolder",
          "ClearRepositoryFolder"
        ]
      },
      "MountServerSettingsModel": {
        "description": "Settings for the mount server that is used for file and application items restore.",
        "required": [
          "mountServerId",
          "vPowerNFSEnabled",
          "writeCacheFolder"
        ],
        "type": "object",
        "properties": {
          "mountServerId": {
            "description": "ID of the mount server.",
            "type": "string",
            "format": "uuid"
          },
          "writeCacheFolder": {
            "description": "Path to the folder used for writing cache during mount operations.",
            "type": "string"
          },
          "vPowerNFSEnabled": {
            "description": "If `true`, the vPower NFS Service is enabled on the mount server.",
            "type": "boolean"
          },
          "vPowerNFSPortSettings": {
            "$ref": "#/components/schemas/VPowerNFSPortSettingsModel"
          }
        }
      },
      "VPowerNFSPortSettingsModel": {
        "description": "Network ports used by the vPower NFS Service.",
        "type": "object",
        "properties": {
          "mountPort": {
            "description": "Mount port.",
            "type": "integer"
          },
          "vPowerNFSPort": {
            "description": "vPower NFS port.",
            "type": "integer"
          }
        }
      },
      "WindowsLocalStorageSpec": {
        "description": "Microsoft Windows-based repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "mountServer",
              "repository"
            ],
            "properties": {
              "hostId": {
                "description": "ID of the server that is used as a backup repository.",
                "type": "string",
                "format": "uuid"
              },
              "repository": {
                "$ref": "#/components/schemas/WindowsLocalRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "LinuxLocalStorageSpec": {
        "description": "Linux-based repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "mountServer",
              "repository"
            ],
            "properties": {
              "hostId": {
                "description": "ID of the server that is used as a backup repository.",
                "type": "string",
                "format": "uuid"
              },
              "repository": {
                "$ref": "#/components/schemas/LinuxLocalRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "WindowsLocalStorageModel": {
        "description": "Microsoft Windows-based repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "mountServer",
              "repository"
            ],
            "properties": {
              "hostId": {
                "description": "ID of the server that is used as a backup repository.",
                "type": "string",
                "format": "uuid"
              },
              "repository": {
                "$ref": "#/components/schemas/WindowsLocalRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "LinuxLocalStorageModel": {
        "description": "Linux-based repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "mountServer",
              "repository"
            ],
            "properties": {
              "hostId": {
                "description": "ID of the server that is used as a backup repository.",
                "type": "string",
                "format": "uuid"
              },
              "repository": {
                "$ref": "#/components/schemas/LinuxLocalRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "NfsStorageSpec": {
        "description": "NFS backup repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "mountServer",
              "repository",
              "share"
            ],
            "properties": {
              "share": {
                "$ref": "#/components/schemas/NfsRepositoryShareSettingsModel"
              },
              "repository": {
                "$ref": "#/components/schemas/NetworkRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "SmbStorageSpec": {
        "description": "SMB backup repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "mountServer",
              "repository",
              "share"
            ],
            "properties": {
              "share": {
                "$ref": "#/components/schemas/SmbRepositoryShareSettingsModel"
              },
              "repository": {
                "$ref": "#/components/schemas/NetworkRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "NfsStorageModel": {
        "description": "NFS backup repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "mountServer",
              "repository",
              "share"
            ],
            "properties": {
              "share": {
                "$ref": "#/components/schemas/NfsRepositoryShareSettingsModel"
              },
              "repository": {
                "$ref": "#/components/schemas/NetworkRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "SmbStorageModel": {
        "description": "SMB backup repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "mountServer",
              "repository",
              "share"
            ],
            "properties": {
              "share": {
                "$ref": "#/components/schemas/SmbRepositoryShareSettingsModel"
              },
              "repository": {
                "$ref": "#/components/schemas/NetworkRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "LinuxHardenedStorageSpec": {
        "description": "Linux hardened repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "mountServer",
              "repository"
            ],
            "properties": {
              "hostId": {
                "description": "ID of the server that is used as a backup repository.",
                "type": "string",
                "format": "uuid"
              },
              "repository": {
                "$ref": "#/components/schemas/LinuxHardenedRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "LinuxHardenedStorageModel": {
        "description": "Linux hardened repository.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "mountServer",
              "repository"
            ],
            "properties": {
              "hostId": {
                "description": "ID of the server that is used as a backup repository.",
                "type": "string",
                "format": "uuid"
              },
              "repository": {
                "$ref": "#/components/schemas/LinuxHardenedRepositorySettingsModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "ProxiesFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EProxiesFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/EProxyType"
          },
          "hostIdFilter": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EProxiesFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "Description"
        ]
      },
      "ProxiesResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of backup proxies.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProxyModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ProxySpec": {
        "required": [
          "description",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "description": "Description of the backup proxy.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EProxyType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ViProxySpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "ViProxy": "#/components/schemas/ViProxySpec"
          }
        }
      },
      "ViProxySpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxySpec"
          },
          {
            "type": "object",
            "required": [
              "server"
            ],
            "properties": {
              "server": {
                "$ref": "#/components/schemas/ProxyServerSettingsModel"
              }
            }
          }
        ]
      },
      "EProxyType": {
        "description": "Type of the backup proxy.",
        "type": "string",
        "enum": [
          "ViProxy"
        ]
      },
      "ProxyModel": {
        "required": [
          "id",
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the backup proxy.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the backup proxy.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup proxy.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EProxyType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ViProxyModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "ViProxy": "#/components/schemas/ViProxyModel"
          }
        }
      },
      "ViProxyModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyModel"
          },
          {
            "type": "object",
            "required": [
              "server"
            ],
            "properties": {
              "server": {
                "$ref": "#/components/schemas/ProxyServerSettingsModel"
              }
            }
          }
        ]
      },
      "EBackupProxyTransportMode": {
        "description": "Transport mode of the backup proxy.",
        "type": "string",
        "enum": [
          "auto",
          "directAccess",
          "virtualAppliance",
          "network"
        ]
      },
      "ProxyServerSettingsModel": {
        "description": "Server settings for the backup proxy.",
        "required": [
          "hostId"
        ],
        "type": "object",
        "properties": {
          "hostId": {
            "description": "ID of the server.",
            "type": "string",
            "format": "uuid"
          },
          "transportMode": {
            "$ref": "#/components/schemas/EBackupProxyTransportMode"
          },
          "failoverToNetwork": {
            "description": "(For the Direct storage access and Virtual appliance transport modes) If `true`, Veeam Backup & Replication failovers to the network transport mode in case the primary mode fails or is unavailable.",
            "type": "boolean"
          },
          "hostToProxyEncryption": {
            "description": "(For the Network mode) If `true`, VM data is transferred over an encrypted TLS connection.",
            "type": "boolean"
          },
          "connectedDatastores": {
            "$ref": "#/components/schemas/ProxyDatastoreSettingsModel"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          }
        }
      },
      "ProxyDatastoreSettingsModel": {
        "description": "Datastores to which the backup proxy has a direct SAN or NFS connection.",
        "required": [
          "autoSelectEnabled"
        ],
        "type": "object",
        "properties": {
          "autoSelectEnabled": {
            "description": "If `true`, all datastores that the backup proxy can access are detected automatically.",
            "type": "boolean"
          },
          "datastores": {
            "description": "Array of datastores to which the backup proxy has a direct SAN or NFS connection.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProxyDatastoreModel"
            }
          }
        }
      },
      "ProxyDatastoreModel": {
        "type": "object",
        "properties": {
          "datastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "vmCount": {
            "description": "Number of VMs.",
            "type": "integer"
          }
        }
      },
      "GlobalNetworkTrafficRulesModel": {
        "type": "object",
        "required": [
          "useMultipleStreamsPerJob"
        ],
        "properties": {
          "useMultipleStreamsPerJob": {
            "description": "If `true`, Veeam Backup & Replication uses multiple TCP/IP transfer connection for every job session.",
            "type": "boolean"
          },
          "uploadStreamsCount": {
            "description": "Number of TCP/IP connections per job.",
            "type": "integer",
            "format": "integer"
          },
          "trafficRules": {
            "description": "Array of traffic rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrafficRuleModel"
            }
          },
          "preferredNetworks": {
            "$ref": "#/components/schemas/PreferredNetworksModel"
          }
        }
      },
      "TrafficRuleModel": {
        "type": "object",
        "required": [
          "name",
          "sourceIPStart",
          "sourceIPEnd",
          "targetIPStart",
          "targetIPEnd"
        ],
        "properties": {
          "id": {
            "description": "ID of the rule.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the rule.",
            "type": "string"
          },
          "sourceIPStart": {
            "description": "Start IP address of the range for the backup infrastructure components on the source side.",
            "type": "string"
          },
          "sourceIPEnd": {
            "description": "End IP address of the range for the backup infrastructure components on the source side.",
            "type": "string"
          },
          "targetIPStart": {
            "description": "Start IP address of the range for the backup infrastructure components on the target side.",
            "type": "string"
          },
          "targetIPEnd": {
            "description": "End IP address of the range for the backup infrastructure components on the target side.",
            "type": "string"
          },
          "encryptionEnabled": {
            "description": "If `true`, traffic encryption is enabled.",
            "type": "boolean"
          },
          "throttlingEnabled": {
            "description": "If `true`, traffic throttling is enabled.",
            "type": "boolean"
          },
          "throttlingUnit": {
            "$ref": "#/components/schemas/ESpeedUnit"
          },
          "throttlingValue": {
            "description": "Maximum speed that must be used to transfer data from source to target.",
            "type": "integer",
            "format": "int32"
          },
          "throttlingWindowEnabled": {
            "description": "If `true`, throttling window during which the speed must be limited is enabled.",
            "type": "boolean"
          },
          "throttlingWindowOptions": {
            "$ref": "#/components/schemas/BackupWindowSettingModel"
          }
        }
      },
      "ESpeedUnit": {
        "description": "Traffic speed unit.",
        "type": "string",
        "enum": [
          "KbytePerSec",
          "MbitPerSpec",
          "MbytePerSec"
        ]
      },
      "PreferredNetworksModel": {
        "description": "Preferred networks used for backup and replication traffic.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, preferred networks are enabled.",
            "type": "boolean"
          },
          "networks": {
            "description": "Array of networks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreferredNetworkModel"
            }
          }
        }
      },
      "PreferredNetworkModel": {
        "type": "object",
        "properties": {
          "ipAddress": {
            "description": "IP address.",
            "type": "string"
          },
          "subnetMask": {
            "description": "Subnet mask.",
            "type": "string"
          },
          "cidrNotation": {
            "description": "CIDR notation.",
            "type": "string"
          }
        }
      },
      "JobStatesFilters": {
        "description": "Filters jobs by the specified parameters.",
        "type": "object",
        "properties": {
          "skip": {
            "description": "Skips the specified number of jobs.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Returns the specified number of jobs.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EJobStatesFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts jobs in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "idFilter": {
            "type": "string",
            "format": "uuid"
          },
          "nameFilter": {
            "description": "Filters jobs by the `nameFilter` pattern. The pattern can match any job state parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/EJobType"
          },
          "lastResultFilter": {
            "$ref": "#/components/schemas/ESessionResult"
          },
          "statusFilter": {
            "$ref": "#/components/schemas/EJobStatus"
          },
          "workloadFilter": {
            "$ref": "#/components/schemas/EJobWorkload"
          },
          "lastRunAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "lastRunBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "isHighPriorityJobFilter": {
            "description": "If `true`, returns job states for high priority jobs only.",
            "type": "boolean"
          },
          "repositoryIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "objectsCountFilter": {
            "type": "integer"
          }
        }
      },
      "EJobStatesFiltersOrderColumn": {
        "description": "Orders job states by the specified column.",
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "Status",
          "LastRun",
          "LastResult",
          "NextRun",
          "Description",
          "RepositoryId",
          "ObjectsCount"
        ]
      },
      "EJobStatus": {
        "description": "Current status of the job.",
        "type": "string",
        "enum": [
          "running",
          "inactive",
          "disabled"
        ]
      },
      "EJobWorkload": {
        "description": "Workload which the job must process.",
        "type": "string",
        "enum": [
          "application",
          "cloudVm",
          "file",
          "server",
          "workstation",
          "vm"
        ]
      },
      "JobStatesResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of job states.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobStateModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "JobStateModel": {
        "required": [
          "id",
          "name",
          "type",
          "description",
          "status",
          "lastResult",
          "workload",
          "objectsCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the job.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the job.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EJobType"
          },
          "description": {
            "description": "Description of the job.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/EJobStatus"
          },
          "lastRun": {
            "description": "Last run of the job.",
            "type": "string",
            "format": "date-time"
          },
          "lastResult": {
            "$ref": "#/components/schemas/ESessionResult"
          },
          "nextRun": {
            "description": "Next run of the job.",
            "type": "string",
            "format": "date-time"
          },
          "workload": {
            "$ref": "#/components/schemas/EJobWorkload"
          },
          "repositoryId": {
            "description": "ID of the backup repository.",
            "type": "string",
            "format": "uuid"
          },
          "repositoryName": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "objectsCount": {
            "description": "Number of objects processed by the job.",
            "type": "integer"
          },
          "sessionId": {
            "description": "ID of the last job session.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "JobsFilters": {
        "description": "Filters jobs by the specified parameters.",
        "type": "object",
        "properties": {
          "skip": {
            "description": "Skips the specified number of jobs.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Returns the specified number of jobs.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EJobFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts jobs in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters jobs by the `nameFilter` pattern. The pattern can match any job parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/EJobType"
          }
        }
      },
      "EJobFiltersOrderColumn": {
        "description": "Orders jobs by the specified column.",
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "Description"
        ]
      },
      "JobsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of jobs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "JobStartSpec": {
        "required": [
          "performActiveFull"
        ],
        "type": "object",
        "properties": {
          "performActiveFull": {
            "description": "If `true`, Veeam Backup & Replication will perform an active full backup.",
            "type": "boolean",
            "default": false
          },
          "startChainedJobs": {
            "description": "If `true`, Veeam Backup & Replication will start chained jobs as well.",
            "type": "boolean",
            "default": false
          }
        }
      },
      "JobStopSpec": {
        "required": [
          "gracefulStop"
        ],
        "type": "object",
        "properties": {
          "gracefulStop": {
            "description": "If `true`, Veeam Backup & Replication will produce a new restore point for those VMs that have already been processed and for VMs that are being processed at the moment.",
            "type": "boolean",
            "default": true
          }
        }
      },
      "BackupJobVirtualMachinesSpec": {
        "description": "Included and excluded objects.",
        "required": [
          "includes"
        ],
        "type": "object",
        "properties": {
          "includes": {
            "description": "Array of VMs and VM containers processed by the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "excludes": {
            "$ref": "#/components/schemas/BackupJobExclusionsSpec"
          }
        }
      },
      "BackupJobExclusionsSpec": {
        "description": "Objects excluded from the job.",
        "type": "object",
        "properties": {
          "vms": {
            "description": "Array of VMs. To get a VM object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "disks": {
            "description": "Array of disks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VmwareObjectDiskModel"
            }
          },
          "templates": {
            "$ref": "#/components/schemas/BackupJobExclusionsTemplates"
          }
        }
      },
      "EVmwareInventoryType": {
        "description": "Type of the VMware vSphere object.",
        "type": "string",
        "enum": [
          "Unknown",
          "VirtualMachine",
          "vCenterServer",
          "Datacenter",
          "Cluster",
          "Host",
          "ResourcePool",
          "Folder",
          "Datastore",
          "DatastoreCluster",
          "StoragePolicy",
          "Template",
          "ComputeResource",
          "VirtualApp",
          "Tag",
          "Category",
          "Multitag",
          "Network",
          "DVSNetwork"
        ]
      },
      "BackupJobStorageModel": {
        "description": "Backup storage settings.",
        "required": [
          "backupProxies",
          "backupRepositoryId",
          "retentionPolicy"
        ],
        "type": "object",
        "properties": {
          "backupRepositoryId": {
            "description": "ID of the backup repository.",
            "type": "string",
            "format": "uuid"
          },
          "backupProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "retentionPolicy": {
            "$ref": "#/components/schemas/BackupJobRetentionPolicySettingsModel"
          },
          "gfsPolicy": {
            "$ref": "#/components/schemas/GFSPolicySettingsModel"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/BackupJobAdvancedSettingsModel"
          }
        }
      },
      "BackupProxiesSettingsModel": {
        "description": "Backup proxy settings.",
        "required": [
          "autoSelectEnabled"
        ],
        "type": "object",
        "properties": {
          "autoSelectEnabled": {
            "description": "If `true`, backup proxies are detected and assigned automatically.",
            "type": "boolean",
            "default": true
          },
          "proxyIds": {
            "description": "Array of proxy IDs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "BackupJobRetentionPolicySettingsModel": {
        "description": "Retention policy settings.",
        "required": [
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ERetentionPolicyType"
          },
          "quantity": {
            "description": "Number of restore points or days to keep.",
            "type": "integer"
          }
        }
      },
      "ERetentionPolicyType": {
        "description": "Type of the retention policy.",
        "type": "string",
        "enum": [
          "RestorePoints",
          "Days"
        ]
      },
      "GFSPolicySettingsModel": {
        "description": "GFS retention policy settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the long-term (GFS) retention policy is enabled.",
            "type": "boolean"
          },
          "weekly": {
            "$ref": "#/components/schemas/GFSPolicySettingsWeeklyModel"
          },
          "monthly": {
            "$ref": "#/components/schemas/GFSPolicySettingsMonthlyModel"
          },
          "yearly": {
            "$ref": "#/components/schemas/GFSPolicySettingsYearlyModel"
          }
        }
      },
      "GFSPolicySettingsWeeklyModel": {
        "description": "Weekly GFS retention policy.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the weekly GFS retention policy is enabled.",
            "type": "boolean"
          },
          "keepForNumberOfWeeks": {
            "description": "Number of weeks to keep full backups for archival purposes. Possible values are from 1 through 9999.",
            "type": "integer"
          },
          "desiredTime": {
            "$ref": "#/components/schemas/EDayOfWeek"
          }
        }
      },
      "GFSPolicySettingsMonthlyModel": {
        "description": "Monthly GFS retention policy.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the monthly GFS retention policy is enabled.",
            "type": "boolean"
          },
          "keepForNumberOfMonths": {
            "description": "Number of months to keep full backups for archival purposes. Possible values are from 1 through 999.",
            "type": "integer"
          },
          "desiredTime": {
            "$ref": "#/components/schemas/ESennightOfMonth"
          }
        }
      },
      "GFSPolicySettingsYearlyModel": {
        "description": "Yearly GFS retention policy.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the yearly GFS retention policy is enabled.",
            "type": "boolean"
          },
          "keepForNumberOfYears": {
            "description": "Number of years to keep full backups for archival purposes. Possible values are from 1 through 999.",
            "type": "integer"
          },
          "desiredTime": {
            "$ref": "#/components/schemas/EMonth"
          }
        }
      },
      "BackupJobAdvancedSettingsModel": {
        "description": "Advanced settings of the backup job.",
        "required": [
          "backupModeType"
        ],
        "type": "object",
        "properties": {
          "backupModeType": {
            "$ref": "#/components/schemas/EBackupModeType"
          },
          "synthenticFulls": {
            "$ref": "#/components/schemas/SyntheticFullSettingsModel"
          },
          "activeFulls": {
            "$ref": "#/components/schemas/ActiveFullSettingsModel"
          },
          "backupHealth": {
            "$ref": "#/components/schemas/BackupHealthCheckSettingsModels"
          },
          "fullBackupMaintenance": {
            "$ref": "#/components/schemas/FullBackupMaintenanceModel"
          },
          "storageData": {
            "$ref": "#/components/schemas/BackupStorageSettingModel"
          },
          "notifications": {
            "$ref": "#/components/schemas/NotificationSettingsModel"
          },
          "vSphere": {
            "$ref": "#/components/schemas/BackupJobAdvancedSettingsVSphereModel"
          },
          "storageIntegration": {
            "$ref": "#/components/schemas/PrimaryStorageIntegrationSettingsModel"
          },
          "scripts": {
            "$ref": "#/components/schemas/JobScriptsSettingsModel"
          }
        }
      },
      "JobScriptsSettingsModel": {
        "description": "Script settings.<ul><li>`preCommand` — script executed before the job</li><li>`postCommand` — script executed after the job</li></ul>",
        "type": "object",
        "properties": {
          "preCommand": {
            "$ref": "#/components/schemas/ScriptCommand"
          },
          "postCommand": {
            "$ref": "#/components/schemas/ScriptCommand"
          },
          "periodicityType": {
            "$ref": "#/components/schemas/EScriptPeriodicityType"
          },
          "runScriptEvery": {
            "description": "Number of the backup job session after which the scripts must be executed.",
            "type": "integer"
          },
          "dayOfWeek": {
            "description": "Days of the week when the scripts must be executed.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EDayOfWeek"
            }
          }
        }
      },
      "ScriptCommand": {
        "description": "Script settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, script execution is enabled.",
            "type": "boolean"
          },
          "command": {
            "description": "Path to the script.",
            "type": "string"
          }
        }
      },
      "EScriptPeriodicityType": {
        "description": "Type of script periodicity.",
        "type": "string",
        "enum": [
          "Days",
          "BackupSessions"
        ]
      },
      "PrimaryStorageIntegrationSettingsModel": {
        "description": "Primary storage integration settings for the job.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the primary storage integration is enabled. In this case, storage snapshots (instead of VM snapshots) are used for VM data processing.",
            "type": "boolean"
          },
          "processedVmsLimitEnabled": {
            "description": "If `true`, the number of processed VMs per storage snapshot is limited.",
            "type": "boolean"
          },
          "processedVmsCount": {
            "description": "Number of processed VMs per storage snapshot.",
            "type": "integer"
          },
          "failoverToStandardBackup": {
            "description": "If `true`, failover to the regular VM processing mode is enabled. In this case, if backup from storage snapshot fails, VM snapshots are used.",
            "type": "boolean"
          }
        }
      },
      "BackupJobAdvancedSettingsVSphereModel": {
        "description": "VMware vSphere settings for the job.",
        "type": "object",
        "properties": {
          "enableVMWareToolsQuiescence": {
            "description": "If `true`, VMware Tools quiescence is enabled for freezing the VM file system and application data.",
            "type": "boolean"
          },
          "changedBlockTracking": {
            "$ref": "#/components/schemas/VSphereChangedBlockTrackingSettingsModel"
          }
        }
      },
      "VSphereChangedBlockTrackingSettingsModel": {
        "description": "CBT settings for the job.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, CBT data is used.",
            "type": "boolean"
          },
          "enableCBTautomatically": {
            "description": "If `true`, CBT is enabled for all processed VMs even if CBT is disabled in VM configuration. CBT is used for VMs with virtual hardware version 7 or later. These VMs must not have existing snapshots.",
            "type": "boolean"
          },
          "resetCBTonActiveFull": {
            "description": "If `true`, CBT is reset before creating active full backups.",
            "type": "boolean"
          }
        }
      },
      "NotificationSettingsModel": {
        "description": "Notification settings.",
        "type": "object",
        "properties": {
          "sendSNMPNotifications": {
            "description": "If `true`, SNMP notifications are enabled for this job.",
            "type": "boolean"
          },
          "emailNotifications": {
            "$ref": "#/components/schemas/EmailNotificationSettingsModel"
          },
          "vmAttribute": {
            "$ref": "#/components/schemas/NotificationVmAttributeSettingsModel"
          }
        }
      },
      "EmailNotificationSettingsModel": {
        "description": "Email notification settings for the job.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, email notifications are enabled for this job.",
            "type": "boolean"
          },
          "recipients": {
            "description": "Array of recipient’s email addresses.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notificationType": {
            "$ref": "#/components/schemas/EEmailNotificationType"
          },
          "customNotificationSettings": {
            "$ref": "#/components/schemas/EmailCustomNotificationType"
          }
        }
      },
      "EEmailNotificationType": {
        "description": "Type of email notification settings (global notification settings specified for the backup server, or custom notification settings specified for this job).",
        "type": "string",
        "enum": [
          "UseGlobalNotificationSettings",
          "UseCustomNotificationSettings"
        ]
      },
      "EmailCustomNotificationType": {
        "description": "Custom notification settings.",
        "type": "object",
        "properties": {
          "subject": {
            "description": "Notification subject. Use the following variables in the subject:<ul> <li>*%Time%* — completion time</li> <li>*%JobName%* — job name</li> <li>*%JobResult%* — job result</li> <li>*%ObjectCount%* — number of VMs in the job</li> <li>*%Issues%* — number of VMs in the job that have finished with the Warning or Failed status</li></ul>",
            "type": "string"
          },
          "notifyOnSuccess": {
            "description": "If `true`, email notifications are sent when the job completes successfully.",
            "type": "boolean"
          },
          "notifyOnWarning": {
            "description": "If `true`, email notifications are sent when the job completes with a warning.",
            "type": "boolean"
          },
          "notifyOnError": {
            "description": "If `true`, email notifications are sent when the job fails.",
            "type": "boolean"
          },
          "SuppressNotificationUntilLastRetry": {
            "description": "If `true`, email notifications are sent about the final job status only (not per every job retry).",
            "type": "boolean"
          }
        }
      },
      "NotificationVmAttributeSettingsModel": {
        "description": "VM attribute settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, information about successfully performed backup is written to a VM attribute.",
            "type": "boolean"
          },
          "notes": {
            "description": "Name of the VM attribute.",
            "type": "string"
          },
          "appendToExistingValue": {
            "description": "If `true`, information about successfully performed backup is appended to the existing value of the attribute added by the user.",
            "type": "boolean"
          }
        }
      },
      "EBackupModeType": {
        "description": "Type of the backup method used to create a restore point.",
        "type": "string",
        "enum": [
          "Full",
          "Incremental",
          "ReverseIncremental",
          "Transform",
          "TransformForeverIncremental"
        ]
      },
      "SyntheticFullSettingsModel": {
        "description": "Synthetic full backup settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, active full backups are enabled.",
            "type": "boolean"
          },
          "weekly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleWeeklyModel"
          },
          "monthly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleMonthlyModel"
          }
        }
      },
      "ActiveFullSettingsModel": {
        "description": "Active full backup settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, active full backups are enabled.",
            "type": "boolean"
          },
          "weekly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleWeeklyModel"
          },
          "monthly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleMonthlyModel"
          }
        }
      },
      "AdvancedStorageScheduleWeeklyModel": {
        "description": "Weekly schedule settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the weekly schedule is enabled.",
            "type": "boolean",
            "default": false
          },
          "days": {
            "description": "Days of the week when the operation is performed.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EDayOfWeek"
            }
          }
        }
      },
      "AdvancedStorageScheduleMonthlyModel": {
        "description": "Monthly schedule settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the monthly schedule is enabled.",
            "type": "boolean"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/EDayOfWeek"
          },
          "dayNumberInMonth": {
            "$ref": "#/components/schemas/EDayNumberInMonth"
          },
          "dayOfMonths": {
            "description": "Day of the month when the operation is performed.",
            "type": "integer"
          },
          "months": {
            "description": "Months when the operation is performed.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EMonth"
            }
          }
        }
      },
      "BackupHealthCheckSettingsModels": {
        "description": "Health check settings for the for the latest restore point in the backup chain.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the health check is enabled.",
            "type": "boolean"
          },
          "weekly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleWeeklyModel"
          },
          "monthly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleMonthlyModel"
          }
        }
      },
      "FullBackupMaintenanceModel": {
        "description": "Maintenance settings for full backup files.",
        "type": "object",
        "properties": {
          "RemoveData": {
            "$ref": "#/components/schemas/FullBackupMaintenanceRemoveDataModel"
          },
          "defragmentAndCompact": {
            "$ref": "#/components/schemas/FullBackupMaintenanceDefragmentAndCompactModel"
          }
        }
      },
      "FullBackupMaintenanceRemoveDataModel": {
        "description": "Backup data setting for deleted VMs.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, Veeam Backup & Replication keeps the backup data of deleted VMs for the `afterDays` number of days.",
            "type": "boolean"
          },
          "afterDays": {
            "description": "Number of days.",
            "type": "integer"
          }
        }
      },
      "FullBackupMaintenanceDefragmentAndCompactModel": {
        "description": "Compact operation settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, Veeam Backup & Replication compacts full backup files.",
            "type": "boolean"
          },
          "weekly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleWeeklyModel"
          },
          "monthly": {
            "$ref": "#/components/schemas/AdvancedStorageScheduleMonthlyModel"
          }
        }
      },
      "BackupStorageSettingModel": {
        "description": "Storage settings.",
        "type": "object",
        "properties": {
          "inlineDataDedupEnabled": {
            "description": "If `true`, Veeam Backup & Replication deduplicates VM data before storing it in the backup repository.",
            "type": "boolean"
          },
          "excludeSwapFileBlocks": {
            "description": "If `true`, Veeam Backup & Replication excludes swap file blocks from processing.",
            "type": "boolean"
          },
          "excludeDeletedFileBlocks": {
            "description": "If `true`, Veeam Backup & Replication does not copy deleted file blocks.",
            "type": "boolean"
          },
          "compressionLevel": {
            "$ref": "#/components/schemas/ECompressionLevel"
          },
          "storageOptimization": {
            "$ref": "#/components/schemas/EStorageOptimization"
          },
          "encryption": {
            "$ref": "#/components/schemas/BackupStorageSettingsEncryptionModel"
          }
        }
      },
      "EStorageOptimization": {
        "description": "Storage optimization (depends on the target storage type and the size of your files).",
        "type": "string",
        "enum": [
          "LocalTargetLarge",
          "LocalTarget",
          "LANTarget",
          "WANTarget",
          "LocalTargetLarge8192",
          "LocalTargetLarge4096"
        ]
      },
      "ECompressionLevel": {
        "description": "Compression level.",
        "type": "string",
        "enum": [
          "None",
          "DedupFriendly",
          "Optimal",
          "High",
          "Extreme"
        ]
      },
      "EEncryptionType": {
        "description": "Encryption type. The property is required if data encryption is enabled.",
        "type": "string",
        "enum": [
          "ByUserPassword",
          "ByKms"
        ]
      },
      "BackupStorageSettingsEncryptionModel": {
        "description": "Encryption of backup files.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the content of backup files is encrypted.",
            "type": "boolean"
          },
          "encryptionType": {
            "$ref": "#/components/schemas/EEncryptionType"
          },
          "encryptionPasswordId": {
            "description": "ID of the password used for encryption. The value is *null* for exported objects.",
            "type": "string",
            "format": "uuid"
          },
          "encryptionPasswordUniqueId": {
            "type": "string",
            "description": "Unique ID that identifies the password."
          },
          "kmsServerId": {
            "description": "ID of the KMS server for KMS key generation.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BackupJobGuestProcessingModel": {
        "description": "Guest processing settings.",
        "required": [
          "appAwareProcessing",
          "guestFSIndexing"
        ],
        "type": "object",
        "properties": {
          "appAwareProcessing": {
            "$ref": "#/components/schemas/BackupApplicationAwareProcessingModel"
          },
          "guestFSIndexing": {
            "$ref": "#/components/schemas/GuestFileSystemIndexingModel"
          },
          "guestInteractionProxies": {
            "$ref": "#/components/schemas/GuestInteractionProxiesSettingsModel"
          },
          "guestCredentials": {
            "$ref": "#/components/schemas/GuestOsCredentialsModel"
          }
        }
      },
      "BackupApplicationAwareProcessingModel": {
        "description": "Application-aware processing settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, application-aware processing is enabled.",
            "type": "boolean"
          },
          "appSettings": {
            "description": "Array of VMware vSphere objects and their application settings.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupApplicationSettingsModel"
            }
          }
        }
      },
      "BackupApplicationSettingsModel": {
        "required": [
          "vmObject",
          "vss"
        ],
        "type": "object",
        "properties": {
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "vss": {
            "$ref": "#/components/schemas/EApplicationSettingsVSS"
          },
          "usePersistentGuestAgent": {
            "description": "If `true`, persistent guest agent is used.",
            "type": "boolean"
          },
          "transactionLogs": {
            "$ref": "#/components/schemas/ETransactionLogsSettings"
          },
          "sql": {
            "$ref": "#/components/schemas/BackupSQLSettingsModel"
          },
          "oracle": {
            "$ref": "#/components/schemas/BackupOracleSettingsModel"
          },
          "exclusions": {
            "$ref": "#/components/schemas/BackupFSExclusionsModel"
          },
          "scripts": {
            "$ref": "#/components/schemas/BackupScriptSettingsModel"
          }
        }
      },
      "EApplicationSettingsVSS": {
        "description": "Behavior scenario for application-aware processing.",
        "type": "string",
        "enum": [
          "requireSuccess",
          "ignoreFailures",
          "disabled"
        ]
      },
      "ETransactionLogsSettings": {
        "description": "Transaction logs settings that define whether copy-only backups must be created, or transaction logs for Microsoft Exchange, Microsoft SQL and Oracle VMs must be processed.<p> If transaction log processing is selected, specify the following parameters:<ul> <li>[For Microsoft SQL Server VMs] Microsoft SQL Server transaction log settings</li> <li>[For Oracle VMs] Oracle archived log settings</li></ul>",
        "type": "string",
        "enum": [
          "process",
          "copyOnly"
        ]
      },
      "BackupSQLSettingsModel": {
        "description": "Microsoft SQL Server transaction log settings.",
        "required": [
          "logsProcessing"
        ],
        "type": "object",
        "properties": {
          "logsProcessing": {
            "$ref": "#/components/schemas/ESQLLogsProcessing"
          },
          "backupMinsCount": {
            "description": "Frequency of transaction log backup, in minutes.",
            "type": "integer"
          },
          "retainLogBackups": {
            "$ref": "#/components/schemas/ERetainLogBackupsType"
          },
          "keepDaysCount": {
            "description": "Number of days to keep transaction logs in the backup repository.",
            "type": "integer"
          },
          "logShippingServers": {
            "$ref": "#/components/schemas/BackupLogShippingServersModel"
          }
        }
      },
      "ESQLLogsProcessing": {
        "description": "Type of transaction logs processing.",
        "type": "string",
        "enum": [
          "truncate",
          "preserve",
          "backup",
          "neverTruncate"
        ]
      },
      "ERetainLogBackupsType": {
        "description": "Retention policy for the logs stored in the backup repository.",
        "type": "string",
        "enum": [
          "untilBackupDeleted",
          "KeepOnlyDays"
        ]
      },
      "BackupLogShippingServersModel": {
        "description": "Log shipping server used to transport logs.",
        "required": [
          "autoSelection"
        ],
        "type": "object",
        "properties": {
          "autoSelection": {
            "description": "If `true`, Veeam Backup & Replication chooses an optimal log shipping server automatically.",
            "type": "boolean"
          },
          "shippingServerIds": {
            "description": "Array of servers that are explicitly selected for log shipping.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "BackupOracleSettingsModel": {
        "description": "Oracle archived log settings.",
        "required": [
          "archiveLogs",
          "useGuestCredentials"
        ],
        "type": "object",
        "properties": {
          "useGuestCredentials": {
            "description": "If `true`, Veeam Backup & Replication uses credentials specified in the guest processing settings.",
            "type": "boolean"
          },
          "credentialsId": {
            "description": "ID of the credentials record that is used if `useGuestCredentials` is *false*.",
            "type": "string",
            "format": "uuid"
          },
          "archiveLogs": {
            "$ref": "#/components/schemas/EBackupOracleLogsSettings"
          },
          "deleteHoursCount": {
            "description": "Time period in hours to keep archived logs. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredHours*.",
            "type": "integer"
          },
          "deleteGBsCount": {
            "description": "Maximum size for archived logs in GB. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredGBs*.",
            "type": "integer"
          },
          "backupLogs": {
            "description": "If `true`, archived logs are backed up.",
            "type": "boolean"
          },
          "backupMinsCount": {
            "description": "Frequency of archived log backup, in minutes.",
            "type": "integer"
          },
          "retainLogBackups": {
            "$ref": "#/components/schemas/ERetainLogBackupsType"
          },
          "keepDaysCount": {
            "description": "Number of days to keep archived logs.",
            "type": "integer"
          },
          "logShippingServers": {
            "$ref": "#/components/schemas/BackupLogShippingServersModel"
          }
        }
      },
      "EBackupOracleLogsSettings": {
        "description": "Type of archived logs processing.",
        "type": "string",
        "enum": [
          "preserve",
          "deleteExpiredHours",
          "deleteExpiredGBs"
        ]
      },
      "BackupFSExclusionsModel": {
        "description": "VM guest OS file exclusion.",
        "required": [
          "exclusionPolicy"
        ],
        "type": "object",
        "properties": {
          "exclusionPolicy": {
            "$ref": "#/components/schemas/EBackupExclusionPolicy"
          },
          "itemsList": {
            "description": "Array of files and folders. Full paths to files and folders, environmental variables and file masks with the asterisk (*) and question mark (?) characters can be used.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EBackupExclusionPolicy": {
        "description": "Exclusion policy.",
        "type": "string",
        "enum": [
          "disabled",
          "excludeOnly",
          "includeOnly"
        ]
      },
      "BackupScriptSettingsModel": {
        "description": "Pre-freeze and post-thaw scripts.",
        "required": [
          "scriptProcessingMode"
        ],
        "type": "object",
        "properties": {
          "scriptProcessingMode": {
            "$ref": "#/components/schemas/EBackupScriptProcessingMode"
          },
          "windowsScripts": {
            "$ref": "#/components/schemas/BackupWindowsScriptModel"
          },
          "linuxScripts": {
            "$ref": "#/components/schemas/BackupLinuxScriptModel"
          }
        }
      },
      "EBackupScriptProcessingMode": {
        "description": "Scenario for scripts execution.",
        "type": "string",
        "enum": [
          "disableExec",
          "ignoreExecFailures",
          "requireSuccess"
        ]
      },
      "BackupWindowsScriptModel": {
        "description": "Paths to pre-freeze and post-thaw scripts for Microsoft Windows VMs.",
        "type": "object",
        "properties": {
          "preFreezeScript": {
            "description": "Path to a pre-freeze script.",
            "type": "string"
          },
          "postThawScript": {
            "description": "Path to a post-thaw script.",
            "type": "string"
          }
        }
      },
      "BackupLinuxScriptModel": {
        "description": "Paths to pre-freeze and post-thaw scripts for Linux VMs.",
        "type": "object",
        "properties": {
          "preFreezeScript": {
            "description": "Path to a pre-freeze script.",
            "type": "string"
          },
          "postThawScript": {
            "description": "Path to a post-thaw script.",
            "type": "string"
          }
        }
      },
      "GuestFileSystemIndexingModel": {
        "description": "VM guest OS file indexing.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, file indexing is enabled.",
            "type": "boolean"
          },
          "indexingSettings": {
            "description": "Array of VMs with guest OS file indexing options.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupIndexingSettingsModel"
            }
          }
        }
      },
      "BackupIndexingSettingsModel": {
        "required": [
          "vmObject"
        ],
        "type": "object",
        "properties": {
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "WindowsIndexing": {
            "$ref": "#/components/schemas/BackupObjectIndexingModel"
          },
          "LinuxIndexing": {
            "$ref": "#/components/schemas/BackupObjectIndexingModel"
          }
        }
      },
      "BackupObjectIndexingModel": {
        "description": "Guest OS indexing options for the VM.",
        "required": [
          "guestFSIndexingMode"
        ],
        "type": "object",
        "properties": {
          "guestFSIndexingMode": {
            "$ref": "#/components/schemas/EGuestFSIndexingMode"
          },
          "indexingList": {
            "description": "Array of folders. Environmental variables and full paths to folders can be used.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EGuestFSIndexingMode": {
        "description": "Indexing mode.",
        "type": "string",
        "enum": [
          "disable",
          "indexAll",
          "indexAllExcept",
          "indexOnly"
        ]
      },
      "EGuestOSType": {
        "description": "Type of the guest OS.",
        "type": "string",
        "enum": [
          "Windows",
          "Linux"
        ]
      },
      "GuestInteractionProxiesSettingsModel": {
        "description": "Guest interaction proxy used to deploy the runtime process on the VM guest OS.",
        "required": [
          "autoSelectEnabled"
        ],
        "type": "object",
        "properties": {
          "autoSelectEnabled": {
            "description": "If `true`, Veeam Backup & Replication automatically selects the guest interaction proxy.",
            "type": "boolean",
            "default": true
          },
          "proxyIds": {
            "description": "Array of proxies specified explicitly. The array must contain Microsoft Windows servers added to the backup infrastructure only.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "GuestOsCredentialsModel": {
        "description": "VM custom credentials.",
        "type": "object",
        "required": [
          "credentialsId",
          "credentialsType"
        ],
        "properties": {
          "credentialsId": {
            "description": "Credentials ID for Microsoft Windows VMs.",
            "type": "string",
            "format": "uuid"
          },
          "credentialsType": {
            "$ref": "#/components/schemas/ECredentialsType"
          },
          "credentialsPerMachine": {
            "description": "Individual credentials for VMs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuestOsCredentialsPerMachineModel"
            }
          }
        }
      },
      "GuestOsCredentialsPerMachineModel": {
        "required": [
          "vmObject"
        ],
        "type": "object",
        "properties": {
          "windowsCredsId": {
            "description": "Credentials ID for a Microsoft Windows VM.",
            "type": "string",
            "format": "uuid"
          },
          "linuxCredsId": {
            "description": "Credentials ID for a Linux VM.",
            "type": "string",
            "format": "uuid"
          },
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "ECredentialsType": {
        "description": "Credentials type.",
        "type": "string",
        "enum": [
          "Standard",
          "Linux"
        ]
      },
      "BackupScheduleModel": {
        "description": "Job scheduling options.",
        "required": [
          "runAutomatically"
        ],
        "type": "object",
        "properties": {
          "runAutomatically": {
            "description": "If `true`, job scheduling is enabled.",
            "type": "boolean",
            "default": false
          },
          "daily": {
            "$ref": "#/components/schemas/ScheduleDailyModel"
          },
          "monthly": {
            "$ref": "#/components/schemas/ScheduleMonthlyModel"
          },
          "periodically": {
            "$ref": "#/components/schemas/SchedulePeriodicallyModel"
          },
          "continuously": {
            "$ref": "#/components/schemas/ScheduleBackupWindowModel"
          },
          "afterThisJob": {
            "$ref": "#/components/schemas/ScheduleAfterThisJobModel"
          },
          "retry": {
            "$ref": "#/components/schemas/ScheduleRetryModel"
          },
          "backupWindow": {
            "$ref": "#/components/schemas/ScheduleBackupWindowModel"
          }
        }
      },
      "ScheduleAfterThisJobModel": {
        "description": "Job chaining options.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, job chaining is enabled.",
            "type": "boolean"
          },
          "jobName": {
            "description": "Name of the preceding job.",
            "type": "string"
          }
        }
      },
      "ScheduleDailyModel": {
        "description": "Daily scheduling options.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, daily schedule is enabled.",
            "type": "boolean",
            "default": true
          },
          "localTime": {
            "description": "Local time when the job must start.",
            "type": "string",
            "format": "time"
          },
          "dailyKind": {
            "$ref": "#/components/schemas/EDailyKinds"
          },
          "days": {
            "description": "Days of the week when the job must start.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EDayOfWeek"
            }
          }
        }
      },
      "EDailyKinds": {
        "description": "Kind of daily scheduling scheme.",
        "type": "string",
        "enum": [
          "Everyday",
          "WeekDays",
          "SelectedDays"
        ]
      },
      "EDayOfWeek": {
        "description": "Day of the week.",
        "type": "string",
        "enum": [
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday"
        ]
      },
      "ScheduleMonthlyModel": {
        "description": "Monthly scheduling options.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, monthly schedule is enabled.",
            "type": "boolean",
            "default": false
          },
          "localTime": {
            "description": "Local time when the job must start.",
            "type": "string",
            "format": "time"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/EDayOfWeek"
          },
          "dayNumberInMonth": {
            "$ref": "#/components/schemas/EDayNumberInMonth"
          },
          "dayOfMonth": {
            "description": "Day of the month when the job must start.",
            "type": "integer"
          },
          "months": {
            "description": "Months when the job must start.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EMonth"
            }
          }
        }
      },
      "EDayNumberInMonth": {
        "description": "Week day number in the month.",
        "type": "string",
        "enum": [
          "First",
          "Second",
          "Third",
          "Fourth",
          "Last",
          "OnDay"
        ]
      },
      "EMonth": {
        "description": "Month.",
        "type": "string",
        "enum": [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December"
        ]
      },
      "SchedulePeriodicallyModel": {
        "description": "Periodic scheduling options.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, periodic schedule is enabled.",
            "type": "boolean",
            "default": false
          },
          "periodicallyKind": {
            "$ref": "#/components/schemas/EPeriodicallyKinds"
          },
          "frequency": {
            "description": "Number of time units that defines the time interval.",
            "type": "integer"
          },
          "backupWindow": {
            "$ref": "#/components/schemas/BackupWindowSettingModel"
          },
          "startTimeWithinAnHour": {
            "description": "Start time within an hour, in minutes.",
            "type": "integer"
          }
        }
      },
      "EPeriodicallyKinds": {
        "description": "Time unit for periodic job scheduling.",
        "type": "string",
        "enum": [
          "Hours",
          "Minutes",
          "Seconds",
          "Days"
        ]
      },
      "ScheduleBackupWindowModel": {
        "description": "Backup window settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, backup window is enabled.",
            "type": "boolean",
            "default": false
          },
          "backupWindow": {
            "$ref": "#/components/schemas/BackupWindowSettingModel"
          }
        }
      },
      "BackupWindowDayHoursModel": {
        "description": "Hourly scheme for a day.",
        "required": [
          "day",
          "hours"
        ],
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/EDayOfWeek"
          },
          "hours": {
            "description": "String of 24 hours in the following format:<p>*1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1*<p>where *1* means permitted, *0* means denied.",
            "type": "string"
          }
        }
      },
      "BackupWindowSettingModel": {
        "description": "Time scheme that defines permitted days and hours for the job to start.",
        "required": [
          "days"
        ],
        "type": "object",
        "properties": {
          "days": {
            "description": "Array of per-day schemes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupWindowDayHoursModel"
            }
          }
        }
      },
      "ScheduleRetryModel": {
        "description": "Retry options.",
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, retry options are enabled.",
            "type": "boolean",
            "default": false
          },
          "retryCount": {
            "description": "Number of retries set for the job. Must be greater than zero.",
            "type": "integer",
            "default": 3
          },
          "awaitMinutes": {
            "description": "Time interval between job retries in minutes. Must be greater than zero.",
            "type": "integer",
            "default": 10
          }
        }
      },
      "ESennightOfMonth": {
        "description": "Week of the month when a monthly backup is created.",
        "type": "string",
        "enum": [
          "First",
          "Second",
          "Third",
          "Fourth",
          "Fifth",
          "Last"
        ]
      },
      "EntraIDTenantBackupJobModel": {
        "description": "Microsoft Entra ID tenant backup job.",
        "allOf": [
          {
            "$ref": "#/components/schemas/JobModel"
          },
          {
            "type": "object",
            "required": [
              "description",
              "storage"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "storage": {
                "$ref": "#/components/schemas/EntraIDTenantBackupJobStorageModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "EntraIDTenantBackupJobStorageModel": {
        "description": "Job storage settings.",
        "type": "object",
        "required": [
          "tenantId"
        ],
        "properties": {
          "tenantId": {
            "description": "Tenant ID assigned by Veeam Backup & Replication.",
            "type": "string",
            "format": "uuid"
          },
          "retentionPolicy": {
            "$ref": "#/components/schemas/BackupJobRetentionPolicySettingsModel"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/EntraIDTenantBackupJobAdvancedSettingsModel"
          }
        }
      },
      "EntraIDTenantBackupJobAdvancedSettingsModel": {
        "description": "Advanced job settings.",
        "type": "object",
        "properties": {
          "notifications": {
            "$ref": "#/components/schemas/EntraIDTenantNotificationSettingsModel"
          },
          "encryption": {
            "$ref": "#/components/schemas/BackupStorageSettingsEncryptionModel"
          }
        }
      },
      "EntraIDTenantNotificationSettingsModel": {
        "description": "Notification settings.",
        "type": "object",
        "properties": {
          "sendSNMPNotifications": {
            "description": "If `true`, SNMP notifications are enabled for this job.",
            "type": "boolean"
          },
          "emailNotifications": {
            "$ref": "#/components/schemas/EmailNotificationSettingsModel"
          }
        }
      },
      "EntraIDAuditLogBackupJobModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobModel"
          },
          {
            "type": "object",
            "required": [
              "description",
              "tenant"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
                "type": "boolean"
              },
              "tenant": {
                "$ref": "#/components/schemas/EntraIDAuditLogBackupJobTenantModel"
              },
              "storage": {
                "$ref": "#/components/schemas/EntraIDAuditLogBackupJobStorageModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "EntraIDAuditLogBackupJobTenantModel": {
        "description": "Microsoft Entra ID tenant settings.",
        "required": [
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "description": "Tenant ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIDAuditLogBackupJobStorageModel": {
        "description": "Storage settings.",
        "type": "object",
        "properties": {
          "backupRepositoryId": {
            "description": "Backup repository ID.",
            "type": "string",
            "format": "uuid"
          },
          "sourceBackupId": {
            "description": "ID of a backup stored in this backup repository. Use this property to map the job to an existing backup.",
            "type": "string",
            "format": "uuid"
          },
          "retentionPolicy": {
            "$ref": "#/components/schemas/EntraIDAuditLogRetentionPolicySettingsModel"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/EntraIDAuditLogBackupJobAdvancedSettingsModel"
          }
        }
      },
      "EntraIDAuditLogRetentionPolicySettingsModel": {
        "description": "Retention policy settings.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EEntraIDAuditLogRetentionPolicyType"
          },
          "quantity": {
            "description": "Number of days, months or years that you want to keep the backup in the backup repository.",
            "type": "integer"
          }
        }
      },
      "EEntraIDAuditLogRetentionPolicyType": {
        "description": "Type of the retention policy.",
        "type": "string",
        "enum": [
          "Days",
          "Months",
          "Years"
        ]
      },
      "EntraIDAuditLogBackupJobAdvancedSettingsModel": {
        "description": "Advanced settings.",
        "type": "object",
        "properties": {
          "storageData": {
            "$ref": "#/components/schemas/EntraIDBackupStorageSettingsModel"
          },
          "backupHealth": {
            "$ref": "#/components/schemas/BackupHealthCheckSettingsModels"
          },
          "scripts": {
            "$ref": "#/components/schemas/JobScriptsSettingsModel"
          },
          "notifications": {
            "$ref": "#/components/schemas/EntraIDAuditLogNotificationSettingsModel"
          }
        }
      },
      "EntraIDBackupStorageSettingsModel": {
        "description": "Storage settings.",
        "type": "object",
        "properties": {
          "compressionLevel": {
            "$ref": "#/components/schemas/ECompressionLevel"
          },
          "encryption": {
            "$ref": "#/components/schemas/BackupStorageSettingsEncryptionModel"
          }
        }
      },
      "EntraIDAuditLogNotificationSettingsModel": {
        "description": "Notification settings.",
        "type": "object",
        "properties": {
          "sendSNMPNotifications": {
            "description": "If `true`, SNMP notifications are enabled for this job.",
            "type": "boolean"
          },
          "emailNotifications": {
            "$ref": "#/components/schemas/EmailNotificationSettingsModel"
          }
        }
      },
      "FileBackupCopyJobModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobModel"
          },
          {
            "type": "object",
            "required": [
              "primaryJobId",
              "backupRepositoryId"
            ],
            "properties": {
              "primaryJobId": {
                "type": "string",
                "format": "uuid"
              },
              "backupRepositoryId": {
                "type": "string",
                "format": "uuid"
              },
              "useCustomRetention": {
                "type": "boolean"
              },
              "retentionPolicy": {
                "$ref": "#/components/schemas/FileBackupRetentionPolicySettingsModel"
              },
              "useCustomEncryption": {
                "type": "boolean"
              },
              "encryption": {
                "$ref": "#/components/schemas/BackupStorageSettingsEncryptionModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/FileBackupCopyJobScheduleModel"
              }
            }
          }
        ]
      },
      "FileBackupRetentionPolicySettingsModel": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EFileBackupRetentionPolicyType"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "FileBackupCopyJobScheduleModel": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EFileBackupCopyJobScheduleType"
          },
          "customWindow": {
            "$ref": "#/components/schemas/ScheduleBackupWindowModel"
          }
        }
      },
      "EFileBackupCopyJobScheduleType": {
        "type": "string",
        "enum": [
          "Continuous",
          "Custom"
        ]
      },
      "EFileBackupRetentionPolicyType": {
        "description": "Type of the retention policy.",
        "type": "string",
        "enum": [
          "Days",
          "Months"
        ]
      },
      "BackupJobModel": {
        "description": "VMware vSphere backup job.",
        "allOf": [
          {
            "$ref": "#/components/schemas/JobModel"
          },
          {
            "type": "object",
            "required": [
              "description",
              "guestProcessing",
              "isHighPriority",
              "schedule",
              "storage",
              "virtualMachines"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
                "type": "boolean"
              },
              "virtualMachines": {
                "$ref": "#/components/schemas/BackupJobVirtualMachinesModel"
              },
              "storage": {
                "$ref": "#/components/schemas/BackupJobStorageModel"
              },
              "guestProcessing": {
                "$ref": "#/components/schemas/BackupJobGuestProcessingModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "BackupJobVirtualMachinesModel": {
        "description": "Included and excluded objects.",
        "required": [
          "includes"
        ],
        "type": "object",
        "properties": {
          "includes": {
            "description": "Array of VMs and VM containers processed by the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "excludes": {
            "$ref": "#/components/schemas/BackupJobExclusions"
          }
        }
      },
      "BackupJobExclusions": {
        "description": "Objects excluded from the job.",
        "type": "object",
        "properties": {
          "vms": {
            "description": "Array of VMs excluded from the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "disks": {
            "description": "Array of VM disks excluded from the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VmwareObjectDiskModel"
            }
          },
          "templates": {
            "$ref": "#/components/schemas/BackupJobExclusionsTemplates"
          }
        }
      },
      "BackupJobExclusionsTemplates": {
        "description": "VM templates exclusion.",
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, VM templates are excluded from the job.",
            "type": "boolean"
          },
          "excludeFromIncremental": {
            "description": "If `true`, VM templates are excluded from the incremental backup.",
            "type": "boolean"
          }
        }
      },
      "VmwareObjectDiskModel": {
        "required": [
          "disks",
          "disksToProcess",
          "vmObject"
        ],
        "type": "object",
        "properties": {
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "disksToProcess": {
            "$ref": "#/components/schemas/EVmwareDisksTypeToProcess"
          },
          "disks": {
            "description": "Array of disks.",
            "type": "array",
            "items": {
              "description": "ID of the disk.",
              "type": "string"
            }
          },
          "removeFromVMConfiguration": {
            "description": "If `true`, the disk is removed from VM configuration.",
            "type": "boolean"
          }
        }
      },
      "EVmwareDisksTypeToProcess": {
        "description": "Type of disk selection.",
        "type": "string",
        "enum": [
          "AllDisks",
          "SystemOnly",
          "SelectedDisks"
        ]
      },
      "InventoryObjectModel": {
        "description": "Inventory object properties.",
        "required": [
          "platform"
        ],
        "type": "object",
        "properties": {
          "platform": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "size": {
            "description": "Object size.",
            "type": "string"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/VmwareObjectModel"
          },
          {
            "$ref": "#/components/schemas/CloudDirectorObjectModel"
          }
        ],
        "discriminator": {
          "propertyName": "platform",
          "mapping": {
            "VMware": "#/components/schemas/VmwareObjectModel",
            "CloudDirector": "#/components/schemas/CloudDirectorObjectModel"
          }
        }
      },
      "UnstructuredBackupDownloadMetaSpec": {
        "type": "object",
        "properties": {
          "targetRepositoryId": {
            "description": "ID of the repository where the backup is stored.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UnstructuredDataServersFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of unstructured data servers to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of unstructured data servers to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EUnstructuredDataServersFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts unstructured data servers in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters unstructured data servers by the `nameFilter` pattern. The pattern can match any unstructured data server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "type": "string"
          }
        }
      },
      "EUnstructuredDataServersFiltersOrderColumn": {
        "description": "Sorts unstructured data servers by one of the unstructured data server parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Description"
        ]
      },
      "UnstructuredDataServersResult": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnstructuredDataServerModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "UnstructuredDataServerModel": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EUnstructuredDataServerType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/FileServerModel"
          },
          {
            "$ref": "#/components/schemas/SMBShareServerModel"
          },
          {
            "$ref": "#/components/schemas/NFSShareServerModel"
          },
          {
            "$ref": "#/components/schemas/NASFilerServerModel"
          },
          {
            "$ref": "#/components/schemas/S3CompatibleServerModel"
          },
          {
            "$ref": "#/components/schemas/AmazonS3ServerModel"
          },
          {
            "$ref": "#/components/schemas/AzureBlobServerModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "FileServer": "#/components/schemas/FileServerModel",
            "SMBShare": "#/components/schemas/SMBShareServerModel",
            "NFSShare": "#/components/schemas/NFSShareServerModel",
            "NASFiler": "#/components/schemas/NASFilerServerModel",
            "S3Compatible": "#/components/schemas/S3CompatibleServerModel",
            "AmazonS3": "#/components/schemas/AmazonS3ServerModel",
            "AzureBlob": "#/components/schemas/AzureBlobServerModel"
          }
        }
      },
      "EUnstructuredDataServerType": {
        "enum": [
          "FileServer",
          "SMBShare",
          "NFSShare",
          "NASFiler",
          "S3Compatible",
          "AmazonS3",
          "AzureBlob"
        ],
        "type": "string"
      },
      "FileServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnstructuredDataServerModel"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "processing"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "hostId": {
                "type": "string",
                "format": "uuid"
              },
              "processing": {
                "$ref": "#/components/schemas/FileServerProcessingModel"
              }
            }
          }
        ]
      },
      "FileServerProcessingModel": {
        "type": "object",
        "required": [
          "cacheRepositoryId"
        ],
        "properties": {
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the server.",
            "type": "string",
            "format": "uuid"
          },
          "backupIOControlLevel": {
            "$ref": "#/components/schemas/EBackupIOControlLevel"
          }
        }
      },
      "EBackupIOControlLevel": {
        "enum": [
          "Lowest",
          "Low",
          "Medium",
          "High",
          "Highest"
        ],
        "type": "string"
      },
      "SMBShareServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnstructuredDataServerModel"
          },
          {
            "type": "object",
            "required": [
              "path",
              "processing"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "accessCredentialsRequired": {
                "type": "boolean"
              },
              "accessCredentialsId": {
                "type": "string",
                "format": "uuid"
              },
              "advancedSettings": {
                "$ref": "#/components/schemas/SMBShareServerAdvancedSettingsModel"
              },
              "processing": {
                "$ref": "#/components/schemas/SMBShareServerProcessingModel"
              }
            }
          }
        ]
      },
      "SMBShareServerAdvancedSettingsModel": {
        "type": "object",
        "properties": {
          "processingMode": {
            "$ref": "#/components/schemas/ESMBShareServerProcessingMode"
          },
          "directBackupFailoverEnabled": {
            "type": "boolean"
          },
          "storageSnapshotPath": {
            "type": "string"
          }
        }
      },
      "ESMBShareServerProcessingMode": {
        "enum": [
          "Direct",
          "StorageSnapshot",
          "VSSSnapshot"
        ],
        "type": "string"
      },
      "SMBShareServerProcessingModel": {
        "type": "object",
        "required": [
          "backupProxies",
          "cacheRepositoryId"
        ],
        "properties": {
          "backupProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the server.",
            "type": "string",
            "format": "uuid"
          },
          "backupIOControlLevel": {
            "$ref": "#/components/schemas/EBackupIOControlLevel"
          }
        }
      },
      "NFSShareServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnstructuredDataServerModel"
          },
          {
            "type": "object",
            "required": [
              "path",
              "processing"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "advancedSettings": {
                "$ref": "#/components/schemas/NFSShareServerAdvancedSettingsModel"
              },
              "processing": {
                "$ref": "#/components/schemas/NFSShareServerProcessingModel"
              }
            }
          }
        ]
      },
      "NFSShareServerAdvancedSettingsModel": {
        "type": "object",
        "properties": {
          "processingMode": {
            "$ref": "#/components/schemas/ENFSShareServerProcessingMode"
          },
          "directBackupFailoverEnabled": {
            "type": "boolean"
          },
          "storageSnapshotPath": {
            "type": "string"
          }
        }
      },
      "ENFSShareServerProcessingMode": {
        "enum": [
          "Direct",
          "StorageSnapshot"
        ],
        "type": "string"
      },
      "NFSShareServerProcessingModel": {
        "type": "object",
        "required": [
          "backupProxies",
          "cacheRepositoryId"
        ],
        "properties": {
          "backupProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the server.",
            "type": "string",
            "format": "uuid"
          },
          "backupIOControlLevel": {
            "$ref": "#/components/schemas/EBackupIOControlLevel"
          }
        }
      },
      "NASFilerServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnstructuredDataServerModel"
          },
          {
            "type": "object",
            "required": [
              "storageHostId",
              "processing"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "storageHostId": {
                "type": "string",
                "format": "uuid"
              },
              "accessCredentialsRequired": {
                "type": "boolean"
              },
              "accessCredentialsId": {
                "type": "string",
                "format": "uuid"
              },
              "processing": {
                "$ref": "#/components/schemas/NASFilerServerProcessingModel"
              }
            }
          }
        ]
      },
      "NASFilerServerProcessingModel": {
        "type": "object",
        "required": [
          "backupProxies",
          "cacheRepositoryId"
        ],
        "properties": {
          "backupProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the tenant.",
            "type": "string",
            "format": "uuid"
          },
          "backupIOControlLevel": {
            "$ref": "#/components/schemas/EBackupIOControlLevel"
          },
          "nativeChangeTrackingEnabled": {
            "type": "boolean"
          }
        }
      },
      "S3CompatibleServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnstructuredDataServerModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "processing"
            ],
            "properties": {
              "account": {
                "$ref": "#/components/schemas/S3CompatibleServerAccountModel"
              },
              "processing": {
                "$ref": "#/components/schemas/S3CompatibleServerProcessingModel"
              }
            }
          }
        ]
      },
      "S3CompatibleServerAccountModel": {
        "type": "object",
        "required": [
          "friendlyName",
          "credentialsId"
        ],
        "properties": {
          "friendlyName": {
            "type": "string"
          },
          "servicePoint": {
            "type": "string"
          },
          "credentialsId": {
            "type": "string",
            "format": "uuid"
          },
          "regionId": {
            "type": "string"
          }
        }
      },
      "S3CompatibleServerProcessingModel": {
        "type": "object",
        "required": [
          "backupProxies",
          "cacheRepositoryId"
        ],
        "properties": {
          "backupProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the server.",
            "type": "string",
            "format": "uuid"
          },
          "backupIOControlLevel": {
            "$ref": "#/components/schemas/EBackupIOControlLevel"
          }
        }
      },
      "AmazonS3ServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnstructuredDataServerModel"
          },
          {
            "type": "object",
            "properties": {
              "account": {
                "$ref": "#/components/schemas/AmazonS3ServerAccountModel"
              },
              "processing": {
                "$ref": "#/components/schemas/AmazonS3ServerProcessingModel"
              }
            }
          }
        ]
      },
      "AmazonS3ServerAccountModel": {
        "type": "object",
        "required": [
          "friendlyName",
          "credentialsId"
        ],
        "properties": {
          "friendlyName": {
            "type": "string"
          },
          "credentialsId": {
            "type": "string",
            "format": "uuid"
          },
          "regionType": {
            "$ref": "#/components/schemas/EAmazonRegionType"
          },
          "regionId": {
            "type": "string"
          }
        }
      },
      "AmazonS3ServerProcessingModel": {
        "type": "object",
        "required": [
          "backupProxies",
          "cacheRepositoryId"
        ],
        "properties": {
          "backupProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the server.",
            "type": "string",
            "format": "uuid"
          },
          "backupIOControlLevel": {
            "$ref": "#/components/schemas/EBackupIOControlLevel"
          }
        }
      },
      "AzureBlobServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnstructuredDataServerModel"
          },
          {
            "type": "object",
            "required": [
              "friendlyName",
              "credentialsId"
            ],
            "properties": {
              "friendlyName": {
                "type": "string"
              },
              "credentialsId": {
                "type": "string",
                "format": "uuid"
              },
              "regionType": {
                "$ref": "#/components/schemas/EAzureRegionType"
              },
              "processing": {
                "$ref": "#/components/schemas/AzureBlobServerProcessingModel"
              }
            }
          }
        ]
      },
      "AzureBlobServerProcessingModel": {
        "type": "object",
        "required": [
          "backupProxies",
          "cacheRepositoryId"
        ],
        "properties": {
          "backupProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the server.",
            "type": "string",
            "format": "uuid"
          },
          "backupIOControlLevel": {
            "$ref": "#/components/schemas/EBackupIOControlLevel"
          }
        }
      },
      "EntraIDTenantsResult": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of Microsoft Entra ID tenants.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIDTenantModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EntraIDTenantsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of Microsoft Entra ID tenants to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of Microsoft Entra ID tenants to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EEntraIDTenantsFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts Microsoft Entra ID tenants in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters Microsoft Entra ID tenants by the `nameFilter` pattern. The pattern can match any cloud credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "type": "string"
          }
        }
      },
      "EEntraIDTenantsFiltersOrderColumn": {
        "description": "Sorts Microsoft Entra ID tenants by one of the tenant parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Description"
        ]
      },
      "EntraIDTenantSpec": {
        "required": [
          "azureTenantId",
          "creationMode"
        ],
        "type": "object",
        "properties": {
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "description": "Tenant description.",
            "type": "string"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the tenant. If you do not specify the ID, the default backup repository is used.",
            "type": "string",
            "format": "uuid"
          },
          "region": {
            "$ref": "#/components/schemas/EAzureRegionType"
          },
          "creationMode": {
            "$ref": "#/components/schemas/EEntraIDTenantCreationMode"
          },
          "existingAccount": {
            "$ref": "#/components/schemas/EntraIDTenantExistingAccountSpec"
          },
          "newAccount": {
            "$ref": "#/components/schemas/EntraIDTenantNewAccountSpec"
          }
        }
      },
      "EEntraIDTenantCreationMode": {
        "description": "Connection method that defines whether you want to connect to Microsoft Entra ID using an existing or a newly created app registration.",
        "enum": [
          "newAccount",
          "existingAccount"
        ],
        "type": "string"
      },
      "EntraIDTenantExistingAccountSpec": {
        "description": "Existing Microsoft Entra ID app registration.",
        "type": "object",
        "required": [
          "authentication"
        ],
        "properties": {
          "authentication": {
            "$ref": "#/components/schemas/EntraIDTenantAuthenticationSpec"
          }
        }
      },
      "EntraIDTenantAuthenticationSpec": {
        "description": "Authentication settings.",
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "description": "Application (client) ID.",
            "type": "string"
          },
          "secret": {
            "description": "Application (client) secret.",
            "type": "string"
          },
          "certificate": {
            "$ref": "#/components/schemas/CertificateUploadSpec"
          }
        }
      },
      "EntraIDTenantNewAccountSpec": {
        "description": "New Microsoft Entra ID app registration.",
        "type": "object",
        "required": [
          "verificationCode"
        ],
        "properties": {
          "verificationCode": {
            "description": "Verification code.",
            "type": "string"
          }
        }
      },
      "EntraIDTenantModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Tenant ID assigned by Veeam Backup & Replication.",
            "type": "string",
            "format": "uuid"
          },
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "description": "Tenant description.",
            "type": "string"
          },
          "cacheRepositoryId": {
            "description": "ID of a backup repository that is used as a cache repository for the tenant.",
            "type": "string",
            "format": "uuid"
          },
          "region": {
            "$ref": "#/components/schemas/EAzureRegionType"
          },
          "authentication": {
            "$ref": "#/components/schemas/EntraIDTenantAuthenticationModel"
          }
        }
      },
      "EntraIDTenantAuthenticationModel": {
        "description": "Authentication settings.",
        "required": [
          "applicationId"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "description": "Application ID.",
            "type": "string"
          },
          "secret": {
            "description": "Application (client) secret.",
            "type": "string"
          },
          "certificate": {
            "$ref": "#/components/schemas/CertificateUploadSpec"
          }
        }
      },
      "VmwareObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          {
            "description": "VMware vSphere object.",
            "type": "object",
            "required": [
              "name",
              "type",
              "hostName"
            ],
            "properties": {
              "hostName": {
                "description": "Name of the VMware vSphere server that hosts the object.",
                "type": "string"
              },
              "name": {
                "description": "Name of the VMware vSphere object.",
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/EVmwareInventoryType"
              },
              "objectId": {
                "description": "ID of the VMware vSphere object. The parameter is required for all VMware vSphere objects except vCenter servers and standalone ESXi hosts.",
                "type": "string"
              },
              "urn": {
                "description": "Uniform Resource Name (URN) of the object.",
                "type": "string"
              }
            }
          }
        ]
      },
      "CloudDirectorObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          {
            "description": "Cloud Director object.",
            "required": [
              "name",
              "type",
              "hostName"
            ],
            "type": "object",
            "properties": {
              "hostName": {
                "description": "Name of the VMware Cloud Director server that hosts the object.",
                "type": "string"
              },
              "name": {
                "description": "Name of the VMware Cloud Director object.",
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/ECloudDirectorInventoryType"
              },
              "objectId": {
                "description": "ID of the VMware Cloud Director object. The parameter is required for all VMware Cloud Director objects.",
                "type": "string"
              },
              "urn": {
                "description": "Uniform Resource Name (URN) of the object.",
                "type": "string"
              }
            }
          }
        ]
      },
      "ECloudDirectorInventoryType": {
        "description": "Type of the VMware Cloud Director object.",
        "type": "string",
        "enum": [
          "Unknown",
          "VirtualMachine",
          "CloudDirectorServer",
          "Organization",
          "OrganizationVDC",
          "vApp",
          "StoragePolicy",
          "Network",
          "vCenter",
          "VmTemplate",
          "Datastore"
        ]
      },
      "InventoryBrowserFilters": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          "filter": {
            "$ref": "#/components/schemas/FilterExpressionModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/SortExpressionModel"
          },
          "hierarchyType": {
            "description": "Hierarchy type. Possible values&#58; <ul> <li>For VMware VSphere&#58; *HostsAndClusters*, *DatastoresAndVms*, *HostsAndDatastores*, *VmsAndTemplates*, *VmsAndTags*, *Network*</li> <li>For VMware Cloud Director&#58; *VAppsAndVms*, *Network*, *StoragePolicies*, *Datastores*</li></ul>",
            "type": "string"
          }
        }
      },
      "PaginationFilter": {
        "description": "Pagination settings.",
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of objects to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of objects to return.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EFilterExpressionType": {
        "description": "Expression type.",
        "type": "string",
        "enum": [
          "PredicateExpression",
          "GroupExpression"
        ]
      },
      "FilterExpressionModel": {
        "description": "Filter settings.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EFilterExpressionType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PredicateExpressionModel"
          },
          {
            "$ref": "#/components/schemas/GroupExpressionModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "PredicateExpression": "#/components/schemas/PredicateExpressionModel",
            "GroupExpression": "#/components/schemas/GroupExpressionModel"
          }
        }
      },
      "PredicateExpressionModel": {
        "description": "Predicate expression.",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterExpressionModel"
          },
          {
            "type": "object",
            "required": [
              "property",
              "operation",
              "value"
            ],
            "properties": {
              "property": {
                "description": "Name of an `InventoryObjectModel` property that you want to apply the predicate operation to. Possible values&#58; *platform*, *size*, *hostName*, *name*, *type*, *objectId*, *urn*.",
                "type": "string"
              },
              "operation": {
                "$ref": "#/components/schemas/EPredicateExpressionOperationType"
              },
              "value": {
                "description": "Value of the specified `InventoryObjectModel` property.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EPredicateExpressionOperationType": {
        "description": "Predicate operation (relational operator).",
        "x-enumDescriptions": {
          "in": "Returns objects whose property matches at least one of the specified values. To specify multiple values, separate them with a comma.",
          "contains": "Returns objects whose property contains the specified value.",
          "equals": "Returns objects whose property matches the specified value.",
          "notEquals": "Returns objects whose property does not match the specified value.",
          "lessThan": "Returns objects whose property is less than the specified value.",
          "lessThanOrEqual": "Returns objects whose property is less than or equal to the specified value.",
          "greaterThan": "Returns objects whose property is greater than the specified value.",
          "greaterThanOrEqual": "Returns objects whose property is greater than or equal to the specified value.",
          "startsWith": "Returns objects whose property starts with the specified value.",
          "endsWith": "Returns objects whose property ends with the specified value."
        },
        "type": "string",
        "enum": [
          "in",
          "contains",
          "equals",
          "notEquals",
          "lessThan",
          "lessThanOrEqual",
          "greaterThan",
          "greaterThanOrEqual",
          "startsWith",
          "endsWith"
        ]
      },
      "GroupExpressionModel": {
        "description": "Group expression.",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterExpressionModel"
          },
          {
            "type": "object",
            "required": [
              "operation",
              "items"
            ],
            "properties": {
              "operation": {
                "$ref": "#/components/schemas/EGroupExpressionOperationType"
              },
              "items": {
                "description": "Array of predicate and group expressions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterExpressionModel"
                }
              }
            }
          }
        ]
      },
      "EGroupExpressionOperationType": {
        "description": "Group operation (logical operator).",
        "x-enumDescriptions": {
          "not": "Returns objects that do not match all of the specified expressions.",
          "or": "Returns objects that match at least one of the specified expressions.",
          "and": "Returns objects that match all of the specified expressions."
        },
        "type": "string",
        "enum": [
          "not",
          "or",
          "and"
        ]
      },
      "SortExpressionModel": {
        "description": "Sorting settings.",
        "required": [
          "property"
        ],
        "type": "object",
        "properties": {
          "property": {
            "description": "Name of an `InventoryObjectModel` property that you want to sort the result by. Possible values&#58; *platform*, *size*, *hostName*, *name*, *type*, *objectId*, *urn*.",
            "type": "string"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "ESortExpressionDirectionType": {
        "description": "Sorting order.",
        "type": "string",
        "enum": [
          "ascending",
          "descending"
        ]
      },
      "InventoryBrowserResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of servers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          },
          "hierarchyType": {
            "description": "Hierarchy type.",
            "type": "string"
          }
        }
      },
      "CredentialsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of credentials records to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of credentials records to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ECredentialsFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts credentials in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters credentials by the `nameFilter` pattern. The pattern can match any credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ECredentialsType"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ECredentialsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Username",
          "Description"
        ]
      },
      "CredentialsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of credentials.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialsModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "CredentialsSpec": {
        "required": [
          "username",
          "type"
        ],
        "type": "object",
        "properties": {
          "username": {
            "description": "User name.",
            "type": "string"
          },
          "password": {
            "description": "Password.",
            "type": "string"
          },
          "description": {
            "description": "Description of the credentials record.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ECredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/StandardCredentialsSpec"
          },
          {
            "$ref": "#/components/schemas/LinuxCredentialsSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Standard": "#/components/schemas/StandardCredentialsSpec",
            "Linux": "#/components/schemas/LinuxCredentialsSpec"
          }
        }
      },
      "StandardCredentialsSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CredentialsSpec"
          },
          {
            "type": "object",
            "properties": {
              "uniqueId": {
                "description": "Unique ID that identifies the credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "LinuxCredentialsSpec": {
        "description": "Single-use credentials.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CredentialsSpec"
          },
          {
            "type": "object",
            "properties": {
              "uniqueId": {
                "description": "Unique ID that identifies the credentials record.",
                "type": "string"
              },
              "SSHPort": {
                "description": "SSH port used to connect to a Linux server.",
                "type": "integer"
              },
              "elevateToRoot": {
                "description": "If `true`, the permissions of the account are automatically elevated to the root user.",
                "type": "boolean"
              },
              "addToSudoers": {
                "description": "If `true`, the account is automatically added to the sudoers file.",
                "type": "boolean"
              },
              "useSu": {
                "description": "If `true`, the `su` command is used for Linux distributions where the `sudo` command is not available.",
                "type": "boolean"
              },
              "privateKey": {
                "description": "Private key.",
                "type": "string"
              },
              "passphrase": {
                "description": "Passphrase that protects the private key.",
                "type": "string"
              },
              "rootPassword": {
                "description": "Password for the root account.",
                "type": "string"
              }
            }
          }
        ]
      },
      "CredentialsModel": {
        "required": [
          "id",
          "username",
          "description",
          "type",
          "creationTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the credentials record.",
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "description": "User name.",
            "type": "string"
          },
          "description": {
            "description": "Description of the credentials record.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ECredentialsType"
          },
          "creationTime": {
            "description": "Date and time when the credentials were created.",
            "type": "string",
            "format": "date-time"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/StandardCredentialsModel"
          },
          {
            "$ref": "#/components/schemas/LinuxCredentialsModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Standard": "#/components/schemas/StandardCredentialsModel",
            "Linux": "#/components/schemas/LinuxCredentialsModel"
          }
        }
      },
      "StandardCredentialsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CredentialsModel"
          },
          {
            "type": "object",
            "properties": {
              "uniqueId": {
                "description": "Unique ID that identifies the credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "CredentialsPasswordChangeSpec": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "description": "New password.",
            "type": "string"
          }
        }
      },
      "LinuxCredentialsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CredentialsModel"
          },
          {
            "type": "object",
            "properties": {
              "uniqueId": {
                "description": "Unique ID that identifies the credentials record.",
                "type": "string"
              },
              "SSHPort": {
                "description": "SSH port used to connect to a Linux server.",
                "type": "integer"
              },
              "elevateToRoot": {
                "description": "If `true`, the permissions of the account are automatically elevated to the root user.",
                "type": "boolean"
              },
              "addToSudoers": {
                "description": "If `true`, the account is automatically added to the sudoers file.",
                "type": "boolean"
              },
              "useSu": {
                "description": "If `true`, the `su` command is used for Linux distributions where the `sudo` command is not available.",
                "type": "boolean"
              },
              "privateKey": {
                "description": "Private key.",
                "type": "string"
              },
              "passphrase": {
                "description": "Passphrase that protects the private key.",
                "type": "string"
              }
            }
          }
        ]
      },
      "PrivateKeyChangeSpec": {
        "required": [
          "privateKey"
        ],
        "type": "object",
        "properties": {
          "privateKey": {
            "description": "New private key.",
            "type": "string"
          },
          "passphrase": {
            "description": "Passphrase that protects the private key.",
            "type": "string"
          }
        }
      },
      "JobImportSpecCollection": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "description": "Array of jobs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobImportSpec"
            }
          }
        }
      },
      "JobImportSpec": {
        "required": [
          "description",
          "guestProcessing",
          "isHighPriority",
          "name",
          "schedule",
          "storage",
          "type",
          "virtualMachines"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the job.",
            "type": "string"
          },
          "description": {
            "description": "Description of the job.",
            "type": "string"
          },
          "isHighPriority": {
            "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/EJobType"
          },
          "virtualMachines": {
            "$ref": "#/components/schemas/BackupJobVirtualMachinesSpec"
          },
          "storage": {
            "$ref": "#/components/schemas/BackupJobStorageImportModel"
          },
          "guestProcessing": {
            "$ref": "#/components/schemas/BackupJobGuestProcessingImportModel"
          },
          "schedule": {
            "$ref": "#/components/schemas/BackupScheduleModel"
          }
        }
      },
      "BackupJobStorageImportModel": {
        "description": "Backup storage settings.",
        "required": [
          "backupProxies",
          "backupRepository",
          "retentionPolicy"
        ],
        "type": "object",
        "properties": {
          "backupRepository": {
            "$ref": "#/components/schemas/BackupRepositoryImportModel"
          },
          "backupProxies": {
            "$ref": "#/components/schemas/BackupJobImportProxiesModel"
          },
          "retentionPolicy": {
            "$ref": "#/components/schemas/BackupJobRetentionPolicySettingsModel"
          },
          "gfsPolicy": {
            "$ref": "#/components/schemas/GFSPolicySettingsModel"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/BackupJobAdvancedSettingsModel"
          }
        }
      },
      "BackupRepositoryImportModel": {
        "description": "Backup repository.",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          }
        }
      },
      "BackupJobImportProxiesModel": {
        "description": "Backup proxies.",
        "required": [
          "automaticSelection"
        ],
        "type": "object",
        "properties": {
          "automaticSelection": {
            "description": "If `true`, backup proxies are detected and assigned automatically.",
            "type": "boolean",
            "default": true
          },
          "proxies": {
            "description": "Array of backup proxies.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupProxyImportModel"
            }
          }
        }
      },
      "BackupProxyImportModel": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup proxy.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EBackupProxyImportType"
          },
          "uniqueId": {
            "description": "Unique ID assigned to the backup proxy.",
            "type": "string"
          }
        }
      },
      "EBackupProxyImportType": {
        "type": "string",
        "enum": [
          "vmware"
        ]
      },
      "BackupJobGuestProcessingImportModel": {
        "description": "Guest processing settings.",
        "required": [
          "applicationAwareProcessing",
          "guestFileSystemIndexing"
        ],
        "type": "object",
        "properties": {
          "applicationAwareProcessing": {
            "$ref": "#/components/schemas/BackupApplicationAwareProcessingImportModel"
          },
          "guestFileSystemIndexing": {
            "$ref": "#/components/schemas/GuestFileSystemIndexingModel"
          },
          "guestInteractionProxies": {
            "$ref": "#/components/schemas/GuestInteractionProxiesSettingsImportModel"
          },
          "guestCredentials": {
            "$ref": "#/components/schemas/GuestOsCredentialsImportModel"
          }
        }
      },
      "BackupApplicationAwareProcessingImportModel": {
        "description": "Application-aware processing settings.",
        "required": [
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, application-aware processing is enabled.",
            "type": "boolean"
          },
          "appSettings": {
            "description": "Array of VMware vSphere objects and their application settings.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupApplicationSettingsImportModel"
            }
          }
        }
      },
      "BackupApplicationSettingsImportModel": {
        "required": [
          "vmObject",
          "vss"
        ],
        "type": "object",
        "properties": {
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "vss": {
            "$ref": "#/components/schemas/EApplicationSettingsVSS"
          },
          "usePersistentGuestAgent": {
            "description": "If `true`, persistent guest agent is used.",
            "type": "boolean"
          },
          "transactionLogs": {
            "$ref": "#/components/schemas/ETransactionLogsSettings"
          },
          "sql": {
            "$ref": "#/components/schemas/BackupSQLSettingsImportModel"
          },
          "oracle": {
            "$ref": "#/components/schemas/BackupOracleSettingsImportModel"
          },
          "exclusions": {
            "$ref": "#/components/schemas/BackupFSExclusionsModel"
          },
          "scripts": {
            "$ref": "#/components/schemas/BackupScriptSettingsModel"
          }
        }
      },
      "BackupSQLSettingsImportModel": {
        "description": "Microsoft SQL Server transaction log settings.",
        "required": [
          "logsProcessing"
        ],
        "type": "object",
        "properties": {
          "logsProcessing": {
            "$ref": "#/components/schemas/ESQLLogsProcessing"
          },
          "backupMinsCount": {
            "description": "Frequency of transaction log backup, in minutes.",
            "type": "integer"
          },
          "retainLogBackups": {
            "$ref": "#/components/schemas/ERetainLogBackupsType"
          },
          "keepDaysCount": {
            "description": "Number of days to keep transaction logs in the backup repository.",
            "type": "integer"
          },
          "logShippingServers": {
            "$ref": "#/components/schemas/BackupLogShippingServersImportModel"
          }
        }
      },
      "BackupLogShippingServersImportModel": {
        "description": "Log shipping server used to transport logs.",
        "required": [
          "autoSelectEnabled"
        ],
        "type": "object",
        "properties": {
          "autoSelectEnabled": {
            "description": "If `true`, Veeam Backup & Replication chooses an optimal log shipping server automatically.",
            "type": "boolean"
          },
          "shippingServerNames": {
            "description": "Array of servers that are explicitly selected for log shipping.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BackupOracleSettingsImportModel": {
        "description": "Oracle archived log settings.",
        "required": [
          "archiveLogs",
          "useGuestCredentials"
        ],
        "type": "object",
        "properties": {
          "useGuestCredentials": {
            "description": "If `true`, Veeam Backup & Replication uses credentials specified in the guest processing settings.",
            "type": "boolean"
          },
          "credentials": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "archiveLogs": {
            "$ref": "#/components/schemas/EBackupOracleLogsSettings"
          },
          "deleteHoursCount": {
            "description": "Time period in hours to keep archived logs. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredHours*.",
            "type": "integer"
          },
          "deleteGBsCount": {
            "description": "Maximum size for archived logs in GB. This parameter should be specified if the `EBackupOracleLogsSettings` value is *deleteExpiredGBs*.",
            "type": "integer"
          },
          "backupLogs": {
            "description": "If `true`, archived logs are backed up.",
            "type": "boolean"
          },
          "backupMinsCount": {
            "description": "Frequency of archived log backup, in minutes.",
            "type": "integer"
          },
          "retainLogBackups": {
            "$ref": "#/components/schemas/ERetainLogBackupsType"
          },
          "keepDaysCount": {
            "description": "Number of days to keep archived logs.",
            "type": "integer"
          },
          "logShippingServers": {
            "$ref": "#/components/schemas/BackupLogShippingServersImportModel"
          }
        }
      },
      "GuestOsCredentialsImportModel": {
        "description": "VM custom credentials.",
        "type": "object",
        "properties": {
          "creds": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "credentialsPerMachine": {
            "description": "Individual credentials for VMs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuestOsCredentialsPerMachineImportModel"
            }
          }
        }
      },
      "GuestOsCredentialsPerMachineImportModel": {
        "required": [
          "vmObject"
        ],
        "type": "object",
        "properties": {
          "windowsCreds": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "linuxCreds": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "CredentialsImportModel": {
        "description": "Credentials used for connection.",
        "required": [
          "credentialsName"
        ],
        "type": "object",
        "properties": {
          "credentialsName": {
            "description": "User name, account name or access key.",
            "type": "string"
          },
          "credentialsTag": {
            "description": "Tag used to identify the credentials record.",
            "type": "string"
          }
        }
      },
      "GuestInteractionProxiesSettingsImportModel": {
        "description": "Guest interaction proxy used to deploy the runtime process on the VM guest OS.",
        "required": [
          "automaticSelection"
        ],
        "type": "object",
        "properties": {
          "automaticSelection": {
            "description": "If `true`, Veeam Backup & Replication automatically selects the guest interaction proxy.",
            "type": "boolean",
            "default": true
          },
          "proxies": {
            "description": "Array of proxies specified explicitly. The array must contain Microsoft Windows servers added to the backup infrastructure only.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JobExportSpec": {
        "type": "object",
        "properties": {
          "ids": {
            "description": "Array of job IDs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "types": {
            "description": "Array of job types.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "names": {
            "description": "Array of job names. Wildcard characters are supported.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ViRootFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of VMware vSphere servers to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of VMware vSphere servers to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EViRootFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts VMware vSphere servers in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters VMware vSphere servers by the `nameFilter` pattern. The pattern can match any VMware vSphere server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "type": "string"
          }
        }
      },
      "EViRootFiltersOrderColumn": {
        "description": "Sorts VMware vSphere servers by one of the VMware vSphere server parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Type"
        ]
      },
      "ViRootsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of VMware vSphere servers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "VCenterInventoryFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of objects to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of objects to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EvCentersInventoryFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts objects in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "objectIdFilter": {
            "description": "Filters objects by object ID.",
            "type": "string"
          },
          "hierarchyTypeFilter": {
            "$ref": "#/components/schemas/EHierarchyType"
          },
          "nameFilter": {
            "description": "Filters objects by the `nameFilter` pattern. The pattern can match any object parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/EVmwareInventoryType"
          },
          "parentContainerNameFilter": {
            "description": "Filters objects by name of the parent container.",
            "type": "string"
          }
        }
      },
      "EHierarchyType": {
        "description": "VMware vSphere hierarchy type.",
        "type": "string",
        "enum": [
          "HostsAndClusters",
          "DatastoresAndVms",
          "HostsAndDatastores",
          "VmsAndTemplates",
          "VmsAndTags",
          "Network"
        ]
      },
      "ECloudDirectorHierarchyType": {
        "description": "VMware Cloud Director hierarchy type.",
        "type": "string",
        "enum": [
          "VAppsAndVms",
          "Network",
          "StoragePolicies",
          "Datastores"
        ]
      },
      "EvCentersInventoryFiltersOrderColumn": {
        "description": "Sorts vCenter Servers by one of the job parameters.",
        "type": "string",
        "enum": [
          "Name",
          "ObjectId",
          "Type"
        ]
      },
      "VCenterInventoryResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of vCenter Servers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "CredentialsImportSpecCollection": {
        "required": [
          "credentials"
        ],
        "type": "object",
        "properties": {
          "credentials": {
            "description": "Array of credentials.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialsImportSpec"
            }
          }
        }
      },
      "CredentialsImportSpec": {
        "required": [
          "uniqueId",
          "type",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "description": "User name.",
            "type": "string"
          },
          "password": {
            "description": "Password.",
            "type": "string"
          },
          "description": {
            "description": "Description of the credentials record.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the credentials record.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ECredentialsType"
          },
          "linuxAdditionalSettings": {
            "$ref": "#/components/schemas/CredentialsLinuxSettingsImportModel"
          }
        }
      },
      "CredentialsLinuxSettingsImportModel": {
        "description": "Additional Linux account settings.",
        "type": "object",
        "properties": {
          "SSHPort": {
            "description": "SSH port used to connect to a Linux server.",
            "type": "integer"
          },
          "elevateToRoot": {
            "description": "If `true`, the permissions of the account are automatically elevated to the root user.",
            "type": "boolean"
          },
          "addToSudoers": {
            "description": "If `true`, the account is automatically added to the sudoers file.",
            "type": "boolean"
          },
          "useSu": {
            "description": "If `true`, the `su` command is used for Linux distributions where the `sudo` command is not available.",
            "type": "boolean"
          },
          "privateKey": {
            "description": "Private key.",
            "type": "string"
          },
          "passphrase": {
            "description": "Passphrase that protects the private key.",
            "type": "string"
          },
          "rootPassword": {
            "description": "Password for the root account.",
            "type": "string"
          }
        }
      },
      "CredentialsExportSpec": {
        "type": "object",
        "properties": {
          "showHiddenCreds": {
            "description": "If `true`, service credentials are exported.",
            "type": "boolean"
          },
          "ids": {
            "description": "Array of credentials IDs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "types": {
            "description": "Array of credentials types.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECredentialsType"
            }
          },
          "names": {
            "uniqueItems": true,
            "type": "array",
            "description": "Array of credentials user names. Wildcard characters are supported.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CloudCredentialsExportSpec": {
        "type": "object",
        "properties": {
          "ids": {
            "description": "Array of cloud credentials IDs that you want to export.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "types": {
            "description": "Array of cloud credentials types that you want to export.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ECloudCredentialsType"
            }
          },
          "names": {
            "uniqueItems": true,
            "type": "array",
            "description": "Array of cloud credentials user names. Wildcard characters are supported.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CloudCredentialsImportSpecCollection": {
        "type": "object",
        "properties": {
          "azureStorage": {
            "description": "Array of Azure storage accounts.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureStorageCloudCredentialsImportSpec"
            }
          },
          "azureCompute": {
            "description": "Array of Azure compute accounts.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureComputeCloudCredentialsImportSpec"
            }
          },
          "amazon": {
            "description": "Array of AWS accounts.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonCloudCredentialsImportSpec"
            }
          },
          "google": {
            "description": "Array of Google accounts.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GoogleCloudCredentialsImportSpec"
            }
          }
        }
      },
      "AzureStorageCloudCredentialsImportSpec": {
        "required": [
          "type",
          "uniqueId",
          "account",
          "sharedKey"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          },
          "description": {
            "description": "Description of the cloud credentials record.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the cloud credentials record.",
            "type": "string"
          },
          "account": {
            "description": "Name of the Azure storage account.",
            "type": "string"
          },
          "sharedKey": {
            "description": "Shared key of the Azure storage account.",
            "type": "string"
          }
        }
      },
      "AzureComputeCloudCredentialsImportSpec": {
        "required": [
          "type",
          "uniqueId",
          "connectionName",
          "existingAccount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          },
          "description": {
            "description": "Description of the cloud credentials record.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the cloud credentials record.",
            "type": "string"
          },
          "connectionName": {
            "description": "Name under which the cloud credentials record is shown in Veeam Backup & Replication.",
            "type": "string"
          },
          "existingAccount": {
            "$ref": "#/components/schemas/AzureComputeCredentialsExistingAccountSpec"
          }
        }
      },
      "AmazonCloudCredentialsImportSpec": {
        "required": [
          "type",
          "uniqueId",
          "accessKey",
          "secretKey"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          },
          "description": {
            "description": "Description of the cloud credentials record.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the cloud credentials record.",
            "type": "string"
          },
          "accessKey": {
            "description": "ID of the access key.",
            "type": "string"
          },
          "secretKey": {
            "description": "Secret key.",
            "type": "string"
          }
        }
      },
      "GoogleCloudCredentialsImportSpec": {
        "required": [
          "type",
          "uniqueId",
          "accessKey",
          "secretKey"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          },
          "description": {
            "description": "Description of the cloud credentials record.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the cloud credentials record.",
            "type": "string"
          },
          "accessKey": {
            "description": "Access ID of a Google HMAC key.",
            "type": "string"
          },
          "secretKey": {
            "description": "Secret linked to the access ID.",
            "type": "string"
          }
        }
      },
      "ProxyExportSpec": {
        "type": "object",
        "properties": {
          "ids": {
            "description": "Array of backup proxy IDs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "types": {
            "description": "Array of backup proxy types.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EProxyType"
            }
          },
          "names": {
            "uniqueItems": true,
            "type": "array",
            "description": "Array of backup proxy names. Wildcard characters are supported.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProxyImportSpecCollection": {
        "required": [
          "proxies"
        ],
        "type": "object",
        "properties": {
          "proxies": {
            "description": "Array of backup proxies.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProxyImportSpec"
            }
          }
        }
      },
      "ProxyImportSpec": {
        "required": [
          "description",
          "server",
          "type"
        ],
        "type": "object",
        "properties": {
          "description": {
            "description": "Description of the backup proxy.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EProxyType"
          },
          "server": {
            "$ref": "#/components/schemas/ProxyServerSettingsImportSpec"
          }
        }
      },
      "ProxyServerSettingsImportSpec": {
        "description": "Settings of the server that is used as a backup proxy.",
        "required": [
          "hostName"
        ],
        "type": "object",
        "properties": {
          "hostName": {
            "description": "Name of the server.",
            "type": "string"
          },
          "hostUniqueId": {
            "description": "Host unique ID assigned to the server.",
            "type": "string"
          },
          "transportMode": {
            "$ref": "#/components/schemas/EBackupProxyTransportMode"
          },
          "failoverToNetwork": {
            "description": "(For the Direct storage access and Virtual appliance transport modes) If `true`, Veeam Backup & Replication failovers to the network transport mode in case the primary mode fails or is unavailable.",
            "type": "boolean"
          },
          "hostToProxyEncryption": {
            "description": "(For the Network mode) If `true`, VM data is transferred over an encrypted TLS connection.",
            "type": "boolean"
          },
          "connectedDatastores": {
            "$ref": "#/components/schemas/ProxyDatastoreSettingsModel"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          }
        }
      },
      "ManageServerExportSpec": {
        "type": "object",
        "properties": {
          "ids": {
            "description": "Array of server IDs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "types": {
            "description": "Array of server types.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EManagedServerType"
            }
          },
          "names": {
            "description": "Array of server names. Wildcard characters are supported.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ManageServerImportSpecCollection": {
        "type": "object",
        "properties": {
          "windowsHosts": {
            "description": "Array of managed Microsoft Windows servers.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WindowsHostImportSpec"
            }
          },
          "linuxHosts": {
            "description": "Array of managed Linux servers.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxHostImportSpec"
            }
          },
          "viHosts": {
            "description": "Array of VMware vSphere servers.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViHostImportSpec"
            }
          },
          "cloudDirectorHosts": {
            "description": "Array of VMware Cloud Director servers.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudDirectorHostImportSpec"
            }
          }
        }
      },
      "WindowsHostImportSpec": {
        "required": [
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Full DNS name or IP address of the server.",
            "type": "string"
          },
          "description": {
            "description": "Description of the server.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EManagedServerType"
          },
          "credentials": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "networkSettings": {
            "$ref": "#/components/schemas/WindowsHostPortsModel"
          }
        }
      },
      "LinuxHostImportSpec": {
        "required": [
          "credentials",
          "description",
          "name",
          "type",
          "sshFingerprint"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Full DNS name or IP address of the server.",
            "type": "string"
          },
          "description": {
            "description": "Description of the server.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EManagedServerType"
          },
          "credentials": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "sshSettings": {
            "$ref": "#/components/schemas/LinuxHostSSHSettingsModel"
          },
          "sshFingerprint": {
            "type": "string",
            "description": "SSH key fingerprint used to verify the server identity."
          }
        }
      },
      "ViHostImportSpec": {
        "required": [
          "credentials",
          "description",
          "name",
          "type",
          "viHostType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Full DNS name or IP address of the server.",
            "type": "string"
          },
          "description": {
            "description": "Description of the server.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EManagedServerType"
          },
          "viHostType": {
            "$ref": "#/components/schemas/EViHostType"
          },
          "credentials": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "port": {
            "description": "Port used to communicate with the server.",
            "type": "integer"
          },
          "certificateThumbprint": {
            "description": "Certificate thumbprint used to verify the server identity.",
            "type": "string"
          }
        }
      },
      "CloudDirectorHostImportSpec": {
        "required": [
          "credentials",
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Full DNS name or IP address of the server.",
            "type": "string"
          },
          "description": {
            "description": "Description of the server.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EManagedServerType"
          },
          "credentials": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "certificateThumbprint": {
            "description": "Certificate thumbprint used to verify the server identity.",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "viServers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudDirectorViHostImportSpec"
            }
          }
        }
      },
      "CloudDirectorViHostImportSpec": {
        "type": "object",
        "required": [
          "viServerName",
          "viCredentials"
        ],
        "properties": {
          "viServerName": {
            "type": "string"
          },
          "viCredentials": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "certificateThumbprint": {
            "type": "string"
          }
        }
      },
      "RepositoryExportSpec": {
        "type": "object",
        "properties": {
          "ids": {
            "description": "Array of repository IDs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "types": {
            "description": "Array of repository types.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ERepositoryType"
            }
          },
          "names": {
            "description": "Array of repository names. Wildcard characters are supported.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RepositoryImportSpecCollection": {
        "type": "object",
        "properties": {
          "WindowsLocalRepositories": {
            "description": "Array of Microsoft Windows-based repositories.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WindowsLocalStorageImportSpec"
            }
          },
          "LinuxLocalRepositories": {
            "description": "Array of Linux-based repositories.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxLocalStorageImportSpec"
            }
          },
          "SmbRepositories": {
            "description": "Array of SMB backup repositories.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmbStorageImportSpec"
            }
          },
          "NfsRepositories": {
            "description": "Array of NFS backup repositories.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NfsStorageImportSpec"
            }
          },
          "AzureBlobStorages": {
            "description": "Array of Microsoft Azure Blob storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureBlobStorageImportSpec"
            }
          },
          "AzureDataBoxStorages": {
            "description": "Array of Microsoft Azure Data Box storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureDataBoxStorageImportSpec"
            }
          },
          "AmazonS3Storages": {
            "description": "Array of Amazon S3 storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonS3StorageImportSpec"
            }
          },
          "AmazonSnowballEdgeStorages": {
            "description": "Array of AWS Snowball Edge storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonSnowballEdgeStorageImportSpec"
            }
          },
          "S3CompatibleStorages": {
            "description": "Array of S3 compatible storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/S3CompatibleStorageImportSpec"
            }
          },
          "GoogleCloudStorages": {
            "description": "Array of Google Cloud storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GoogleCloudStorageImportSpec"
            }
          },
          "IBMCloudStorages": {
            "description": "Array of IBM Cloud storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBMCloudStorageImportSpec"
            }
          },
          "AmazonS3GlacierStorages": {
            "description": "Array of Amazon S3 Glacier storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonS3GlacierStorageImportSpec"
            }
          },
          "AzureArchiveStorages": {
            "description": "Array of Microsoft Azure Archive storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureArchiveStorageImportSpec"
            }
          },
          "WasabiCloudStorages": {
            "description": "Array of Wasabi Cloud storages.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WasabiCloudStorageImportSpec"
            }
          },
          "LinuxHardenedRepositories": {
            "description": "Array of Linux hardened repositories.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxHardenedStorageImportSpec"
            }
          }
        }
      },
      "WindowsLocalStorageImportSpec": {
        "required": [
          "description",
          "hostName",
          "mountServer",
          "name",
          "repository",
          "uniqueId",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          },
          "hostName": {
            "description": "ID of the server that is used as a backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "repository": {
            "$ref": "#/components/schemas/WindowsLocalRepositorySettingsModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "LinuxLocalStorageImportSpec": {
        "required": [
          "description",
          "hostName",
          "mountServer",
          "name",
          "repository",
          "uniqueId",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          },
          "hostName": {
            "description": "ID of the server that is used as a backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "repository": {
            "$ref": "#/components/schemas/LinuxLocalRepositorySettingsModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "LinuxHardenedStorageImportSpec": {
        "required": [
          "description",
          "hostName",
          "kind",
          "mountServer",
          "name",
          "repository",
          "uniqueId",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          },
          "hostName": {
            "description": "ID of the server that is used as a backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "repository": {
            "$ref": "#/components/schemas/LinuxHardenedRepositorySettingsModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "MountServerSettingsImportSpec": {
        "description": "Settings for the mount server that is used for file and application items restore.",
        "required": [
          "mountServerName",
          "vPowerNFSEnabled",
          "writeCacheFolder"
        ],
        "type": "object",
        "properties": {
          "mountServerName": {
            "description": "Name of the mount server.",
            "type": "string"
          },
          "writeCacheFolder": {
            "description": "Path to the folder used for writing cache during mount operations.",
            "type": "string"
          },
          "vPowerNFSEnabled": {
            "description": "If `true`, the vPower NFS Service is enabled on the mount server.",
            "type": "boolean"
          },
          "vPowerNFSPortSettings": {
            "$ref": "#/components/schemas/VPowerNFSPortSettingsModel"
          }
        }
      },
      "SmbStorageImportSpec": {
        "required": [
          "description",
          "mountServer",
          "name",
          "repository",
          "share",
          "uniqueId",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "share": {
            "$ref": "#/components/schemas/SmbRepositoryShareSettingsSpec"
          },
          "repository": {
            "$ref": "#/components/schemas/NetworkRepositorySettingsModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "NfsStorageImportSpec": {
        "required": [
          "description",
          "mountServer",
          "name",
          "repository",
          "share",
          "uniqueId",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "share": {
            "$ref": "#/components/schemas/NfsRepositoryShareSettingsSpec"
          },
          "repository": {
            "$ref": "#/components/schemas/NetworkRepositorySettingsModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "SmbRepositoryShareSettingsSpec": {
        "description": "Share settings.",
        "required": [
          "credentials",
          "sharePath"
        ],
        "type": "object",
        "properties": {
          "sharePath": {
            "description": "Path to the shared folder that is used as a backup repository.",
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/CredentialsImportModel"
          },
          "gatewayServer": {
            "$ref": "#/components/schemas/RepositoryShareGatewayImportSpec"
          }
        }
      },
      "NfsRepositoryShareSettingsSpec": {
        "required": [
          "sharePath"
        ],
        "type": "object",
        "properties": {
          "sharePath": {
            "description": "Path to the shared folder that is used as a backup repository.",
            "type": "string"
          },
          "gatewayServer": {
            "$ref": "#/components/schemas/RepositoryShareGatewayImportSpec"
          }
        }
      },
      "RepositoryShareGatewayImportSpec": {
        "description": "Settings for the gateway server.",
        "type": "object",
        "properties": {
          "autoSelectEnabled": {
            "description": "If `true`, Veeam Backup & Replication automatically selects a gateway server.",
            "type": "boolean"
          },
          "gatewayServerName": {
            "description": "Name of the gateway server.",
            "type": "string"
          }
        }
      },
      "AzureBlobStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "container",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/AzureBlobStorageAccountImportModel"
          },
          "container": {
            "$ref": "#/components/schemas/AzureBlobStorageContainerModel"
          },
          "proxyAppliance": {
            "$ref": "#/components/schemas/AzureStorageProxyModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "AzureBlobStorageAccountImportModel": {
        "description": "Account used to access the Azure Blob storage.",
        "type": "object",
        "required": [
          "credentials",
          "regionType"
        ],
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "regionType": {
            "$ref": "#/components/schemas/EAzureRegionType"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "CloudCredentialsImportModel": {
        "description": "Cloud credentials used for connection.",
        "required": [
          "name",
          "tag",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "User name, account name or access key.",
            "type": "string"
          },
          "tag": {
            "description": "Tag used to identify the cloud credentials record.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        }
      },
      "ObjectStorageConnectionImportSpec": {
        "description": "Object storage connection settings.",
        "type": "object",
        "required": [
          "connectionType"
        ],
        "properties": {
          "connectionType": {
            "$ref": "#/components/schemas/ERepositoryConnectionType"
          },
          "gatewayServers": {
            "description": "Array of gateway server IDs. The value is *null* if the connection type is *Direct*.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AzureDataBoxStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "container",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/AzureDataBoxStorageAccountImportModel"
          },
          "container": {
            "$ref": "#/components/schemas/AzureDataBoxStorageContainerModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "AzureDataBoxStorageAccountImportModel": {
        "description": "Account used to access the Azure Data Box storage.",
        "type": "object",
        "required": [
          "serviceEndpoint",
          "credentials",
          "connectionSettings"
        ],
        "properties": {
          "serviceEndpoint": {
            "description": "Service endpoint address of the Azure Data Box device.",
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "AmazonS3StorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "bucket",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/AmazonS3StorageAccountImportModel"
          },
          "bucket": {
            "$ref": "#/components/schemas/AmazonS3StorageBucketModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          },
          "proxyAppliance": {
            "$ref": "#/components/schemas/AmazonS3StorageProxyApplianceModel"
          }
        }
      },
      "AmazonS3StorageAccountImportModel": {
        "description": "Account used to access the Amazon S3 storage.",
        "type": "object",
        "required": [
          "credentials",
          "regionType",
          "connectionSettings"
        ],
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "regionType": {
            "$ref": "#/components/schemas/EAmazonRegionType"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "AmazonSnowballEdgeStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "bucket",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/AmazonSnowballEdgeStorageAccountImportModel"
          },
          "bucket": {
            "$ref": "#/components/schemas/AmazonSnowballEdgeStorageBucketModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "AmazonSnowballEdgeStorageAccountImportModel": {
        "description": "AWS account used to access the AWS Snowball Edge storage.",
        "type": "object",
        "required": [
          "servicePoint",
          "regionId",
          "credentials",
          "connectionSettings"
        ],
        "properties": {
          "servicePoint": {
            "description": "Service point address and port number of the AWS Snowball Edge device.",
            "type": "string"
          },
          "regionId": {
            "description": "For AWS Snowball Edge, the region is *snow*.",
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "S3CompatibleStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "bucket",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/S3CompatibleStorageAccountImportModel"
          },
          "bucket": {
            "$ref": "#/components/schemas/S3CompatibleStorageBucketModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          },
          "proxyAppliance": {
            "$ref": "#/components/schemas/S3CompatibleProxyModel"
          }
        }
      },
      "S3CompatibleStorageAccountImportModel": {
        "description": "Account used to access the S3 compatible storage.",
        "type": "object",
        "required": [
          "servicePoint",
          "regionId",
          "credentials",
          "connectionSettings"
        ],
        "properties": {
          "servicePoint": {
            "description": "Endpoint address of the storage.",
            "type": "string"
          },
          "regionId": {
            "description": "ID of a region where the storage is located.",
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "GoogleCloudStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "bucket",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/GoogleCloudStorageAccountImportModel"
          },
          "bucket": {
            "$ref": "#/components/schemas/GoogleCloudStorageBucketModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          }
        }
      },
      "GoogleCloudStorageAccountImportModel": {
        "description": "Account used to access the Google Cloud storage.",
        "type": "object",
        "required": [
          "credentials",
          "regionId",
          "connectionSettings"
        ],
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "regionId": {
            "description": "ID of a region where the storage bucket is located.",
            "type": "string"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "IBMCloudStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "bucket",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/IBMCloudStorageAccountImportModel"
          },
          "bucket": {
            "$ref": "#/components/schemas/IBMCloudStorageBucketModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          },
          "proxyAppliance": {
            "$ref": "#/components/schemas/S3CompatibleProxyModel"
          }
        }
      },
      "IBMCloudStorageAccountImportModel": {
        "description": "Account used to access the IBM Cloud storage.",
        "type": "object",
        "required": [
          "servicePoint",
          "regionId",
          "credentials",
          "connectionSettings"
        ],
        "properties": {
          "servicePoint": {
            "description": "Endpoint address of the storage.",
            "type": "string"
          },
          "regionId": {
            "description": "ID of a region where the storage is located.",
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "AmazonS3GlacierStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "bucket"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "account": {
            "$ref": "#/components/schemas/AmazonS3StorageAccountImportModel"
          },
          "bucket": {
            "$ref": "#/components/schemas/AmazonS3GlacierStorageBucketModel"
          },
          "proxyAppliance": {
            "$ref": "#/components/schemas/AmazonS3StorageProxyApplianceModel"
          }
        }
      },
      "AzureArchiveStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "container"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "account": {
            "$ref": "#/components/schemas/AzureArchiveStorageAccountImportModel"
          },
          "container": {
            "$ref": "#/components/schemas/AzureArchiveStorageContainerModel"
          },
          "proxyAppliance": {
            "$ref": "#/components/schemas/AzureStorageProxyModel"
          }
        }
      },
      "AzureArchiveStorageAccountImportModel": {
        "description": "Account used to access the Azure Archive storage.",
        "type": "object",
        "required": [
          "credentials",
          "regionType"
        ],
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "regionType": {
            "$ref": "#/components/schemas/EAzureRegionType"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "WasabiCloudStorageImportSpec": {
        "required": [
          "name",
          "description",
          "uniqueId",
          "type",
          "account",
          "bucket",
          "mountServer"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the object storage repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the object storage repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID that identifies the object storage repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "enableTaskLimit": {
            "description": "If `true`, the maximum number of concurrent tasks is limited.",
            "type": "boolean"
          },
          "maxTaskCount": {
            "description": "Maximum number of concurrent tasks.",
            "type": "integer"
          },
          "account": {
            "$ref": "#/components/schemas/WasabiCloudStorageAccountImportModel"
          },
          "bucket": {
            "$ref": "#/components/schemas/WasabiCloudStorageBucketModel"
          },
          "mountServer": {
            "$ref": "#/components/schemas/MountServerSettingsImportSpec"
          },
          "proxyAppliance": {
            "$ref": "#/components/schemas/S3CompatibleProxyModel"
          }
        }
      },
      "WasabiCloudStorageAccountImportModel": {
        "description": "Account used to access the Wasabi Cloud storage.",
        "type": "object",
        "required": [
          "regionId",
          "credentials",
          "connectionSettings"
        ],
        "properties": {
          "regionId": {
            "description": "ID of a region where the storage is located.",
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/CloudCredentialsImportModel"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionImportSpec"
          }
        }
      },
      "EncryptionPasswordsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EEncryptionPasswordsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          }
        }
      },
      "EEncryptionPasswordsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Hint",
          "ModificationTime"
        ]
      },
      "EncryptionPasswordSpec": {
        "required": [
          "hint",
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "description": "Password for data encryption. If you lose the password, you will not be able to restore it.",
            "type": "string"
          },
          "hint": {
            "description": "Hint for the encryption password. Provide a meaningful hint that will help you recall the password.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID for the encryption password.",
            "type": "string"
          }
        }
      },
      "EncryptionPasswordsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of encryption passwords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EncryptionPasswordModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EncryptionPasswordModel": {
        "required": [
          "hint",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the encryption password.",
            "type": "string",
            "format": "uuid"
          },
          "hint": {
            "description": "Hint for the encryption password.",
            "type": "string"
          },
          "modificationTime": {
            "description": "Date and time when the password was last modified.",
            "type": "string",
            "format": "date-time"
          },
          "uniqueId": {
            "description": "Unique ID for the encryption password.",
            "type": "string"
          }
        }
      },
      "EncryptionPasswordChangeSpec": {
        "required": [
          "hint",
          "password"
        ],
        "type": "object",
        "properties": {
          "hint": {
            "description": "Hint for the new encryption password.",
            "type": "string"
          },
          "password": {
            "description": "New password.",
            "type": "string"
          }
        }
      },
      "EncryptionPasswordImportSpecCollection": {
        "type": "object",
        "properties": {
          "encryptionPasswords": {
            "description": "Array of encryption passwords.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EncryptionPasswordImportSpec"
            }
          }
        }
      },
      "EncryptionPasswordImportSpec": {
        "required": [
          "hint",
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "description": "Password.",
            "type": "string"
          },
          "hint": {
            "description": "Hint for the encryption password.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID for the encryption password.",
            "type": "string"
          }
        }
      },
      "EncryptionPasswordExportSpec": {
        "type": "object",
        "properties": {
          "modificationTimeFrom": {
            "description": "Date and time when the password was last modified.",
            "type": "string",
            "format": "date-time"
          },
          "ids": {
            "description": "Array of password IDs.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "hints": {
            "description": "Array of password hints.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "Array of password tags.",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BackupsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EBackupsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "platformIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "jobIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "policyTagFilter": {
            "type": "string"
          }
        }
      },
      "EBackupsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "CreationTime",
          "PlatformId",
          "JobId",
          "PolicyTag"
        ]
      },
      "BackupsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of backups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "BackupModel": {
        "type": "object",
        "required": [
          "id",
          "name",
          "platformName",
          "platformId",
          "creationTime",
          "repositoryId"
        ],
        "properties": {
          "id": {
            "description": "Backup ID.",
            "type": "string",
            "format": "uuid"
          },
          "jobId": {
            "description": "ID of the job that created the backup.",
            "type": "string",
            "format": "uuid"
          },
          "policyUniqueId": {
            "description": "Unique ID that identifies retention policy.",
            "type": "string"
          },
          "name": {
            "description": "Name of the job that created the backup.",
            "type": "string"
          },
          "platformName": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformId": {
            "description": "ID of the platform of the backup resource.",
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "description": "Date and time when the backup was created.",
            "type": "string",
            "format": "date-time"
          },
          "repositoryId": {
            "description": "ID of the backup repository where the backup is stored.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BackupFilesResult": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of backup files.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupFileModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "BackupFileModel": {
        "type": "object",
        "required": [
          "id",
          "name",
          "backupId",
          "objectId",
          "restorePointId",
          "dataSize",
          "backupSize",
          "dedupRatio",
          "compressRatio",
          "creationTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Backup file ID.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Path of the backup file."
          },
          "backupId": {
            "type": "string",
            "description": "Backup ID.",
            "format": "uuid"
          },
          "objectId": {
            "type": "string",
            "description": "Object ID.",
            "format": "uuid"
          },
          "restorePointIds": {
            "type": "array",
            "description": "Array of IDs of the restore points associated with the backup file.",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "dataSize": {
            "type": "integer",
            "description": "Amount of data in bytes, before compression and deduplication.",
            "format": "int64"
          },
          "backupSize": {
            "type": "integer",
            "description": "Actual, physical amount of data in bytes, stored in the repository after compression and deduplication.",
            "format": "int64"
          },
          "dedupRatio": {
            "type": "integer",
            "description": "Deduplication ratio of the backup file."
          },
          "compressRatio": {
            "type": "integer",
            "description": "Compression ratio of the backup file."
          },
          "creationTime": {
            "type": "string",
            "description": "Date and time the backup file was created.",
            "format": "date-time"
          },
          "gfsPeriods": {
            "type": "array",
            "description": "Array of GFS flags assigned to the backup file.",
            "items": {
              "$ref": "#/components/schemas/EBackupFileGFSPeriod"
            }
          }
        }
      },
      "EBackupFileGFSPeriod": {
        "description": "GFS flag assigned to the backup file.",
        "enum": [
          "None",
          "Weekly",
          "Monthly",
          "Quarterly",
          "Yearly"
        ],
        "type": "string"
      },
      "BackupFilesFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "description": "Number of backup files to skip.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of backup files to return.",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EBackupFilesFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean",
            "description": "If `true`, sorts backup files in the ascending order by the `orderColumn` parameter."
          },
          "nameFilter": {
            "type": "string",
            "description": "Sorts backup files by the `nameFilter` pattern."
          },
          "createdAfterFilter": {
            "type": "string",
            "description": "Returns backup files that are created after the specified date and time.",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "description": "Returns backup files that are created before the specified date and time.",
            "format": "date-time"
          },
          "gfsPeriodFilter": {
            "$ref": "#/components/schemas/EBackupFileGFSPeriod"
          }
        }
      },
      "EBackupFilesFiltersOrderColumn": {
        "type": "string",
        "description": "Sorts backup files by one of the backup file parameters.",
        "enum": [
          "Name",
          "DataSize",
          "BackupSize",
          "DedupRatio",
          "CompressRatio",
          "CreationTime",
          "GFSPeriod"
        ]
      },
      "EPlatformType": {
        "description": "Platform type.",
        "type": "string",
        "enum": [
          "VMware",
          "HyperV",
          "CloudDirector",
          "WindowsPhysical",
          "LinuxPhysical",
          "Tape",
          "CustomPlatform",
          "EntraID",
          "UnstructuredData",
          "Test"
        ]
      },
      "BackupObjectsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EBackupObjectsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "platformNameFilter": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "typeFilter": {
            "type": "string"
          },
          "viTypeFilter": {
            "type": "string"
          }
        }
      },
      "EBackupObjectsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "ObjectId",
          "PlatformId",
          "Type"
        ]
      },
      "BackupObjectsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of backup objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupObjectModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "BackupObjectModel": {
        "type": "object",
        "required": [
          "id",
          "platformName"
        ],
        "properties": {
          "id": {
            "description": "ID of the object.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the object.",
            "type": "string"
          },
          "type": {
            "description": "Type of the object.",
            "type": "string"
          },
          "platformName": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformId": {
            "description": "ID of the platform where the object was created. The value is always *00000000-0000-0000-0000-000000000000* except for custom platforms.",
            "type": "string",
            "format": "uuid"
          },
          "restorePointsCount": {
            "description": "Number of restore points.",
            "type": "integer"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ViBackupObjectModel"
          },
          {
            "$ref": "#/components/schemas/CloudDirectorBackupObjectModel"
          },
          {
            "$ref": "#/components/schemas/EntraIDBackupObjectModel"
          }
        ],
        "discriminator": {
          "propertyName": "platformName",
          "mapping": {
            "VMware": "#/components/schemas/ViBackupObjectModel",
            "CloudDirector": "#/components/schemas/CloudDirectorBackupObjectModel",
            "EntraID": "#/components/schemas/EntraIDBackupObjectModel"
          }
        }
      },
      "EntraIDBackupObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupObjectModel"
          }
        ]
      },
      "ViBackupObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupObjectModel"
          },
          {
            "type": "object",
            "required": [
              "objectId"
            ],
            "properties": {
              "objectId": {
                "description": "ID of the virtual infrastructure object (mo-ref or ID, depending on the virtualization platform).",
                "type": "string"
              },
              "viType": {
                "$ref": "#/components/schemas/EVmwareInventoryType"
              },
              "path": {
                "description": "Path to the object.",
                "type": "string"
              }
            }
          }
        ]
      },
      "CloudDirectorBackupObjectModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupObjectModel"
          },
          {
            "type": "object",
            "required": [
              "objectId"
            ],
            "properties": {
              "objectId": {
                "type": "string",
                "description": "ID of the virtual infrastructure object (mo-ref or ID, depending on the virtualization platform)."
              },
              "cloudDirectorType": {
                "$ref": "#/components/schemas/ECloudDirectorInventoryType"
              },
              "path": {
                "description": "Path to the object.",
                "type": "string"
              }
            }
          }
        ]
      },
      "FailoverPlanStartToSpec": {
        "type": "object",
        "properties": {
          "timePeriod": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ViVMSnapshotReplicaCommitFailbackSpec": {
        "type": "object",
        "properties": {
          "replicaPointIds": {
            "description": "Array of replica restore points that you want to commit failback for.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ViVMSnapshotReplicaUndoFailbackSpec": {
        "type": "object",
        "properties": {
          "replicaPointIds": {
            "description": "Array of replica restore points that you want to undo failback for.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ViVMSnapshotReplicaSwitchToProductionFailbackSpec": {
        "type": "object",
        "properties": {
          "replicaPointIds": {
            "description": "Array of replica restore points that you want to switch over from.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ViVMSnapshotReplicaChangeSwitchoverTimeFailbackSpec": {
        "type": "object",
        "properties": {
          "replicaPointIds": {
            "description": "Array of replica restore points that you want to change switchover time for.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "failbackMode": {
            "$ref": "#/components/schemas/ReplicaFailbackModeSpec"
          }
        }
      },
      "FailoverPlansResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of failover plans.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FailoverPlanModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "FailoverPlanSpec": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EFailoverPlanType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/VmwareFailoverPlanSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Vmware": "#/components/schemas/VmwareFailoverPlanSpec"
          }
        }
      },
      "VmwareFailoverPlanSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FailoverPlanSpec"
          },
          {
            "type": "object",
            "properties": {
              "preFailoverScript": {
                "$ref": "#/components/schemas/FailoverPlanScriptModel"
              },
              "postFailoverScript": {
                "$ref": "#/components/schemas/FailoverPlanScriptModel"
              },
              "virtualMachines": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VmwareFailoverPlanVirtualMachineModel"
                }
              }
            }
          }
        ]
      },
      "FailoverPlanModel": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EFailoverPlanType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/VmwareFailoverPlanModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Vmware": "#/components/schemas/VmwareFailoverPlanModel"
          }
        }
      },
      "VmwareFailoverPlanModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FailoverPlanModel"
          },
          {
            "type": "object",
            "properties": {
              "preFailoverScript": {
                "$ref": "#/components/schemas/FailoverPlanScriptModel"
              },
              "postFailoverScript": {
                "$ref": "#/components/schemas/FailoverPlanScriptModel"
              },
              "virtualMachines": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VmwareFailoverPlanVirtualMachineModel"
                }
              }
            }
          }
        ]
      },
      "VmwareFailoverPlanVirtualMachineModel": {
        "type": "object",
        "properties": {
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "bootDelaySec": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FailoverPlanScriptModel": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "EFailoverPlanType": {
        "description": "Type of failover plan.",
        "type": "string",
        "enum": [
          "Vmware"
        ]
      },
      "ReplicasResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of replicas.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplicaModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EReplicaType": {
        "description": "Replica type.",
        "type": "string",
        "enum": [
          "Regular",
          "CDP"
        ]
      },
      "ReplicaModel": {
        "type": "object",
        "required": [
          "id",
          "type",
          "jobId",
          "name",
          "platformName"
        ],
        "properties": {
          "id": {
            "description": "ID of the replica.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EReplicaType"
          },
          "jobId": {
            "description": "ID of the job that created the replica.",
            "type": "string",
            "format": "uuid"
          },
          "policyUniqueId": {
            "description": "Unique ID that identifies retention policy.",
            "type": "string"
          },
          "name": {
            "description": "Name of the job that created the replica.",
            "type": "string"
          },
          "platformName": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformId": {
            "description": "ID of the platform of the replica resource.",
            "type": "string",
            "format": "uuid"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/RegularReplicaModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Regular": "#/components/schemas/RegularReplicaModel"
          }
        }
      },
      "RegularReplicaModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReplicaModel"
          },
          {
            "type": "object",
            "description": "Snapshot replica.",
            "required": [
              "creationTime",
              "state"
            ],
            "properties": {
              "creationTime": {
                "description": "Date and time when the replica was created.",
                "type": "string",
                "format": "date-time"
              },
              "state": {
                "$ref": "#/components/schemas/EReplicaState"
              }
            }
          }
        ]
      },
      "BackupDecryptionSpec": {
        "required": [
          "passwords"
        ],
        "type": "object",
        "properties": {
          "passwords": {
            "description": "Array of passwords.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReplicaRescanSpec": {
        "type": "object",
        "properties": {
          "replicaIds": {
            "description": "Array of replica IDs that you want to rescan.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ReplicaPointsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of restore points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplicaPointModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ReplicaPointModel": {
        "description": "Replica restore point.",
        "type": "object",
        "required": [
          "id",
          "name",
          "platformName",
          "platformId",
          "creationTime",
          "replicaId",
          "allowedOperations"
        ],
        "properties": {
          "id": {
            "description": "ID of the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the object that the restore point was created for.",
            "type": "string"
          },
          "platformName": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformId": {
            "description": "ID of a platform where the object was created.",
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "description": "Date and time when the restore point was created.",
            "type": "string",
            "format": "date-time"
          },
          "replicaId": {
            "description": "ID of a replica that contains the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "allowedOperations": {
            "description": "Array of operations allowed for the restore point.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EObjectRestorePointOperation"
            }
          },
          "state": {
            "$ref": "#/components/schemas/EReplicaState"
          },
          "malwareStatus": {
            "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
          }
        }
      },
      "ViVMSnapshotReplicaFailoverSpec": {
        "required": [
          "replicaPointIds"
        ],
        "type": "object",
        "properties": {
          "replicaPointIds": {
            "description": "Array of replica restore points.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "reason": {
            "description": "Operation reason.",
            "type": "string"
          }
        }
      },
      "ViVMSnapshotReplicaFailbackSpec": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "replicaPointIds": {
            "description": "Array of replica restore points that you want to fail back from.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "type": {
            "$ref": "#/components/schemas/EReplicaFailbackType"
          },
          "drSiteProxyId": {
            "description": "Array of backup proxies in the disaster recovery site.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "productionSiteProxyId": {
            "description": "Array of backup proxies in the production site.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "powerOnTargetVM": {
            "description": "If `true`, the target VMs will be powered on right after the failback.",
            "type": "boolean"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ViVMSnapshotReplicaOriginalLocationFailbackSpec"
          },
          {
            "$ref": "#/components/schemas/ViVMSnapshotReplicaOriginalVMFailbackSpec"
          },
          {
            "$ref": "#/components/schemas/ViVMSnapshotReplicaCustomizedFailbackSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "OriginalLocation": "#/components/schemas/ViVMSnapshotReplicaOriginalLocationFailbackSpec",
            "OriginalVM": "#/components/schemas/ViVMSnapshotReplicaOriginalVMFailbackSpec",
            "Customized": "#/components/schemas/ViVMSnapshotReplicaCustomizedFailbackSpec"
          }
        }
      },
      "ViVMSnapshotReplicaOriginalLocationFailbackSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackSpec"
          },
          {
            "type": "object",
            "properties": {
              "quickRollback": {
                "description": "If `true`, quick rollback is enabled (for VMware vSphere prior to version 7.0).",
                "type": "boolean"
              },
              "failbackMode": {
                "$ref": "#/components/schemas/ReplicaFailbackModeSpec"
              }
            }
          }
        ]
      },
      "ViVMSnapshotReplicaOriginalVMFailbackSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackSpec"
          },
          {
            "type": "object",
            "properties": {
              "targetVM": {
                "description": "Array of restore points and target VMs.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackTargetVMSpec"
                }
              },
              "failbackMode": {
                "$ref": "#/components/schemas/ReplicaFailbackModeSpec"
              }
            }
          }
        ]
      },
      "ViVMSnapshotReplicaCustomizedFailbackSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackSpec"
          },
          {
            "type": "object",
            "properties": {
              "destinationhost": {
                "description": "Array of restore points and target hosts (or clusters) where the replicas will be registered. To get the inventory objects, use the [Get All Servers](#tag/Inventory-Browser/operation/GetAllInventoryHosts) and [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) requests.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackTargetHostSpec"
                }
              },
              "resourcePool": {
                "description": "Array of restore points and target resource pools. To get a resource pool object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackTargetResourcePoolSpec"
                }
              },
              "datastore": {
                "description": "Array of datastores where configuration files and disk files of recovered VMs will be stored. To get a datastore object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackTargetDatastoreSpec"
                }
              },
              "folder": {
                "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackTargetFolderSpec"
              },
              "network": {
                "description": "Array of restore point and network mapping rules.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackTargetNetworkSpec"
                }
              },
              "failbackMode": {
                "$ref": "#/components/schemas/ReplicaFailbackModeSpec"
              }
            }
          }
        ]
      },
      "ViVMSnapshotReplicaFailbackTargetHostSpec": {
        "type": "object",
        "properties": {
          "replicaPointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "host": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "ViVMSnapshotReplicaFailbackTargetResourcePoolSpec": {
        "type": "object",
        "properties": {
          "replicaPointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "resourcePool": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "ViVMSnapshotReplicaFailbackTargetDatastoreSpec": {
        "type": "object",
        "properties": {
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "disks": {
            "description": "Array of disks that you want to store on the specified datastore.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViVmSnapshotReplicaFailbackTargetDiskSpec"
            }
          }
        }
      },
      "ViVmSnapshotReplicaFailbackTargetDiskSpec": {
        "required": [
          "diskName",
          "datastore"
        ],
        "type": "object",
        "properties": {
          "diskName": {
            "description": "Disk name.",
            "type": "string"
          },
          "datastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "diskType": {
            "$ref": "#/components/schemas/EDiskCreationMode"
          }
        }
      },
      "ViVMSnapshotReplicaFailbackTargetFolderSpec": {
        "description": "Folders in the target datastores where all files of the recovered VMs will be stored.",
        "type": "object",
        "properties": {
          "restoreVMTags": {
            "description": "If `true`, Veeam Backup & Replication restores tags that were assigned to the original VMs, and assigns them to the recovered VMs.",
            "type": "boolean"
          },
          "folderMapping": {
            "description": "Array of restore points and target folders. To get a folder object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViVMSnapshotReplicaFailbackFolderMappingSpec"
            }
          }
        }
      },
      "ViVMSnapshotReplicaFailbackFolderMappingSpec": {
        "type": "object",
        "properties": {
          "replicaPointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "folder": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "ViVMSnapshotReplicaFailbackTargetNetworkSpec": {
        "type": "object",
        "properties": {
          "replicaPointId": {
            "type": "string",
            "description": "Restore point ID.",
            "format": "uuid"
          },
          "networks": {
            "description": "Array of network mapping rules. To get a network object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViVmSnapshotReplicaFailbackNetworkMappingModel"
            }
          }
        }
      },
      "ViVmSnapshotReplicaFailbackNetworkMappingModel": {
        "type": "object",
        "properties": {
          "sourceNetwork": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "targetNetwork": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "ReplicaFailbackModeSpec": {
        "description": "Failback mode.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EFailbackModeType"
          },
          "scheduledTime": {
            "description": "Date and time when switchover to production must be performed (for scheduled mode).",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ViVMSnapshotReplicaFailbackTargetVMSpec": {
        "type": "object",
        "properties": {
          "replicaPointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "destinationVM": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "EFailbackModeType": {
        "description": "Failback mode type.",
        "type": "string",
        "enum": [
          "Auto",
          "Scheduled",
          "Manual"
        ]
      },
      "EReplicaFailbackType": {
        "description": "Failback type.<ul><li>`OriginalLocation` — Failback to the original VM that resides in the original location</li><li>`OriginalVM` — Failback to the original VM that was restored to a different location</li><li>`Customized` — Failback to a custom location</li></ul>",
        "type": "string",
        "enum": [
          "OriginalLocation",
          "OriginalVM",
          "Customized"
        ]
      },
      "WANAcceleratorSpec": {
        "type": "object",
        "properties": {
          "server": {
            "$ref": "#/components/schemas/WANAcceleratorServerModel"
          },
          "cache": {
            "$ref": "#/components/schemas/WANAcceleratorCacheModel"
          }
        }
      },
      "WANAcceleratorPopulateCacheSpec": {
        "type": "object",
        "properties": {
          "repositoryIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "WANAcceleratorsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of WAN accelerators.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WANAcceleratorModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "WANAcceleratorModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "WAN accelerator ID.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Server name or IP address.",
            "type": "string"
          },
          "server": {
            "$ref": "#/components/schemas/WANAcceleratorServerModel"
          },
          "cache": {
            "$ref": "#/components/schemas/WANAcceleratorCacheModel"
          }
        }
      },
      "WANAcceleratorServerModel": {
        "description": "Microsoft Windows server used as a WAN accelerator.",
        "type": "object",
        "properties": {
          "hostId": {
            "description": "Server ID.",
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "description": "WAN accelerator description.",
            "type": "string"
          },
          "trafficPort": {
            "description": "Number of the port used for communication with other WAN accelerators.",
            "type": "integer",
            "format": "int32"
          },
          "streamsCount": {
            "description": "Number of connections that are used to transmit data between WAN accelerators. This setting applies only to the source WAN accelerator.",
            "type": "integer",
            "format": "int32"
          },
          "highBandwidthModeEnabled": {
            "description": "If `true`, the high bandwidth mode is enabled.",
            "type": "boolean"
          }
        }
      },
      "WANAcceleratorCacheModel": {
        "description": "Cache settings. Cache is used for storing service files (for source and target WAN accelerators) and global cache data (for target WAN accelerator).",
        "type": "object",
        "properties": {
          "cacheFolder": {
            "description": "Path to the cache folder.",
            "type": "string"
          },
          "cacheSize": {
            "description": "Cache size.",
            "type": "integer",
            "format": "int32"
          },
          "cacheSizeUnit": {
            "$ref": "#/components/schemas/EWANAcceleratorCacheSizeUnit"
          }
        }
      },
      "JobSpec": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "description": "Name of the job.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EJobType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/BackupJobSpec"
          },
          {
            "$ref": "#/components/schemas/CloudDirectorBackupJobSpec"
          },
          {
            "$ref": "#/components/schemas/VSphereReplicaJobSpec"
          },
          {
            "$ref": "#/components/schemas/EntraIDTenantBackupJobSpec"
          },
          {
            "$ref": "#/components/schemas/EntraIDAuditLogBackupJobSpec"
          },
          {
            "$ref": "#/components/schemas/FileBackupCopyJobSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Backup": "#/components/schemas/BackupJobSpec",
            "VSphereReplica": "#/components/schemas/VSphereReplicaJobSpec",
            "CloudDirectorBackup": "#/components/schemas/CloudDirectorBackupJobSpec",
            "EntraIDTenantBackup": "#/components/schemas/EntraIDTenantBackupJobSpec",
            "EntraIDAuditLogBackup": "#/components/schemas/EntraIDAuditLogBackupJobSpec",
            "FileBackupCopy": "#/components/schemas/FileBackupCopyJobSpec"
          }
        }
      },
      "EntraIDTenantBackupJobSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobSpec"
          },
          {
            "type": "object",
            "required": [
              "description",
              "storage"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "storage": {
                "$ref": "#/components/schemas/EntraIDTenantBackupJobStorageModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "EntraIDAuditLogBackupJobSpec": {
        "description": "Microsoft Entra ID audit log backup job.",
        "allOf": [
          {
            "$ref": "#/components/schemas/JobSpec"
          },
          {
            "type": "object",
            "required": [
              "description",
              "tenant"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
                "type": "boolean"
              },
              "tenant": {
                "$ref": "#/components/schemas/EntraIDAuditLogBackupJobTenantModel"
              },
              "storage": {
                "$ref": "#/components/schemas/EntraIDAuditLogBackupJobStorageModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "FileBackupCopyJobSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobSpec"
          },
          {
            "type": "object",
            "required": [
              "primaryJobId",
              "backupRepositoryId"
            ],
            "properties": {
              "primaryJobId": {
                "type": "string",
                "format": "uuid"
              },
              "backupRepositoryId": {
                "type": "string",
                "format": "uuid"
              },
              "useCustomRetention": {
                "type": "boolean"
              },
              "retentionPolicy": {
                "$ref": "#/components/schemas/FileBackupRetentionPolicySettingsModel"
              },
              "useCustomEncryption": {
                "type": "boolean"
              },
              "encryption": {
                "$ref": "#/components/schemas/BackupStorageSettingsEncryptionModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/FileBackupCopyJobScheduleModel"
              }
            }
          }
        ]
      },
      "BackupJobSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobSpec"
          },
          {
            "required": [
              "description",
              "virtualMachines"
            ],
            "type": "object",
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
                "type": "boolean",
                "default": false
              },
              "virtualMachines": {
                "$ref": "#/components/schemas/BackupJobVirtualMachinesSpec"
              },
              "storage": {
                "$ref": "#/components/schemas/BackupJobStorageModel"
              },
              "guestProcessing": {
                "$ref": "#/components/schemas/BackupJobGuestProcessingModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "CloudDirectorBackupJobSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobSpec"
          },
          {
            "type": "object",
            "required": [
              "description",
              "virtualMachines"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
                "type": "boolean"
              },
              "virtualMachines": {
                "$ref": "#/components/schemas/BackupJobVirtualMachinesSpec"
              },
              "storage": {
                "$ref": "#/components/schemas/BackupJobStorageModel"
              },
              "guestProcessing": {
                "$ref": "#/components/schemas/BackupJobGuestProcessingModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "JobModel": {
        "required": [
          "id",
          "name",
          "type",
          "isDisabled"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the job.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the job.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EJobType"
          },
          "isDisabled": {
            "description": "If `true`, the job is disabled.",
            "type": "boolean"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/BackupJobModel"
          },
          {
            "$ref": "#/components/schemas/CloudDirectorBackupJobModel"
          },
          {
            "$ref": "#/components/schemas/VSphereReplicaJobModel"
          },
          {
            "$ref": "#/components/schemas/EntraIDTenantBackupJobModel"
          },
          {
            "$ref": "#/components/schemas/EntraIDAuditLogBackupJobModel"
          },
          {
            "$ref": "#/components/schemas/FileBackupCopyJobModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Backup": "#/components/schemas/BackupJobModel",
            "VSphereReplica": "#/components/schemas/VSphereReplicaJobModel",
            "CloudDirectorBackup": "#/components/schemas/CloudDirectorBackupJobModel",
            "EntraIDTenantBackup": "#/components/schemas/EntraIDTenantBackupJobModel",
            "EntraIDAuditLogBackup": "#/components/schemas/EntraIDAuditLogBackupJobModel",
            "FileBackupCopy": "#/components/schemas/FileBackupCopyJobModel"
          }
        }
      },
      "VSphereReplicaJobSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JobSpec"
          },
          {
            "type": "object",
            "required": [
              "description",
              "virtualMachines",
              "destination"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
                "type": "boolean"
              },
              "virtualMachines": {
                "$ref": "#/components/schemas/VSphereReplicaJobVirtualMachinesSpec"
              },
              "destination": {
                "$ref": "#/components/schemas/VSphereReplicaJobDestinationModel"
              },
              "network": {
                "description": "Array of mapping rules for networks. Use mapping rules if destination site networks do not match your production site networks.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VSphereReplicaJobNetworkMappingModel"
                }
              },
              "reIp": {
                "$ref": "#/components/schemas/ReplicaJobReIpRulesModel"
              },
              "jobSettings": {
                "$ref": "#/components/schemas/VSphereReplicaJobSettingsModel"
              },
              "dataTransfer": {
                "$ref": "#/components/schemas/VSphereReplicaJobDataTransferModel"
              },
              "seeding": {
                "$ref": "#/components/schemas/VSphereReplicaSeedingModel"
              },
              "guestProcessing": {
                "$ref": "#/components/schemas/ReplicaJobGuestProcessingModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "VSphereReplicaJobVirtualMachinesSpec": {
        "description": "Included and excluded objects.",
        "required": [
          "includes"
        ],
        "type": "object",
        "properties": {
          "includes": {
            "description": "Array of VMs and VM containers processed by the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "excludes": {
            "$ref": "#/components/schemas/VSphereReplicaJobExclusionsSpec"
          },
          "sourceRepositories": {
            "$ref": "#/components/schemas/ReplicaSourceRepositoriesModel"
          }
        }
      },
      "VSphereReplicaJobExclusionsSpec": {
        "description": "Objects excluded from the job.",
        "type": "object",
        "properties": {
          "vms": {
            "description": "Array of VMs excluded from the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "disks": {
            "description": "Array of VM disks excluded from the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VmwareObjectDiskModel"
            }
          }
        }
      },
      "EVMDataSourceRepositoryType": {
        "description": "Data source type.",
        "x-enumDescriptions": {
          "ProductionStorage": "Veeam Backup & Replication retrieves VM data from datastores connected to the source ESXi host.",
          "BackupFiles": "Veeam Backup & Replication retrieves VM data from the backup chain already existing in the selected backup repositories. Use this option if you perform replication from backup."
        },
        "type": "string",
        "enum": [
          "ProductionStorage",
          "BackupFiles"
        ]
      },
      "ReplicaSourceRepositoriesModel": {
        "description": "Source to obtain VM data from.",
        "type": "object",
        "required": [
          "sourceType"
        ],
        "properties": {
          "sourceType": {
            "$ref": "#/components/schemas/EVMDataSourceRepositoryType"
          },
          "repositoryIds": {
            "description": "Array of repository IDs to obtain data from.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "VSphereReplicaJobModel": {
        "description": "VMware vSphere replication job.",
        "allOf": [
          {
            "$ref": "#/components/schemas/JobModel"
          },
          {
            "type": "object",
            "required": [
              "description",
              "virtualMachines",
              "destination"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler prioritizes this job higher than other similar jobs and allocates resources to it in the first place.",
                "type": "boolean"
              },
              "virtualMachines": {
                "$ref": "#/components/schemas/VSphereReplicaJobVirtualMachinesModel"
              },
              "destination": {
                "$ref": "#/components/schemas/VSphereReplicaJobDestinationModel"
              },
              "network": {
                "description": "Array of mapping rules for networks. Mapping rules are used if destination site networks do not match your production site networks.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VSphereReplicaJobNetworkMappingModel"
                }
              },
              "reIp": {
                "$ref": "#/components/schemas/ReplicaJobReIpRulesModel"
              },
              "jobSettings": {
                "$ref": "#/components/schemas/VSphereReplicaJobSettingsModel"
              },
              "dataTransfer": {
                "$ref": "#/components/schemas/VSphereReplicaJobDataTransferModel"
              },
              "seeding": {
                "$ref": "#/components/schemas/VSphereReplicaSeedingModel"
              },
              "guestProcessing": {
                "$ref": "#/components/schemas/ReplicaJobGuestProcessingModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "VSphereReplicaJobVirtualMachinesModel": {
        "description": "Included and excluded objects.",
        "required": [
          "includes"
        ],
        "type": "object",
        "properties": {
          "includes": {
            "description": "Array of VMs and VM containers processed by the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "excludes": {
            "$ref": "#/components/schemas/VSphereReplicaJobExclusionsModel"
          },
          "sourceRepositories": {
            "$ref": "#/components/schemas/ReplicaSourceRepositoriesModel"
          }
        }
      },
      "VSphereReplicaJobExclusionsModel": {
        "description": "Objects excluded from the job.",
        "type": "object",
        "properties": {
          "vms": {
            "description": "Array of VMs excluded from the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryObjectModel"
            }
          },
          "disks": {
            "description": "Array of VM disks excluded from the job.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VmwareObjectDiskModel"
            }
          }
        }
      },
      "VSphereReplicaJobDestinationModel": {
        "description": "Replica destination&#58; target host or cluster, target resource pool, target folder, target datastore and mapping rules.",
        "type": "object",
        "required": [
          "host",
          "resourcePool",
          "folder",
          "datastore"
        ],
        "properties": {
          "host": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "resourcePool": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "folder": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "datastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "mappingRules": {
            "description": "Mapping rules that define files location and disk provisioning types for replica VMs.<ul><li>`vmObject` — VM that you customize files location for.</li><li>`configurationFilesDatastoreMapping` — Datastore for replica configuration files.</li><li>`diskFilesMapping` — Mapping rules for VM disks.</li></ul>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VSphereReplicaJobDestinationMappingModel"
            }
          }
        }
      },
      "VSphereReplicaJobDestinationMappingModel": {
        "description": "Mapping rule.",
        "type": "object",
        "required": [
          "vmObject",
          "configurationFilesDatastoreMapping"
        ],
        "properties": {
          "vmObject": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "configurationFilesDatastoreMapping": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "diskFilesMapping": {
            "description": "Array of disk mapping rules (disk name, disk datastore and provisioning type).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VSphereReplicaJobDestinationFilesMappingModel"
            }
          }
        }
      },
      "VSphereReplicaJobDestinationFilesMappingModel": {
        "type": "object",
        "required": [
          "diskName",
          "datastore",
          "diskType"
        ],
        "properties": {
          "diskName": {
            "description": "Disk name.",
            "type": "string"
          },
          "datastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "diskType": {
            "$ref": "#/components/schemas/EDiskCreationMode"
          }
        }
      },
      "VSphereReplicaJobNetworkMappingModel": {
        "description": "Network mapping rule.",
        "type": "object",
        "required": [
          "sourceNetwork",
          "targetNetwork"
        ],
        "properties": {
          "sourceNetwork": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "targetNetwork": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "CloudDirectorBackupJobModel": {
        "description": "VMware Cloud Director backup job.",
        "allOf": [
          {
            "$ref": "#/components/schemas/JobModel"
          },
          {
            "type": "object",
            "required": [
              "description",
              "virtualMachines"
            ],
            "properties": {
              "description": {
                "description": "Description of the job.",
                "type": "string"
              },
              "isHighPriority": {
                "description": "If `true`, the resource scheduler will prioritize this job higher than other similar jobs and allocate resources to it in the first place.",
                "type": "boolean"
              },
              "virtualMachines": {
                "$ref": "#/components/schemas/BackupJobVirtualMachinesModel"
              },
              "storage": {
                "$ref": "#/components/schemas/BackupJobStorageModel"
              },
              "guestProcessing": {
                "$ref": "#/components/schemas/BackupJobGuestProcessingModel"
              },
              "schedule": {
                "$ref": "#/components/schemas/BackupScheduleModel"
              }
            }
          }
        ]
      },
      "ReplicaJobReIpRulesModel": {
        "description": "Re-IP rules that map IPs in the production site to IPs in the disaster recovery site.",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Array of re-IP rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplicaJobReIpRuleModel"
            }
          }
        }
      },
      "ReplicaJobReIpRuleModel": {
        "description": "Re-IP rule.",
        "type": "object",
        "properties": {
          "description": {
            "description": "Rule description.",
            "type": "string"
          },
          "ruleType": {
            "$ref": "#/components/schemas/ENetworkRuleType"
          },
          "ipv4": {
            "$ref": "#/components/schemas/IPv4NetworkRuleModel"
          },
          "ipv6": {
            "$ref": "#/components/schemas/IPv6NetworkRuleModel"
          }
        }
      },
      "IPv4NetworkRuleModel": {
        "description": "IPv4 network rule.",
        "type": "object",
        "required": [
          "sourceIPAddress",
          "sourceSubnetMask",
          "targetIPAddress",
          "targetSubnetMask",
          "targetDefaultGateway"
        ],
        "properties": {
          "sourceIPAddress": {
            "description": "IP address of the source VM.",
            "type": "string"
          },
          "sourceSubnetMask": {
            "description": "Subnet mask of the source VM.",
            "type": "string"
          },
          "targetIPAddress": {
            "description": "IP address of the replica.",
            "type": "string"
          },
          "targetSubnetMask": {
            "description": "Subnet mask of the replica.",
            "type": "string"
          },
          "targetDefaultGateway": {
            "description": "Defaul gateway address.",
            "type": "string"
          },
          "preferredDNSServer": {
            "description": "Preferred DNS server address.",
            "type": "string"
          },
          "alternateDNSServer": {
            "description": "Alternate DNS server address.",
            "type": "string"
          },
          "preferredWINSServer": {
            "description": "Preferred WINS server address.",
            "type": "string"
          },
          "alternateWINSServer": {
            "description": "Alternate WINS server address.",
            "type": "string"
          }
        }
      },
      "IPv6NetworkRuleModel": {
        "description": "IPv6 network rule.",
        "type": "object",
        "required": [
          "sourceIPv6Address",
          "sourceSubnetPrefixLength",
          "targetIPv6Address",
          "targetSubnetPrefixLength",
          "targetDefaultGateway"
        ],
        "properties": {
          "sourceIPv6Address": {
            "description": "IP address of the source VM.",
            "type": "string"
          },
          "sourceSubnetPrefixLength": {
            "description": "Source subnet prefix length.",
            "type": "integer",
            "format": "int32"
          },
          "targetIPv6Address": {
            "description": "IP address of the replica.",
            "type": "string"
          },
          "targetSubnetPrefixLength": {
            "description": "Target subnet prefix length.",
            "type": "integer",
            "format": "int32"
          },
          "targetDefaultGateway": {
            "description": "Defaul gateway address.",
            "type": "string"
          },
          "preferredDNSServer": {
            "description": "Preferred DNS server address.",
            "type": "string"
          },
          "alternateDNSServer": {
            "description": "Alternate WINS server address.",
            "type": "string"
          }
        }
      },
      "VSphereReplicaJobSettingsModel": {
        "description": "Replication job settings.",
        "type": "object",
        "required": [
          "metadataRepositoryId",
          "replicaNameSuffix",
          "restorePointsToKeep"
        ],
        "properties": {
          "metadataRepositoryId": {
            "description": "ID of a backup repository that stores replica metadata.",
            "type": "string",
            "format": "uuid"
          },
          "replicaNameSuffix": {
            "description": "Suffix added to source VM names.",
            "type": "string"
          },
          "restorePointsToKeep": {
            "description": "Number of restore points that the replication job must maintain. The maximum number is limited to 28.",
            "type": "integer",
            "format": "int32"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/VSphereReplicaJobAdvancedSettingsModel"
          }
        }
      },
      "VSphereReplicaJobAdvancedSettingsModel": {
        "description": "Advanced job settings.",
        "type": "object",
        "properties": {
          "traffic": {
            "$ref": "#/components/schemas/ReplicaTrafficSettingsModel"
          },
          "notifications": {
            "$ref": "#/components/schemas/ReplicaNotificationSettingsModel"
          },
          "vSphere": {
            "$ref": "#/components/schemas/BackupJobAdvancedSettingsVSphereModel"
          },
          "integration": {
            "$ref": "#/components/schemas/PrimaryStorageIntegrationSettingsModel"
          },
          "scripts": {
            "$ref": "#/components/schemas/JobScriptsSettingsModel"
          }
        }
      },
      "ReplicaTrafficSettingsModel": {
        "description": "Traffic settings.",
        "type": "object",
        "properties": {
          "excludeSwapFileBlocks": {
            "description": "If `true`, Veeam Backup & Replication excludes swap file blocks from processing.",
            "type": "boolean"
          },
          "excludeDeletedFileBlocks": {
            "description": "If `true`, Veeam Backup & Replication does not copy deleted file blocks.",
            "type": "boolean"
          },
          "compressionLevel": {
            "$ref": "#/components/schemas/ECompressionLevel"
          },
          "storageOptimization": {
            "$ref": "#/components/schemas/EStorageOptimization"
          }
        }
      },
      "ReplicaNotificationSettingsModel": {
        "description": "Notification settings.",
        "type": "object",
        "properties": {
          "sendSNMPNotifications": {
            "description": "If `true`, SNMP notifications are enabled for this job.",
            "type": "boolean"
          },
          "emailNotifications": {
            "$ref": "#/components/schemas/EmailNotificationSettingsModel"
          }
        }
      },
      "VSphereReplicaJobDataTransferModel": {
        "description": "Data transfer settings.",
        "type": "object",
        "required": [
          "sourceProxies",
          "targetProxies"
        ],
        "properties": {
          "sourceProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "targetProxies": {
            "$ref": "#/components/schemas/BackupProxiesSettingsModel"
          },
          "wanAcceleratorSettings": {
            "$ref": "#/components/schemas/WanAcceleratorSettingsModel"
          }
        }
      },
      "WanAcceleratorSettingsModel": {
        "description": "WAN accelerator settings.",
        "type": "object",
        "required": [
          "transferMode"
        ],
        "properties": {
          "transferMode": {
            "$ref": "#/components/schemas/EJobDataTransferModel"
          },
          "sourceWANAcceleratorId": {
            "description": "ID of a WAN accelerator configured in the source site.",
            "type": "string",
            "format": "uuid"
          },
          "targetWANAcceleratorId": {
            "description": "ID of a WAN accelerator configured in the target site.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "VSphereReplicaSeedingModel": {
        "description": "Replica seeding and mapping settings.",
        "type": "object",
        "properties": {
          "initialSeeding": {
            "$ref": "#/components/schemas/InitialSeedingModel"
          },
          "replicaMapping": {
            "$ref": "#/components/schemas/ReplicaMappingModel"
          }
        }
      },
      "InitialSeedingModel": {
        "description": "Replica seeding settings. This option can be used if you have backups of the VMs that you replicate.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, replica seeding is enabled.",
            "type": "boolean"
          },
          "repositoryId": {
            "description": "ID of a backup repository where VM backup is stored.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ReplicaMappingModel": {
        "description": "Replica mapping settings. This option can be used if you already have ready-to-use copies of the source VMs in the target site.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, replica mapping is enabled.",
            "type": "boolean"
          },
          "mappingRules": {
            "description": "Array of mapping rules for replicas.<ul><li>`originalVM` — source VM</li><li>`replicaVM` — ready-to-use copy of this VM in the target site</li></ul>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplicaMappingRuleModel"
            }
          }
        }
      },
      "ReplicaMappingRuleModel": {
        "description": "Replica mapping rule.",
        "type": "object",
        "required": [
          "originalVM",
          "replicaVM"
        ],
        "properties": {
          "originalVM": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "replicaVM": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "ReplicaJobGuestProcessingModel": {
        "description": "Guest processing settings.",
        "type": "object",
        "properties": {
          "appAwareProcessing": {
            "$ref": "#/components/schemas/BackupApplicationAwareProcessingModel"
          },
          "guestInteractionProxies": {
            "$ref": "#/components/schemas/GuestInteractionProxiesSettingsModel"
          },
          "guestCredentials": {
            "$ref": "#/components/schemas/GuestOsCredentialsModel"
          }
        }
      },
      "EJobType": {
        "description": "Type of the job.",
        "type": "string",
        "enum": [
          "Backup",
          "VSphereReplica",
          "CloudDirectorBackup",
          "EntraIDTenantBackup",
          "EntraIDAuditLogBackup",
          "FileBackupCopy"
        ]
      },
      "ENetworkRuleType": {
        "description": "IP protocol.",
        "type": "string",
        "enum": [
          "IPv4",
          "IPv6"
        ]
      },
      "EJobDataTransferModel": {
        "description": "Data transfer mode.",
        "type": "string",
        "enum": [
          "Direct",
          "WANAccelerator"
        ]
      },
      "EWANAcceleratorCacheSizeUnit": {
        "description": "Cache size unit.",
        "type": "string",
        "enum": [
          "B",
          "KB",
          "MB",
          "GB",
          "TB",
          "PB"
        ]
      },
      "EReplicaState": {
        "description": "Replica state.",
        "type": "string",
        "enum": [
          "Ready",
          "Processing",
          "SureBackup",
          "Failover",
          "FailedFailover",
          "PermanentFailover",
          "Failback",
          "ReadyToSwitch"
        ]
      },
      "ReplicasFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EReplicasFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "platformIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "jobIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "policyTagFilter": {
            "type": "string"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EReplicaState"
          }
        }
      },
      "EReplicasFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "CreationTime",
          "PlatformId",
          "JobId",
          "PolicyTag",
          "State"
        ]
      },
      "WANAcceleratorsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EWANAcceleratorsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          }
        }
      },
      "EWANAcceleratorsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name"
        ]
      },
      "FailoverPlansFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EFailoverPlansFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          }
        }
      },
      "EFailoverPlansFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name"
        ]
      },
      "ObjectRestorePointsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EObjectRestorePointsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "nameFilter": {
            "type": "string"
          },
          "platformNameFilter": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "backupIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "backupObjectIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "malwareStatusFilter": {
            "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
          }
        }
      },
      "EObjectRestorePointsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "CreationTime",
          "PlatformId",
          "BackupId"
        ]
      },
      "ReplicaRestorePointsFilters": {
        "description": "Filters for replica restore points.",
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EReplicaRestorePointsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "nameFilter": {
            "type": "string"
          },
          "platformNameFilter": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "replicaIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "malwareStatusFilter": {
            "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
          }
        }
      },
      "EReplicaRestorePointsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "CreationTime",
          "PlatformId",
          "ReplicaId",
          "Name"
        ]
      },
      "ObjectRestorePointsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of restore points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRestorePointModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ObjectRestorePointModel": {
        "type": "object",
        "required": [
          "id",
          "name",
          "platformName",
          "platformId",
          "creationTime",
          "backupId",
          "allowedOperations"
        ],
        "properties": {
          "id": {
            "description": "ID of the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Object name.",
            "type": "string"
          },
          "platformName": {
            "$ref": "#/components/schemas/EPlatformType"
          },
          "platformId": {
            "description": "ID of a platform where the object was created.",
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "description": "Date and time when the restore point was created.",
            "type": "string",
            "format": "date-time"
          },
          "backupId": {
            "description": "ID of a backup that contains the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/ERestorePointType"
          },
          "sessionId": {
            "description": "Session ID.",
            "type": "string",
            "format": "uuid"
          },
          "allowedOperations": {
            "description": "Array of operations allowed for the restore point.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EObjectRestorePointOperation"
            }
          },
          "malwareStatus": {
            "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
          },
          "backupFileId": {
            "description": "Id of a file this restore point is stored in.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ERestorePointType": {
        "description": "Restore point type.",
        "enum": [
          "Increment",
          "Full",
          "Rollback",
          "Snapshot",
          "Cdp",
          "Different"
        ],
        "type": "string"
      },
      "EObjectRestorePointOperation": {
        "type": "string",
        "enum": [
          "StartViVMInstantRecovery",
          "StartEntireVmRestore",
          "StartEntireVmRestoreCloudDirector",
          "StartFCDInstantRecovery",
          "StartFlrRestore",
          "StartViVMSnapshotReplicaFailover",
          "StartViVMSnapshotReplicaPlannedFailover",
          "StartViVMSnapshotReplicaPermanentFailover",
          "StartViVMSnapshotReplicaUndoFailover",
          "StartViVMSnapshotReplicaFailback",
          "StartViVMSnapshotReplicaUndoFailback",
          "StartViVMSnapshotReplicaCommitFailback",
          "StartViVMSnapshotReplicaSwitchToProductionFailback",
          "ChangeReplicaFailbackSwitchoverTime"
        ]
      },
      "ObjectRestorePointDisksResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of disks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjectRestorePointDiskModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ObjectRestorePointDiskModel": {
        "type": "object",
        "required": [
          "uid",
          "type",
          "name",
          "capacity",
          "state"
        ],
        "properties": {
          "uid": {
            "description": "ID of the disk.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EDiskInfoType"
          },
          "name": {
            "description": "Name of the disk.",
            "type": "string"
          },
          "capacity": {
            "description": "Capacity of the disk.",
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/EDiskInfoProcessState"
          }
        }
      },
      "EDiskInfoProcessState": {
        "description": "Process state of the disk.",
        "type": "string",
        "enum": [
          "NotProcessed",
          "InProcessing",
          "PartiallyProcessed",
          "Processed"
        ]
      },
      "EDiskInfoType": {
        "description": "Type of the disk.",
        "type": "string",
        "enum": [
          "Unknown",
          "Simple",
          "Vi",
          "Hv",
          "HvRawDiskFile",
          "EndPoint"
        ]
      },
      "VmwareFcdInstantRecoverySpec": {
        "description": "Instant FCD Recovery configuration:<ul> <li>Restore point ID</li> <li>Destination cluster</li> <li>Disks for restore</li> <li>Write cache</li></ul>",
        "type": "object",
        "required": [
          "restorePointId",
          "destinationCluster",
          "disksMapping"
        ],
        "properties": {
          "restorePointId": {
            "description": "ID of the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "destinationCluster": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "disksMapping": {
            "description": "Array of disks for restore.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryDiskSpec"
            }
          },
          "writeCache": {
            "$ref": "#/components/schemas/VmwareFcdWriteCacheSpec"
          }
        }
      },
      "VmwareFcdInstantRecoveryMountsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EVmwareFcdInstantRecoveryMountsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EInstantRecoveryMountState"
          }
        }
      },
      "EVmwareFcdInstantRecoveryMountsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "state",
          "name"
        ]
      },
      "VmwareFcdInstantRecoveryMountsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of FCD mount points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryMount"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "VmwareFcdInstantRecoveryMount": {
        "type": "object",
        "required": [
          "id",
          "sessionId",
          "state",
          "spec"
        ],
        "properties": {
          "id": {
            "description": "Mount point ID.",
            "type": "string",
            "format": "uuid"
          },
          "sessionId": {
            "description": "Restore session ID. Use the ID to track the progress. For details, see [Get Session](#tag/Sessions/operation/GetSession).",
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/EInstantRecoveryMountState"
          },
          "spec": {
            "$ref": "#/components/schemas/VmwareFcdInstantRecoverySpec"
          },
          "errorMessage": {
            "description": "Error message.",
            "type": "string"
          },
          "mountedDisks": {
            "description": "Array of mounted disks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VmwareFcdInstantRecoveryDiskInfo"
            }
          }
        }
      },
      "VmwareFcdInstantRecoveryDiskSpec": {
        "type": "object",
        "required": [
          "nameInBackup",
          "mountedDiskName",
          "registeredFcdName"
        ],
        "properties": {
          "nameInBackup": {
            "description": "Disk name displayed in the backup.",
            "type": "string"
          },
          "mountedDiskName": {
            "description": "Name of the VMDK file that will be stored in the datastore.",
            "type": "string"
          },
          "registeredFcdName": {
            "description": "Name under which the disk will be registered as an FCD in the vCenter Managed Object Browser.",
            "type": "string"
          }
        }
      },
      "VmwareFcdInstantRecoveryDiskInfo": {
        "type": "object",
        "required": [
          "nameInBackup",
          "mountedDiskName",
          "registeredFcdName",
          "objectId"
        ],
        "properties": {
          "nameInBackup": {
            "description": "Disk name displayed in the backup.",
            "type": "string"
          },
          "mountedDiskName": {
            "description": "Name of the VMDK file that is stored in the datastore.",
            "type": "string"
          },
          "registeredFcdName": {
            "description": "Name under which the disk is registered as an FCD in the vCenter Managed Object Browser.",
            "type": "string"
          },
          "objectId": {
            "description": "FCD ID.",
            "type": "string"
          }
        }
      },
      "VmwareFcdWriteCacheSpec": {
        "description": "Write cache for recovered disks.",
        "type": "object",
        "required": [
          "redirectIsEnabled"
        ],
        "properties": {
          "redirectIsEnabled": {
            "description": "If `true`, cache redirection is enabled. In this case, all changes made to the recovered disks while the Instant FCD Recovery is active are redirected to the specified `cacheDatastore` associated with the `storagePolicy`.",
            "type": "boolean"
          },
          "cacheDatastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "storagePolicy": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "EInstantRecoveryMountState": {
        "description": "Mount state.",
        "type": "string",
        "enum": [
          "Failed",
          "Mounting",
          "Mounted",
          "Dismounting"
        ]
      },
      "ScaleOutRepositoriesResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of scale-out backup repositories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScaleOutRepositoryModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ScaleOutRepositorySpec": {
        "type": "object",
        "required": [
          "name",
          "description",
          "performanceTier"
        ],
        "properties": {
          "name": {
            "description": "Name of the scale-out backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the scale-out backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID assigned to the scale-out backup repository.",
            "type": "string"
          },
          "performanceTier": {
            "$ref": "#/components/schemas/PerformanceTierSpec"
          },
          "placementPolicy": {
            "$ref": "#/components/schemas/PlacementPolicyModel"
          },
          "capacityTier": {
            "$ref": "#/components/schemas/CapacityTierModel"
          },
          "archiveTier": {
            "$ref": "#/components/schemas/ArchiveTierModel"
          }
        }
      },
      "PerformanceTierSpec": {
        "description": "Performance tier.",
        "type": "object",
        "required": [
          "performanceExtents"
        ],
        "properties": {
          "performanceExtents": {
            "description": "Array of performance extents.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformanceExtentSpec"
            }
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/PerformanceTierAdvancedSettingsModel"
          }
        }
      },
      "PerformanceExtentSpec": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "ID of a backup repository added as a performance extent.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ScaleOutRepositoryModel": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "performanceTier"
        ],
        "properties": {
          "id": {
            "description": "ID of the scale-out backup repository.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the scale-out backup repository.",
            "type": "string"
          },
          "description": {
            "description": "Description of the scale-out backup repository.",
            "type": "string"
          },
          "uniqueId": {
            "description": "Unique ID assigned to the scale-out backup repository.",
            "type": "string"
          },
          "performanceTier": {
            "$ref": "#/components/schemas/PerformanceTierModel"
          },
          "placementPolicy": {
            "$ref": "#/components/schemas/PlacementPolicyModel"
          },
          "capacityTier": {
            "$ref": "#/components/schemas/CapacityTierModel"
          },
          "archiveTier": {
            "$ref": "#/components/schemas/ArchiveTierModel"
          }
        }
      },
      "PerformanceTierModel": {
        "description": "Performance tier.",
        "type": "object",
        "required": [
          "performanceExtents"
        ],
        "properties": {
          "performanceExtents": {
            "description": "Array of performance extents.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformanceExtentModel"
            }
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/PerformanceTierAdvancedSettingsModel"
          }
        }
      },
      "PerformanceExtentModel": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "description": "ID of the backup repository added as a performance extent.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the backup repository added as a performance extent.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ERepositoryExtentStatusType"
          }
        }
      },
      "PerformanceTierAdvancedSettingsModel": {
        "description": "Advanced settings of the performance tier.",
        "type": "object",
        "properties": {
          "perVmBackup": {
            "description": "If `true`, Veeam Backup & Replication creates a separate backup file for every VM in the job.",
            "type": "boolean"
          },
          "fullWhenExtentOffline": {
            "description": "If `true`, Veeam Backup & Replication creates a full backup file instead of an incremental backup file in case the required extent is offline.",
            "type": "boolean"
          }
        }
      },
      "PlacementPolicyModel": {
        "description": "Backup file placement policy.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EPlacementPolicyType"
          },
          "settings": {
            "description": "Placement policy settings.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupPlacementSettingsModel"
            }
          },
          "enforceStrictPlacementPolicy": {
            "description": "If `true`, the backup job fails in case the placement policy cannot be met.",
            "type": "boolean"
          }
        }
      },
      "EPlacementPolicyType": {
        "description": "Type of placement policy.",
        "x-enumDescriptions": {
          "DataLocality": "Veeam Backup & Replication stores full and incremental backup files to the same performance extent of the scale-out backup repository.",
          "Performance": "Veeam Backup & Replication stores full and incremental backup files to different performance extents of the scale-out backup repository."
        },
        "enum": [
          "DataLocality",
          "Performance"
        ],
        "type": "string"
      },
      "ERepositoryExtentStatusType": {
        "description": "Performance extent status.",
        "enum": [
          "Normal",
          "Evacuate",
          "Pending",
          "Sealed",
          "Maintenance",
          "ResyncRequired",
          "TenantEvacuating"
        ],
        "type": "string"
      },
      "BackupPlacementSettingsModel": {
        "type": "object",
        "required": [
          "extentId",
          "allowedBackups"
        ],
        "properties": {
          "extentId": {
            "description": "ID of a performance extent.",
            "type": "string",
            "format": "uuid"
          },
          "allowedBackups": {
            "$ref": "#/components/schemas/EAllowedBackupsType"
          }
        }
      },
      "EAllowedBackupsType": {
        "description": "Type of backup files that can be stored on the extent.",
        "enum": [
          "All",
          "FullsOnly",
          "IncrementsOnly",
          "None"
        ],
        "type": "string"
      },
      "CapacityTierModel": {
        "description": "Capacity tier.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, the capacity tier is enabled.",
            "type": "boolean"
          },
          "extents": {
            "description": "Array of capacity extents.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CapacityExtentModel"
            }
          },
          "offloadWindow": {
            "$ref": "#/components/schemas/BackupWindowSettingModel"
          },
          "copyPolicyEnabled": {
            "description": "If `true`, Veeam Backup & Replication copies backups from the performance extents to the capacity extent as soon as the backups are created.",
            "type": "boolean"
          },
          "movePolicyEnabled": {
            "description": "If `true`, Veeam Backup & Replication moves backup files that belong to inactive backup chains from the performance extents to the capacity extent.",
            "type": "boolean"
          },
          "operationalRestorePeriodDays": {
            "description": "Number of days after which inactive backup chains on the performance extents are moved to the capacity extent. Specify *0* to offload inactive backup chains on the same day they are created.",
            "type": "integer"
          },
          "overridePolicy": {
            "$ref": "#/components/schemas/CapacityTierOverridePolicyModel"
          },
          "encryption": {
            "$ref": "#/components/schemas/BackupStorageSettingsEncryptionModel"
          }
        }
      },
      "CapacityExtentModel": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "ID of an object storage repository added as a capacity extent.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CapacityTierOverridePolicyModel": {
        "description": "Policy that overrides the move policy if the scale-out backup repository is reaching its capacity.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, Veeam Backup & Replication moves oldest backup files sooner if the scale-out backup repository is reaching the threshold.",
            "type": "boolean"
          },
          "overrideSpaceThresholdPercents": {
            "description": "Space threshold of the scale-out backup repository, in percent.",
            "type": "integer"
          }
        }
      },
      "ArchiveTierModel": {
        "description": "Archive tier.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, the archive tier is enabled.",
            "type": "boolean"
          },
          "extentId": {
            "description": "ID of an object storage repository added as an archive extent.",
            "type": "string",
            "format": "uuid"
          },
          "archivePeriodDays": {
            "description": "Number of days after which backup chains on the capacity extent are moved to the archive extent. Specify *0* to offload inactive backup chains on the same day they are created.",
            "type": "integer"
          },
          "advancedSettings": {
            "$ref": "#/components/schemas/ArchiveTierAdvancedSettingsModel"
          }
        }
      },
      "ArchiveTierAdvancedSettingsModel": {
        "description": "Advanced settings of the archive tier.",
        "type": "object",
        "properties": {
          "costOptimizedArchiveEnabled": {
            "description": "If `true`, backups are archived as soon as the remaining retention time is above minimum storage period for the repository.",
            "type": "boolean"
          },
          "archiveDeduplicationEnabled": {
            "description": "If `true`, each backup is stored as a delta to the previous one.",
            "type": "boolean"
          }
        }
      },
      "ScaleOutRepositoriesFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of repositories to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of repositories to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EScaleOutRepositoryFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts repositories in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          }
        }
      },
      "EScaleOutRepositoryFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "Description",
          "Type",
          "Host",
          "Path"
        ]
      },
      "CloudCredentialsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of cloud credentials.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudCredentialsModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "CloudCredentialsSpec": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "description": {
            "description": "Description of the cloud credentials record.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AmazonCloudCredentialsSpec"
          },
          {
            "$ref": "#/components/schemas/AzureStorageCloudCredentialsSpec"
          },
          {
            "$ref": "#/components/schemas/AzureComputeCloudCredentialsSpec"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudCredentialsSpec"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudServiceCredentialsSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AzureStorage": "#/components/schemas/AzureStorageCloudCredentialsSpec",
            "Amazon": "#/components/schemas/AmazonCloudCredentialsSpec",
            "Google": "#/components/schemas/GoogleCloudCredentialsSpec",
            "AzureCompute": "#/components/schemas/AzureComputeCloudCredentialsSpec",
            "GoogleService": "#/components/schemas/GoogleCloudServiceCredentialsSpec"
          }
        }
      },
      "CloudCredentialsModel": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "description": "ID of the cloud credentials record.",
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "description": "Description of the cloud credentials record.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AmazonCloudCredentialsModel"
          },
          {
            "$ref": "#/components/schemas/AzureStorageCloudCredentialsModel"
          },
          {
            "$ref": "#/components/schemas/AzureComputeCloudCredentialsModel"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudCredentialsModel"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudServiceCredentialsModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AzureStorage": "#/components/schemas/AzureStorageCloudCredentialsModel",
            "Amazon": "#/components/schemas/AmazonCloudCredentialsModel",
            "Google": "#/components/schemas/GoogleCloudCredentialsModel",
            "AzureCompute": "#/components/schemas/AzureComputeCloudCredentialsModel",
            "GoogleService": "#/components/schemas/GoogleCloudServiceCredentialsModel"
          }
        }
      },
      "AmazonCloudCredentialsSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsSpec"
          },
          {
            "type": "object",
            "required": [
              "accessKey",
              "secretKey"
            ],
            "properties": {
              "accessKey": {
                "description": "ID of the access key.",
                "type": "string"
              },
              "secretKey": {
                "description": "Secret key.",
                "type": "string"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "AmazonCloudCredentialsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsModel"
          },
          {
            "type": "object",
            "required": [
              "accessKey"
            ],
            "properties": {
              "accessKey": {
                "description": "ID of the access key.",
                "type": "string"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "AzureStorageCloudCredentialsSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsSpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "sharedKey"
            ],
            "properties": {
              "account": {
                "description": "Name of the Azure storage account.",
                "type": "string"
              },
              "sharedKey": {
                "description": "Shared key of the Azure storage account.",
                "type": "string"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            },
            "example": {
              "description": "Azure storage account",
              "type": "AzureStorage",
              "uniqueId": "createdbysheiladcory",
              "account": "williamfox",
              "sharedKey": "0sF53pZ/c8cVk+sEMby1lGZzA4SJezapyrFysdjlfLlUwMESTW6dEnkC3x62USr4cwHgPxarsBCE+ASt1Zjmwg=="
            }
          }
        ]
      },
      "AzureStorageCloudCredentialsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsModel"
          },
          {
            "type": "object",
            "required": [
              "account"
            ],
            "properties": {
              "account": {
                "description": "Name of the Azure storage account.",
                "type": "string"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "AzureComputeCloudCredentialsSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsSpec"
          },
          {
            "type": "object",
            "required": [
              "connectionName",
              "creationMode"
            ],
            "properties": {
              "connectionName": {
                "description": "Name under which the cloud credentials record will be shown in Veeam Backup & Replication.",
                "type": "string"
              },
              "creationMode": {
                "$ref": "#/components/schemas/EAzureComputeCredentialsCreationMode"
              },
              "existingAccount": {
                "$ref": "#/components/schemas/AzureComputeCredentialsExistingAccountSpec"
              },
              "newAccount": {
                "$ref": "#/components/schemas/AzureComputeCredentialsNewAccountSpec"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EAzureComputeCredentialsCreationMode": {
        "description": "Connection method that defines whether you want to connect to Microsoft Entra ID using an existing or a newly created app reristration.",
        "type": "string",
        "enum": [
          "NewAccount",
          "ExistingAccount"
        ]
      },
      "AzureComputeCredentialsExistingAccountSpec": {
        "description": "Existing Microsoft Entra ID app registration.",
        "type": "object",
        "required": [
          "deployment",
          "subscription"
        ],
        "properties": {
          "deployment": {
            "$ref": "#/components/schemas/AzureComputeCloudCredentialsDeploymentModel"
          },
          "subscription": {
            "$ref": "#/components/schemas/AzureComputeCloudCredentialsSubscriptionSpec"
          }
        }
      },
      "AzureComputeCredentialsNewAccountSpec": {
        "description": "New Microsoft Entra ID app reqistration.",
        "type": "object",
        "required": [
          "region",
          "verificationCode"
        ],
        "properties": {
          "region": {
            "$ref": "#/components/schemas/EAzureRegionType"
          },
          "verificationCode": {
            "description": "Single-use verification code. Use this code to sign in on the https://microsoft.com/devicelogin page.",
            "type": "string"
          }
        }
      },
      "CloudHelperApplianceSpec": {
        "description": "Helper appliance settings.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureLinuxHelperApplianceSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AzureCompute": "#/components/schemas/AzureLinuxHelperApplianceSpec"
          }
        }
      },
      "CloudHelperApplianceModel": {
        "description": "Helper appliance settings.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureLinuxHelperApplianceModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AzureCompute": "#/components/schemas/AzureLinuxHelperApplianceModel"
          }
        }
      },
      "CloudHelperApplianceResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of Linux-based helper appliances.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudHelperApplianceModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "AzureLinuxHelperApplianceSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudHelperApplianceSpec"
          },
          {
            "type": "object",
            "required": [
              "subscriptionId"
            ],
            "properties": {
              "subscriptionId": {
                "description": "ID that Veeam Backup & Replication assigned to the Azure subscription.",
                "type": "string",
                "format": "uuid"
              },
              "location": {
                "description": "Storage account location where you want to configure the helper appliance.",
                "type": "string"
              },
              "storageAccount": {
                "description": "Name of the Azure storage account whose resources are used to store the helper appliance.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "Resource group associated with the helper appliance.",
                "type": "string"
              },
              "virtualNetwork": {
                "description": "Network to which the helper appliance is connected.",
                "type": "string"
              },
              "subnet": {
                "description": "Subnet for the helper appliance.",
                "type": "string"
              },
              "SSHPort": {
                "description": "Port over which Veeam Backup & Replication communicates with the helper appliance.",
                "type": "integer"
              }
            }
          }
        ]
      },
      "AzureLinuxHelperApplianceModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudHelperApplianceModel"
          },
          {
            "description": "Linux-based helper appliance for Microsoft Azure account.",
            "type": "object",
            "required": [
              "id",
              "subscriptionId"
            ],
            "properties": {
              "id": {
                "description": "Helper appliance ID.",
                "type": "string",
                "format": "uuid"
              },
              "subscriptionId": {
                "description": "ID that Veeam Backup & Replication assigned to the Azure subscription.",
                "type": "string",
                "format": "uuid"
              },
              "vmName": {
                "description": "VM name of the helper appliance.",
                "type": "string"
              },
              "location": {
                "description": "Storage account location where the helper appliance is configured.",
                "type": "string"
              },
              "storageAccount": {
                "description": "Azure storage account whose resources are used to store disks of the helper appliance.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "Resource group associated with the helper appliance.",
                "type": "string"
              },
              "virtualNetwork": {
                "description": "Network to which the helper appliance is connected.",
                "type": "string"
              },
              "subnet": {
                "description": "Subnet for the helper appliance.",
                "type": "string"
              },
              "SSHPort": {
                "description": "Port over which Veeam Backup & Replication communicates with the helper appliance.",
                "type": "integer"
              }
            }
          }
        ]
      },
      "AzureComputeCloudCredentialsSubscriptionSpec": {
        "description": "Microsoft Azure compute account. For password-based authentication, specify client secret. For certificate-based authentication, specify certificate and password.",
        "type": "object",
        "required": [
          "tenantId",
          "applicationId"
        ],
        "properties": {
          "tenantId": {
            "description": "ID of a tenant where the Microsoft Entra ID application is registered in.",
            "type": "string"
          },
          "applicationId": {
            "description": "Client ID assigned to the Microsoft Entra ID application.",
            "type": "string"
          },
          "secret": {
            "type": "string",
            "description": "(For password-based authentication) Client secret assigned to the Microsoft Entra ID application."
          },
          "certificate": {
            "$ref": "#/components/schemas/CertificateUploadSpec"
          }
        }
      },
      "CertificateUploadSpec": {
        "description": "Certificate settings (for certificate-based authentication).",
        "type": "object",
        "required": [
          "certificate",
          "formatType"
        ],
        "properties": {
          "certificate": {
            "type": "string",
            "description": "Base64-encoded string of the content of a PFX certificate file."
          },
          "formatType": {
            "$ref": "#/components/schemas/ECertificateFileFormatType"
          },
          "password": {
            "description": "Decryption password for the certificate file.",
            "type": "string"
          }
        }
      },
      "ECertificateFileFormatType": {
        "description": "Certificate file format.",
        "type": "string",
        "enum": [
          "pfx"
        ]
      },
      "AzureComputeCloudCredentialsDeploymentModel": {
        "description": "Environment to restore workloads to.",
        "type": "object",
        "required": [
          "deploymentType"
        ],
        "properties": {
          "deploymentType": {
            "$ref": "#/components/schemas/EAzureComputeCredentialsDeploymentType"
          },
          "region": {
            "$ref": "#/components/schemas/EAzureRegionType"
          }
        }
      },
      "EAzureComputeCredentialsDeploymentType": {
        "description": "Deployment type (global Microsoft Azure or Microsoft Azure Stack Hub).",
        "type": "string",
        "enum": [
          "MicrosoftAzure",
          "MicrosoftAzureStack"
        ]
      },
      "AzureComputeCloudCredentialsModel": {
        "description": "Microsoft Azure compute account.",
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsModel"
          },
          {
            "type": "object",
            "required": [
              "connectionName",
              "deployment",
              "subscription"
            ],
            "properties": {
              "connectionName": {
                "description": "Name under which the cloud credentials record is shown in Veeam Backup & Replication.",
                "type": "string"
              },
              "deployment": {
                "$ref": "#/components/schemas/AzureComputeCloudCredentialsDeploymentModel"
              },
              "subscription": {
                "$ref": "#/components/schemas/AzureComputeCloudCredentialsSubscriptionModel"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "AzureComputeCloudCredentialsSubscriptionModel": {
        "description": "Microsoft Azure tenant settings.",
        "type": "object",
        "required": [
          "tenantId",
          "applicationId"
        ],
        "properties": {
          "tenantId": {
            "description": "ID of a tenant where the Microsoft Entra ID application is registered in.",
            "type": "string"
          },
          "applicationId": {
            "description": "Client ID assigned to the Microsoft Entra ID application.",
            "type": "string"
          },
          "secret": {
            "type": "string",
            "description": "(For password-based authentication) Client secret assigned to the Microsoft Entra ID application."
          },
          "subscriptions": {
            "description": "Array of Azure subscriptions associated with the account.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureComputeCloudCredentialsSubscriptionInfo"
            }
          }
        }
      },
      "AzureComputeCloudCredentialsSubscriptionInfo": {
        "type": "object",
        "required": [
          "id",
          "azureSubscriptionId"
        ],
        "properties": {
          "id": {
            "description": "ID that Veeam Backup & Replication assigned to the Azure subscription.",
            "type": "string",
            "format": "uuid"
          },
          "azureSubscriptionId": {
            "description": "Original Azure subscription ID.",
            "type": "string"
          },
          "azureSubscriptionName": {
            "description": "Azure subscription name.",
            "type": "string"
          }
        }
      },
      "GoogleCloudCredentialsSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsSpec"
          },
          {
            "type": "object",
            "required": [
              "accessKey",
              "secretKey"
            ],
            "properties": {
              "accessKey": {
                "description": "Access ID of a Google HMAC key.",
                "type": "string"
              },
              "secretKey": {
                "description": "Secret linked to the access ID.",
                "type": "string"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "GoogleCloudCredentialsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsModel"
          },
          {
            "type": "object",
            "required": [
              "accessKey"
            ],
            "properties": {
              "accessKey": {
                "description": "Access ID of a Google HMAC key.",
                "type": "string"
              },
              "uniqueId": {
                "description": "Unique ID that identifies the cloud credentials record.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EGoogleCloudServiceCredentialsCreationMode": {
        "description": "Mode that defines whether you want to create a new Google Cloud service account or connect an existing one.",
        "type": "string",
        "enum": [
          "NewAccount",
          "ExistingAccount"
        ]
      },
      "GoogleCloudServiceCredentialsSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsSpec"
          },
          {
            "type": "object",
            "required": [
              "creationMode"
            ],
            "properties": {
              "creationMode": {
                "$ref": "#/components/schemas/EGoogleCloudServiceCredentialsCreationMode"
              },
              "existingAccount": {
                "$ref": "#/components/schemas/GoogleCloudServiceCredentialsExistingAccountSpec"
              }
            }
          }
        ]
      },
      "GoogleCloudServiceCredentialsExistingAccountSpec": {
        "type": "object",
        "required": [
          "keyFile"
        ],
        "properties": {
          "keyFile": {
            "description": "Base64-encoded string of the content of a JSON key file containing a service account key.",
            "type": "string"
          }
        }
      },
      "GoogleCloudServiceCredentialsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudCredentialsModel"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "projectId": {
                "type": "string"
              },
              "uniqueId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ECloudCredentialsType": {
        "description": "Cloud credentials type.",
        "type": "string",
        "enum": [
          "AzureStorage",
          "AzureCompute",
          "Amazon",
          "Google",
          "GoogleService"
        ]
      },
      "GoogleCloudComputeVerificationCodeModel": {
        "type": "object",
        "required": [
          "url",
          "verificationCode",
          "expirationTime"
        ],
        "properties": {
          "url": {
            "description": "Verification URI.",
            "type": "string"
          },
          "verificationCode": {
            "description": "Verification code.",
            "type": "string"
          },
          "expirationTime": {
            "description": "Expiration date and time of the verification code. By default, the code is valid for 15 minutes.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloudCredentialsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of cloud credentials records to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of cloud credentials records to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ECloudCredentialsFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts cloud credentials in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters cloud credentials by the `nameFilter` pattern. The pattern can match any cloud credentials parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        }
      },
      "ECloudCredentialsFiltersOrderColumn": {
        "description": "Sorts cloud credentials by one of the cloud credentials parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Description"
        ]
      },
      "CloudCredentialsPasswordSpec": {
        "type": "object",
        "required": [
          "newSecretKey"
        ],
        "properties": {
          "newSecretKey": {
            "description": "New secret key.",
            "type": "string"
          }
        }
      },
      "CloudBrowserSpec": {
        "type": "object",
        "required": [
          "credentialsId",
          "serviceType"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of the object storage account (for browsing either storage or compute infrastructure).",
            "type": "string",
            "format": "uuid"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ECloudServiceType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureBlobBrowserSpec"
          },
          {
            "$ref": "#/components/schemas/AzureDataBoxBrowserSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonS3BrowserSpec"
          },
          {
            "$ref": "#/components/schemas/S3CompatibleBrowserSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonSnowballEdgeBrowserSpec"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudStorageBrowserSpec"
          },
          {
            "$ref": "#/components/schemas/IBMCloudStorageBrowserSpec"
          },
          {
            "$ref": "#/components/schemas/AzureComputeBrowserSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonEC2BrowserSpec"
          },
          {
            "$ref": "#/components/schemas/WasabiCloudStorageBrowserSpec"
          }
        ],
        "discriminator": {
          "propertyName": "serviceType",
          "mapping": {
            "AzureBlob": "#/components/schemas/AzureBlobBrowserSpec",
            "AzureDataBox": "#/components/schemas/AzureDataBoxBrowserSpec",
            "AmazonS3": "#/components/schemas/AmazonS3BrowserSpec",
            "S3Compatible": "#/components/schemas/S3CompatibleBrowserSpec",
            "AmazonSnowballEdge": "#/components/schemas/AmazonSnowballEdgeBrowserSpec",
            "GoogleCloud": "#/components/schemas/GoogleCloudStorageBrowserSpec",
            "IBMCloud": "#/components/schemas/IBMCloudStorageBrowserSpec",
            "AzureCompute": "#/components/schemas/AzureComputeBrowserSpec",
            "AmazonEC2": "#/components/schemas/AmazonEC2BrowserSpec",
            "WasabiCloud": "#/components/schemas/WasabiCloudStorageBrowserSpec"
          }
        }
      },
      "AzureBlobBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "properties": {
              "regionType": {
                "$ref": "#/components/schemas/EAzureRegionType"
              },
              "folderType": {
                "$ref": "#/components/schemas/ECloudBrowserFolderType"
              },
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "AzureDataBoxBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "properties": {
              "servicePoint": {
                "description": "Service endpoint used to connect to the Azure Data Box object storage.",
                "type": "string"
              },
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "AmazonS3BrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "required": [
              "regionType"
            ],
            "properties": {
              "regionType": {
                "$ref": "#/components/schemas/EAmazonRegionType"
              },
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "folderType": {
                "$ref": "#/components/schemas/ECloudBrowserFolderType"
              },
              "filters": {
                "$ref": "#/components/schemas/AmazonS3CloudBrowserFilters"
              }
            }
          }
        ]
      },
      "AmazonS3CloudBrowserFilters": {
        "description": "Amazon S3 hierarchy filters. Using the filters reduces not only the number of records in the response body but also the response time.",
        "type": "object",
        "required": [
          "regionId"
        ],
        "properties": {
          "regionId": {
            "description": "Filters buckets by AWS region where an Amazon S3 data center is located.",
            "type": "string"
          },
          "bucketName": {
            "description": "Filters buckets by bucket name.",
            "type": "string"
          }
        }
      },
      "ECloudBrowserFolderType": {
        "description": "Folder type.",
        "type": "string",
        "enum": [
          "backup",
          "archive"
        ]
      },
      "S3CompatibleBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "properties": {
              "regionId": {
                "description": "Region where the S3 compatible storage is located.",
                "type": "string"
              },
              "servicePoint": {
                "description": "Service point address of the S3 compatible storage.",
                "type": "string"
              },
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "AmazonSnowballEdgeBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "properties": {
              "regionId": {
                "description": "To connect to the AWS Snowball Edge device, specify the `snow` value.",
                "type": "string"
              },
              "servicePoint": {
                "description": "Service point address and port number of the AWS Snowball Edge device.",
                "type": "string"
              },
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "GoogleCloudStorageBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "properties": {
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "filters": {
                "$ref": "#/components/schemas/GoogleCloudStorageBrowserFilters"
              }
            }
          }
        ]
      },
      "GoogleCloudStorageBrowserFilters": {
        "description": "Google Cloud hierarchy filters. Using the filters reduces not only the number of records in the response body but also the response time.",
        "type": "object",
        "required": [
          "regionId"
        ],
        "properties": {
          "regionId": {
            "description": "Google Cloud data center region.",
            "type": "string"
          },
          "bucketName": {
            "description": "Bucket name.",
            "type": "string"
          }
        }
      },
      "IBMCloudStorageBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "required": [
              "regionId",
              "servicePoint"
            ],
            "properties": {
              "regionId": {
                "description": "Region of the IBM Cloud object storage.",
                "type": "string"
              },
              "servicePoint": {
                "description": "Endpoint address and port number of the IBM Cloud object storage.",
                "type": "string"
              },
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "AzureComputeBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "properties": {
              "filters": {
                "$ref": "#/components/schemas/AzureComputeBrowserFilters"
              }
            }
          }
        ]
      },
      "AzureComputeBrowserFilters": {
        "description": "Azure Compute hierarchy filters. Using the filters reduces not only the number of records in the response body but also the response time.",
        "type": "object",
        "properties": {
          "showAllStorageAccounts": {
            "description": "If `true`, the result contains compute resorces for all storage accounts. If *false*, the result contains compute resorces available for the specified storage account only.",
            "type": "boolean",
            "default": false
          },
          "subscriptionId": {
            "description": "Filters compute resorces by ID that Veeam Backup & Replication assigned to the Azure subscription.",
            "type": "string"
          },
          "location": {
            "description": "Filters compute resorces by Azure location name.",
            "type": "string"
          },
          "hasNetworks": {
            "description": "If `true`, the result contains Azure resource groups with virtual networks only.",
            "type": "boolean",
            "default": false
          }
        }
      },
      "AmazonEC2BrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "required": [
              "regionType"
            ],
            "properties": {
              "regionType": {
                "$ref": "#/components/schemas/EAmazonRegionType"
              },
              "filters": {
                "$ref": "#/components/schemas/AmazonEC2BrowserFilters"
              }
            }
          }
        ]
      },
      "AmazonEC2BrowserFilters": {
        "description": "Amazon EC2 hierarchy filters. Using the filters reduces not only the number of records in the response body but also the response time.",
        "type": "object",
        "required": [
          "regionId"
        ],
        "properties": {
          "regionId": {
            "description": "Filters Amazon EC2 resources by AWS region.",
            "type": "string"
          }
        }
      },
      "WasabiCloudStorageBrowserSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserSpec"
          },
          {
            "type": "object",
            "required": [
              "regionId"
            ],
            "properties": {
              "regionId": {
                "description": "Region ID.",
                "type": "string"
              },
              "gatewayServerId": {
                "description": "ID of a gateway server you want to use to connect to the object storage. Specify this parameter to check internet connection of the server. As a gateway server you can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "ECloudServiceType": {
        "description": "Type of cloud service.",
        "type": "string",
        "enum": [
          "AzureBlob",
          "AzureDataBox",
          "AmazonS3",
          "AmazonEC2",
          "S3Compatible",
          "AmazonSnowballEdge",
          "GoogleCloud",
          "IBMCloud",
          "AzureCompute",
          "WasabiCloud"
        ]
      },
      "CloudBrowserModel": {
        "type": "object",
        "required": [
          "credentialsId",
          "serviceType"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of the cloud credentials record.",
            "type": "string",
            "format": "uuid"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ECloudServiceType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureBlobBrowserModel"
          },
          {
            "$ref": "#/components/schemas/AzureDataBoxBrowserModel"
          },
          {
            "$ref": "#/components/schemas/AmazonS3BrowserModel"
          },
          {
            "$ref": "#/components/schemas/AmazonSnowballEdgeBrowserModel"
          },
          {
            "$ref": "#/components/schemas/S3CompatibleBrowserModel"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudStorageBrowserModel"
          },
          {
            "$ref": "#/components/schemas/IBMCloudStorageBrowserModel"
          },
          {
            "$ref": "#/components/schemas/AzureComputeBrowserModel"
          },
          {
            "$ref": "#/components/schemas/AmazonEC2BrowserModel"
          },
          {
            "$ref": "#/components/schemas/WasabiCloudStorageBrowserModel"
          }
        ],
        "discriminator": {
          "propertyName": "serviceType",
          "mapping": {
            "AzureBlob": "#/components/schemas/AzureBlobBrowserModel",
            "AzureDataBox": "#/components/schemas/AzureDataBoxBrowserModel",
            "AmazonS3": "#/components/schemas/AmazonS3BrowserModel",
            "AmazonSnowballEdge": "#/components/schemas/AmazonSnowballEdgeBrowserModel",
            "S3Compatible": "#/components/schemas/S3CompatibleBrowserModel",
            "GoogleCloud": "#/components/schemas/GoogleCloudStorageBrowserModel",
            "IBMCloud": "#/components/schemas/IBMCloudStorageBrowserModel",
            "AzureCompute": "#/components/schemas/AzureComputeBrowserModel",
            "AmazonEC2": "#/components/schemas/AmazonEC2BrowserModel",
            "WasabiCloud": "#/components/schemas/WasabiCloudStorageBrowserModel"
          }
        }
      },
      "AzureBlobBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the object storage.",
                "type": "string",
                "format": "uuid"
              },
              "regionType": {
                "$ref": "#/components/schemas/EAzureRegionType"
              },
              "containers": {
                "description": "Array of containers that reside in the Azure storage account.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AzureBlobContainerBrowserModel"
                }
              }
            }
          }
        ]
      },
      "AzureBlobContainerBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Container name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders loated in the container.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AzureDataBoxBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the object storage.",
                "type": "string",
                "format": "uuid"
              },
              "containers": {
                "description": "Array of containers that reside in the Azure storage account.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AzureDataBoxContainerBrowserModel"
                }
              }
            }
          }
        ]
      },
      "AzureDataBoxContainerBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Container name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders located in the container.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AmazonS3BrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "regionType"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the object storage.",
                "type": "string",
                "format": "uuid"
              },
              "regionType": {
                "$ref": "#/components/schemas/EAmazonRegionType"
              },
              "regions": {
                "description": "Array of AWS regions belonged to the region type.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AmazonS3RegionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "AmazonS3RegionBrowserModel": {
        "description": "AWS region.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Region ID.",
            "type": "string"
          },
          "name": {
            "description": "Region name.",
            "type": "string"
          },
          "buckets": {
            "description": "Array of buckets located in the region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonS3BucketBrowserModel"
            }
          }
        }
      },
      "AmazonS3BucketBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Bucket name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders located in the bucket.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "S3CompatibleBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the S3 compatible storage.",
                "type": "string",
                "format": "uuid"
              },
              "connectionPoint": {
                "description": "Service point address and port number of the S3 compatible storage.",
                "type": "string"
              },
              "regions": {
                "description": "Array of regions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/S3CompatibleRegionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "S3CompatibleRegionBrowserModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Region ID.",
            "type": "string"
          },
          "name": {
            "description": "Region name.",
            "type": "string"
          },
          "buckets": {
            "description": "Array of buckets located in the region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/S3CompatibleBucketBrowserModel"
            }
          }
        }
      },
      "S3CompatibleBucketBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Bucket name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders located in the bucket.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AmazonSnowballEdgeBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the AWS Snowball Edge device.",
                "type": "string",
                "format": "uuid"
              },
              "connectionPoint": {
                "description": "Service point address and port number of the AWS Snowball Edge device.",
                "type": "string"
              },
              "regions": {
                "description": "Array of regions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AmazonSnowballEdgeRegionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "AmazonSnowballEdgeRegionBrowserModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Region ID.",
            "type": "string"
          },
          "name": {
            "description": "Region name.",
            "type": "string"
          },
          "buckets": {
            "description": "Array of buckets located in the region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonSnowballEdgeBucketBrowserModel"
            }
          }
        }
      },
      "AmazonSnowballEdgeBucketBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Bucket name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders located in the bucket.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GoogleCloudStorageBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the object storage.",
                "type": "string",
                "format": "uuid"
              },
              "regions": {
                "description": "Array of regions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GoogleCloudStorageRegionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "GoogleCloudStorageRegionBrowserModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Region ID.",
            "type": "string"
          },
          "name": {
            "description": "Region name.",
            "type": "string"
          },
          "buckets": {
            "description": "Array of buckets located in the region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GoogleCloudStorageBucketBrowserModel"
            }
          }
        }
      },
      "GoogleCloudStorageBucketBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Bucket name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders located in the bucket.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IBMCloudStorageBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the object storage.",
                "type": "string",
                "format": "uuid"
              },
              "regions": {
                "description": "Array of regions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IBMCloudStorageRegionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "IBMCloudStorageRegionBrowserModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Region ID.",
            "type": "string"
          },
          "name": {
            "description": "Region name.",
            "type": "string"
          },
          "buckets": {
            "description": "Array of buckets located in the region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IBMCloudStorageBucketBrowserModel"
            }
          }
        }
      },
      "IBMCloudStorageBucketBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Bucket name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders located in the bucket.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AzureComputeBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "regionType": {
                "description": "Azure region type.",
                "type": "string"
              },
              "subscriptions": {
                "description": "Array of Azure subscriptions associated with the account.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AzureSubscriptionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "AzureSubscriptionBrowserModel": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "ID that Veeam Backup & Replication assigned to the Azure subscription.",
            "type": "string",
            "format": "uuid"
          },
          "azureSubscriptionId": {
            "description": "Original Azure subscription ID.",
            "type": "string"
          },
          "locations": {
            "description": "Array of Azure geographic regions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureLocationBrowserModel"
            }
          }
        }
      },
      "AzureLocationBrowserModel": {
        "type": "object",
        "required": [
          "location",
          "storageAccounts",
          "resourceGroups"
        ],
        "properties": {
          "location": {
            "description": "Location name.",
            "type": "string"
          },
          "storageAccounts": {
            "description": "Array of storage accounts associated with the location.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureStorageAccountBrowserModel"
            }
          },
          "resourceGroups": {
            "description": "Array of Azure resource groups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureResourceGroupBrowserModel"
            }
          }
        }
      },
      "AzureStorageAccountBrowserModel": {
        "type": "object",
        "properties": {
          "storageAccountName": {
            "description": "Account name.",
            "type": "string"
          },
          "instanceSizes": {
            "description": "Array of available instance sizes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AzureResourceGroupBrowserModel": {
        "type": "object",
        "required": [
          "resourceGroup",
          "virtualNetworks"
        ],
        "properties": {
          "resourceGroup": {
            "description": "Resource group name.",
            "type": "string"
          },
          "virtualNetworks": {
            "description": "Array of virtual networks available in the resource group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureVirtualNetworkBrowserModel"
            }
          }
        }
      },
      "AzureVirtualNetworkBrowserModel": {
        "type": "object",
        "properties": {
          "virtualNetworkName": {
            "description": "Virtual network name.",
            "type": "string"
          },
          "subnets": {
            "description": "Array of subnets.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AmazonEC2BrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "required": [
              "hostId",
              "regionType",
              "regions"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the object storage.",
                "type": "string",
                "format": "uuid"
              },
              "regionType": {
                "$ref": "#/components/schemas/EAmazonRegionType"
              },
              "regions": {
                "description": "Array of regions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AmazonEC2RegionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "AmazonEC2RegionBrowserModel": {
        "type": "object",
        "properties": {
          "regionId": {
            "description": "Region ID.",
            "type": "string"
          },
          "vpcs": {
            "description": "Array of Amazon Virtual Private Cloud (Amazon VPC) networks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonVPCBrowserModel"
            }
          },
          "instanceTypes": {
            "description": "Array of Amazon instance types.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AmazonVPCBrowserModel": {
        "type": "object",
        "properties": {
          "vpcName": {
            "description": "VPC name.",
            "type": "string"
          },
          "vpcId": {
            "description": "VPC ID.",
            "type": "string"
          },
          "subnets": {
            "description": "Array of VPC subnets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmazonVPCSubnetModel"
            }
          },
          "securityGroups": {
            "description": "Array of security groups.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AmazonVPCSubnetModel": {
        "type": "object",
        "properties": {
          "subnetName": {
            "description": "Subnet name.",
            "type": "string"
          },
          "subnetId": {
            "description": "Subnet ID.",
            "type": "string"
          }
        }
      },
      "WasabiCloudStorageBrowserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserModel"
          },
          {
            "type": "object",
            "properties": {
              "hostId": {
                "description": "ID of a server used to connect to the object storage.",
                "type": "string",
                "format": "uuid"
              },
              "regions": {
                "description": "Array of regions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WasabiCloudStorageRegionBrowserModel"
                }
              }
            }
          }
        ]
      },
      "WasabiCloudStorageRegionBrowserModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Region ID.",
            "type": "string"
          },
          "name": {
            "description": "Region name.",
            "type": "string"
          },
          "buckets": {
            "description": "Array of buckets located in the region.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WasabiCloudStorageBucketBrowserModel"
            }
          }
        }
      },
      "WasabiCloudStorageBucketBrowserModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Bucket name.",
            "type": "string"
          },
          "folders": {
            "description": "Array of folders located in the bucket.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AzureBlobStorageSpec": {
        "description": "Microsoft Azure Blob storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "container",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AzureBlobStorageAccountModel"
              },
              "container": {
                "$ref": "#/components/schemas/AzureBlobStorageContainerModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AzureStorageProxyModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "AzureBlobStorageModel": {
        "description": "Microsoft Azure Blob storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "container",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AzureBlobStorageAccountModel"
              },
              "container": {
                "$ref": "#/components/schemas/AzureBlobStorageContainerModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AzureStorageProxyModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "AzureBlobStorageAccountModel": {
        "description": "Account used to access the Azure Blob storage.",
        "type": "object",
        "required": [
          "credentialsId",
          "regionType",
          "connectionSettings"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of the cloud credentials record.",
            "type": "string",
            "format": "uuid"
          },
          "regionType": {
            "$ref": "#/components/schemas/EAzureRegionType"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "EAzureRegionType": {
        "description": "Microsoft Azure region.",
        "type": "string",
        "enum": [
          "China",
          "Germany",
          "Global",
          "Government"
        ]
      },
      "AzureBlobStorageContainerModel": {
        "description": "Azure Blob storage container.",
        "type": "object",
        "required": [
          "containerName",
          "folderName"
        ],
        "properties": {
          "containerName": {
            "description": "Container name.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "storageConsumptionLimit": {
            "$ref": "#/components/schemas/ObjectStorageConsumptionLimitModel"
          }
        }
      },
      "AzureDataBoxStorageSpec": {
        "description": "Microsoft Azure Data Box storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "container"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AzureDataBoxStorageAccountModel"
              },
              "container": {
                "$ref": "#/components/schemas/AzureDataBoxStorageContainerModel"
              }
            }
          }
        ]
      },
      "AzureDataBoxStorageModel": {
        "description": "Microsoft Azure Data Box storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "container"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AzureDataBoxStorageAccountModel"
              },
              "container": {
                "$ref": "#/components/schemas/AzureDataBoxStorageContainerModel"
              }
            }
          }
        ]
      },
      "AzureDataBoxStorageAccountModel": {
        "description": "Account used to access the Azure Data Box storage.",
        "type": "object",
        "required": [
          "serviceEndpoint",
          "credentialsId"
        ],
        "properties": {
          "serviceEndpoint": {
            "description": "Service endpoint address of the Azure Data Box device.",
            "type": "string"
          },
          "credentialsId": {
            "description": "ID of the cloud credentials record.",
            "type": "string",
            "format": "uuid"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "AzureDataBoxStorageContainerModel": {
        "description": "Azure Data Box container where backup data is stored.",
        "type": "object",
        "properties": {
          "containerName": {
            "description": "Container name.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          }
        }
      },
      "AmazonS3StorageSpec": {
        "description": "Amazon S3 storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AmazonS3StorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/AmazonS3StorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AmazonS3StorageProxyApplianceModel"
              }
            }
          }
        ]
      },
      "AmazonS3StorageModel": {
        "description": "Amazon S3 storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AmazonS3StorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/AmazonS3StorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AmazonS3StorageProxyApplianceModel"
              }
            }
          }
        ]
      },
      "AmazonSnowballEdgeStorageSpec": {
        "description": "AWS Snowball Edge storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AmazonSnowballEdgeStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/AmazonSnowballEdgeStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "AmazonSnowballEdgeStorageModel": {
        "description": "AWS Snowball Edge storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/AmazonSnowballEdgeStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/AmazonSnowballEdgeStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "AmazonSnowballEdgeStorageAccountModel": {
        "description": "AWS account used to access the AWS Snowball Edge storage.",
        "type": "object",
        "required": [
          "servicePoint",
          "regionId",
          "credentialsId"
        ],
        "properties": {
          "servicePoint": {
            "description": "Service point address and port number of the AWS Snowball Edge device.",
            "type": "string"
          },
          "regionId": {
            "description": "For AWS Snowball Edge, the region is `snow`.",
            "type": "string"
          },
          "credentialsId": {
            "description": "ID of the cloud credentials record.",
            "type": "string",
            "format": "uuid"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "AmazonSnowballEdgeStorageBucketModel": {
        "description": "Amazon S3 bucket.",
        "type": "object",
        "properties": {
          "bucketName": {
            "description": "Name of the Amazon S3 bucket.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "storageConsumptionLimit": {
            "$ref": "#/components/schemas/ObjectStorageConsumptionLimitModel"
          }
        }
      },
      "S3CompatibleStorageSpec": {
        "description": "S3 compatible storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/S3CompatibleStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/S3CompatibleStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/S3CompatibleProxyModel"
              }
            }
          }
        ]
      },
      "S3CompatibleStorageModel": {
        "description": "S3 compatible storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/S3CompatibleStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/S3CompatibleStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/S3CompatibleProxyModel"
              }
            }
          }
        ]
      },
      "S3CompatibleStorageAccountModel": {
        "description": "Account used to access the S3 compatible storage.",
        "type": "object",
        "required": [
          "servicePoint",
          "regionId",
          "credentialsId"
        ],
        "properties": {
          "servicePoint": {
            "description": "Endpoint address and port number of the storage.",
            "type": "string"
          },
          "regionId": {
            "description": "ID of a region where the storage is located.",
            "type": "string"
          },
          "credentialsId": {
            "description": "ID of a cloud credentials record used to access the storage.",
            "type": "string",
            "format": "uuid"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "S3CompatibleStorageBucketModel": {
        "description": "Bucket where backup data is stored.",
        "type": "object",
        "required": [
          "bucketName",
          "folderName"
        ],
        "properties": {
          "bucketName": {
            "description": "Bucket name.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "storageConsumptionLimit": {
            "$ref": "#/components/schemas/ObjectStorageConsumptionLimitModel"
          },
          "immutability": {
            "$ref": "#/components/schemas/ObjectStorageImmutabilityModel"
          }
        }
      },
      "AmazonS3StorageAccountModel": {
        "description": "Account used to access the Amazon S3 storage.",
        "type": "object",
        "required": [
          "credentialsId",
          "regionType"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of the cloud credentials record.",
            "type": "string",
            "format": "uuid"
          },
          "regionType": {
            "$ref": "#/components/schemas/EAmazonRegionType"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "AmazonS3StorageBucketModel": {
        "description": "Amazon S3 bucket where backup data is stored.",
        "type": "object",
        "required": [
          "regionId",
          "bucketName",
          "folderName"
        ],
        "properties": {
          "regionId": {
            "description": "ID of a region where the Amazon S3 bucket is located.",
            "type": "string"
          },
          "bucketName": {
            "description": "Name of an Amazon S3 bucket.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "storageConsumptionLimit": {
            "$ref": "#/components/schemas/ObjectStorageConsumptionLimitModel"
          },
          "immutability": {
            "$ref": "#/components/schemas/ObjectStorageImmutabilityModel"
          },
          "infrequentAccessStorage": {
            "$ref": "#/components/schemas/AmazonS3IAStorageModel"
          }
        }
      },
      "ObjectStorageImmutabilityModel": {
        "description": "Object storage immutability.",
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, storage immutability is enabled.",
            "type": "boolean"
          },
          "daysCount": {
            "description": "Immutability period.",
            "type": "integer"
          }
        }
      },
      "AmazonS3IAStorageModel": {
        "description": "Standard Infrequent Access.",
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, Standard Infrequent Access is enabled.",
            "type": "boolean"
          },
          "singleZoneEnabled": {
            "description": "If `true`, Amazon S3 One Zone-Infrequent Access is enabled.",
            "type": "boolean"
          }
        }
      },
      "CloudBrowserNewFolderSpec": {
        "type": "object",
        "required": [
          "credentialsId",
          "serviceType",
          "newFolderName"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of a cloud credentials record required to connect to the object storage.",
            "type": "string",
            "format": "uuid"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ECloudServiceType"
          },
          "newFolderName": {
            "description": "Name of the new folder.",
            "type": "string"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureBlobBrowserDestinationSpec"
          },
          {
            "$ref": "#/components/schemas/AzureDataBoxBrowserDestinationSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonS3BrowserDestinationSpec"
          },
          {
            "$ref": "#/components/schemas/S3CompatibleBrowserDestinationSpec"
          },
          {
            "$ref": "#/components/schemas/AmazonSnowballEdgeBrowserDestinationSpec"
          },
          {
            "$ref": "#/components/schemas/GoogleCloudStorageBrowserDestinationSpec"
          },
          {
            "$ref": "#/components/schemas/IBMCloudStorageBrowserDestinationSpec"
          },
          {
            "$ref": "#/components/schemas/WasabiCloudStorageBrowserDestinationSpec"
          }
        ],
        "discriminator": {
          "propertyName": "serviceType",
          "mapping": {
            "AzureBlob": "#/components/schemas/AzureBlobBrowserDestinationSpec",
            "AzureDataBox": "#/components/schemas/AzureDataBoxBrowserDestinationSpec",
            "AmazonS3": "#/components/schemas/AmazonS3BrowserDestinationSpec",
            "S3Compatible": "#/components/schemas/S3CompatibleBrowserDestinationSpec",
            "AmazonSnowballEdge": "#/components/schemas/AmazonSnowballEdgeBrowserDestinationSpec",
            "GoogleCloud": "#/components/schemas/GoogleCloudStorageBrowserDestinationSpec",
            "IBMCloud": "#/components/schemas/IBMCloudStorageBrowserDestinationSpec",
            "WasabiCloud": "#/components/schemas/WasabiCloudStorageBrowserDestinationSpec"
          }
        }
      },
      "AzureBlobBrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "regionType",
              "containerName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "regionType": {
                "$ref": "#/components/schemas/EAzureRegionType"
              },
              "containerName": {
                "description": "Name of the container where you want to store your backup data.",
                "type": "string"
              },
              "folderType": {
                "$ref": "#/components/schemas/ECloudBrowserFolderType"
              }
            }
          }
        ]
      },
      "AzureDataBoxBrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "servicePoint",
              "containerName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "containerName": {
                "description": "Name of the container where you want to store your backup data.",
                "type": "string"
              },
              "servicePoint": {
                "description": "Service endpoint address of the Azure Data Box device.",
                "type": "string"
              }
            }
          }
        ]
      },
      "AmazonS3BrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "regionType",
              "regionId",
              "bucketName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "regionType": {
                "$ref": "#/components/schemas/EAmazonRegionType"
              },
              "regionId": {
                "description": "AWS region where the Amazon S3 bucket is located.",
                "type": "string"
              },
              "bucketName": {
                "description": "Name of the bucket where you want to store your backup data.",
                "type": "string"
              },
              "folderType": {
                "$ref": "#/components/schemas/ECloudBrowserFolderType"
              }
            }
          }
        ]
      },
      "S3CompatibleBrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "connectionPoint",
              "regionId",
              "bucketName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "connectionPoint": {
                "description": "Endpoint address and port number of the S3 compatible storage.",
                "type": "string"
              },
              "regionId": {
                "description": "Region where the bucket is located.",
                "type": "string"
              },
              "bucketName": {
                "description": "Name of the bucket where you want to store your backup data.",
                "type": "string"
              }
            }
          }
        ]
      },
      "AmazonSnowballEdgeBrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "connectionPoint",
              "regionId",
              "bucketName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "connectionPoint": {
                "description": "Service point address and port number of the AWS Snowball Edge device.",
                "type": "string"
              },
              "regionId": {
                "description": "For AWS Snowball Edge, the region is *snow*.",
                "type": "string"
              },
              "bucketName": {
                "description": "Name of the bucket where you want to store your backup data.",
                "type": "string"
              }
            }
          }
        ]
      },
      "GoogleCloudStorageBrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "regionId",
              "bucketName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "regionId": {
                "description": "Data center region where the bucket is located.",
                "type": "string"
              },
              "bucketName": {
                "description": "Name of the bucket where you want to store your backup data.",
                "type": "string"
              }
            }
          }
        ]
      },
      "IBMCloudStorageBrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "connectionPoint",
              "regionId",
              "bucketName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "connectionPoint": {
                "description": "Endpoint address and port number of the IBM Cloud object storage.",
                "type": "string"
              },
              "regionId": {
                "description": "Region where the bucket is located.",
                "type": "string"
              },
              "bucketName": {
                "description": "Name of the bucket where you want to store your backup data.",
                "type": "string"
              }
            }
          }
        ]
      },
      "WasabiCloudStorageBrowserDestinationSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudBrowserNewFolderSpec"
          },
          {
            "type": "object",
            "required": [
              "regionId",
              "bucketName"
            ],
            "properties": {
              "hostId": {
                "description": "ID of a server you want to use to connect to the object storage. You can use the backup server or any Microsoft Windows or Linux server added to your backup infrastructure. By default, the backup server ID is used.",
                "type": "string",
                "format": "uuid"
              },
              "regionId": {
                "description": "Region where the bucket is located.",
                "type": "string"
              },
              "bucketName": {
                "description": "Name of the bucket where you want to store your backup data.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EAmazonRegionType": {
        "description": "AWS region type.",
        "type": "string",
        "enum": [
          "China",
          "Global",
          "Government"
        ]
      },
      "EAmazonS3Region": {
        "description": "Amazon S3 region code.",
        "type": "string",
        "enum": [
          "unknown",
          "us-east-1",
          "us-east-2",
          "us-west-1",
          "us-west-2",
          "af-south-1",
          "ap-east-1",
          "ap-south-1",
          "ap-northeast-1",
          "ap-northeast-2",
          "ap-southeast-1",
          "ap-southeast-2",
          "ca-central-1",
          "eu-central-1",
          "eu-west-1",
          "eu-west-2",
          "eu-south-1",
          "eu-west-3",
          "eu-north-1",
          "me-south-1",
          "sa-east-1"
        ]
      },
      "ObjectStorageConsumptionLimitModel": {
        "description": "Soft consumption limit for the storage. The limit can be exceeded temporarily.",
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, the consumption limit is enabled.",
            "type": "boolean"
          },
          "consumptionLimitCount": {
            "description": "Limit value.",
            "type": "integer"
          },
          "consumptionLimitKind": {
            "$ref": "#/components/schemas/EConsumptionLimitKind"
          }
        }
      },
      "EConsumptionLimitKind": {
        "description": "Measurement unit.",
        "type": "string",
        "enum": [
          "TB",
          "PB"
        ]
      },
      "GoogleCloudStorageSpec": {
        "description": "Google Cloud storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/GoogleCloudStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/GoogleCloudStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "GoogleCloudStorageModel": {
        "description": "Google Cloud storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/GoogleCloudStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/GoogleCloudStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              }
            }
          }
        ]
      },
      "GoogleCloudStorageAccountModel": {
        "description": "Account used to access the Google Cloud storage.",
        "type": "object",
        "required": [
          "credentialsId",
          "regionId",
          "connectionSettings"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of a cloud credentials record used to access the storage.",
            "type": "string",
            "format": "uuid"
          },
          "regionId": {
            "description": "ID of a region where the storage bucket is located.",
            "type": "string"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "GoogleCloudStorageBucketModel": {
        "description": "Google Cloud object storage bucket where backup data is stored.",
        "type": "object",
        "required": [
          "bucketName",
          "folderName"
        ],
        "properties": {
          "bucketName": {
            "description": "Name of a Google Cloud bucket.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "storageConsumptionLimit": {
            "$ref": "#/components/schemas/ObjectStorageConsumptionLimitModel"
          },
          "nearlineStorageEnabled": {
            "description": "If `true`, the nearline storage class is used.",
            "type": "boolean"
          }
        }
      },
      "IBMCloudStorageSpec": {
        "description": "IBM Cloud storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/IBMCloudStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/IBMCloudStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/S3CompatibleProxyModel"
              }
            }
          }
        ]
      },
      "IBMCloudStorageModel": {
        "description": "IBM Cloud storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/IBMCloudStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/IBMCloudStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/S3CompatibleProxyModel"
              }
            }
          }
        ]
      },
      "S3CompatibleProxyModel": {
        "description": "Proxy appliance for the S3 compatible storage.",
        "type": "object",
        "required": [
          "managedServerId"
        ],
        "properties": {
          "managedServerId": {
            "description": "ID of a managed server used as a proxy appliance.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "IBMCloudStorageAccountModel": {
        "description": "Account used to access the IBM Cloud storage.",
        "type": "object",
        "required": [
          "servicePoint",
          "regionId",
          "credentialsId",
          "connectionSettings"
        ],
        "properties": {
          "servicePoint": {
            "description": "Endpoint address and port number of the storage.",
            "type": "string"
          },
          "regionId": {
            "description": "ID of a region where the storage is located.",
            "type": "string"
          },
          "credentialsId": {
            "description": "ID of a cloud credentials record used to access the storage.",
            "type": "string",
            "format": "uuid"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "IBMCloudStorageBucketModel": {
        "description": "IBM Cloud bucket where backup data is stored.",
        "type": "object",
        "required": [
          "bucketName",
          "folderName"
        ],
        "properties": {
          "bucketName": {
            "description": "Name of an IBM Cloud bucket.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "storageConsumptionLimit": {
            "$ref": "#/components/schemas/ObjectStorageConsumptionLimitModel"
          },
          "immutability": {
            "$ref": "#/components/schemas/ObjectStorageImmutabilityModel"
          }
        }
      },
      "AmazonS3GlacierStorageSpec": {
        "description": "Amazon S3 Glacier storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket"
            ],
            "properties": {
              "account": {
                "$ref": "#/components/schemas/AmazonS3StorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/AmazonS3GlacierStorageBucketModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AmazonS3StorageProxyApplianceModel"
              }
            }
          }
        ]
      },
      "AmazonS3GlacierStorageModel": {
        "description": "Amazon S3 Glacier storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket"
            ],
            "properties": {
              "account": {
                "$ref": "#/components/schemas/AmazonS3StorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/AmazonS3GlacierStorageBucketModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AmazonS3StorageProxyApplianceModel"
              }
            }
          }
        ]
      },
      "AmazonS3GlacierStorageBucketModel": {
        "description": "Amazon S3 Glacier bucket where backup data is stored.",
        "type": "object",
        "required": [
          "regionId",
          "bucketName",
          "folderName"
        ],
        "properties": {
          "regionId": {
            "description": "ID of a region where the Amazon S3 bucket is located.",
            "type": "string"
          },
          "bucketName": {
            "description": "Name of an Amazon S3 Glacier bucket.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "immutabilityEnabled": {
            "description": "If `true`, storage immutability is enabled.",
            "type": "boolean"
          },
          "useDeepArchive": {
            "description": "If `true`, Glacier Deep Archive is used for backups with the retention policy over 180 days.",
            "type": "boolean"
          }
        }
      },
      "AmazonS3StorageProxyApplianceModel": {
        "description": "Amazon S3 proxy appliance.",
        "type": "object",
        "properties": {
          "ec2InstanceType": {
            "description": "EC2 instance type for the proxy appliance.",
            "type": "string"
          },
          "vpcName": {
            "description": "Name of the Amazon VPC where Veeam Backup & Replication launches the target instance.",
            "type": "string"
          },
          "vpcId": {
            "description": "ID of the Amazon VPC where Veeam Backup & Replication launches the target instance. Use the ID to uniquely identify Amazon VPC.",
            "type": "string"
          },
          "subnetName": {
            "description": "Name of the subnet for the proxy appliance.",
            "type": "string"
          },
          "subnetId": {
            "description": "ID of the subnet for the proxy appliance. Use the ID to uniquely identify the subnet.",
            "type": "string"
          },
          "securityGroup": {
            "description": "Security group associated with the proxy appliance.",
            "type": "string"
          },
          "redirectorPort": {
            "description": "TCP port used to route requests between the proxy appliance and backup infrastructure components.",
            "type": "integer"
          }
        }
      },
      "AzureArchiveStorageSpec": {
        "description": "Microsoft Azure Archive storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "container",
              "proxyAppliance"
            ],
            "properties": {
              "account": {
                "$ref": "#/components/schemas/AzureArchiveStorageAccountModel"
              },
              "container": {
                "$ref": "#/components/schemas/AzureArchiveStorageContainerModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AzureStorageProxyModel"
              }
            }
          }
        ]
      },
      "AzureArchiveStorageModel": {
        "description": "Microsoft Azure Archive storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "container",
              "proxyAppliance"
            ],
            "properties": {
              "account": {
                "$ref": "#/components/schemas/AzureArchiveStorageAccountModel"
              },
              "container": {
                "$ref": "#/components/schemas/AzureArchiveStorageContainerModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/AzureStorageProxyModel"
              }
            }
          }
        ]
      },
      "AzureArchiveStorageAccountModel": {
        "description": "Account used to access the Azure Archive storage.",
        "type": "object",
        "required": [
          "credentialsId",
          "regionType",
          "connectionSettings"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of a cloud credentials record used to access the storage.",
            "type": "string",
            "format": "uuid"
          },
          "regionType": {
            "$ref": "#/components/schemas/EAzureRegionType"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "AzureArchiveStorageContainerModel": {
        "description": "Azure Archive container where backup data is stored.",
        "type": "object",
        "required": [
          "containerName",
          "folderName"
        ],
        "properties": {
          "containerName": {
            "description": "Name of an Azure Archive container.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          }
        }
      },
      "AzureStorageProxyModel": {
        "description": "Azure storage proxy appliance.",
        "type": "object",
        "required": [
          "subscriptionId"
        ],
        "properties": {
          "subscriptionId": {
            "description": "ID that Veeam Backup & Replication assigned to the Azure subscription.",
            "type": "string",
            "format": "uuid"
          },
          "instanceSize": {
            "description": "Size of the appliance.",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group associated with the proxy appliance.",
            "type": "string"
          },
          "virtualNetwork": {
            "description": "Network to which the helper appliance is connected.",
            "type": "string"
          },
          "subnet": {
            "description": "Subnet for the proxy appliance.",
            "type": "string"
          },
          "redirectorPort": {
            "description": "TCP port used to route requests between the proxy appliance and backup infrastructure components.",
            "type": "integer"
          }
        }
      },
      "WasabiCloudStorageSpec": {
        "description": "Wasabi Cloud storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositorySpec"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/WasabiCloudStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/WasabiCloudStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/S3CompatibleProxyModel"
              }
            }
          }
        ]
      },
      "WasabiCloudStorageModel": {
        "description": "Wasabi Cloud storage.",
        "allOf": [
          {
            "$ref": "#/components/schemas/RepositoryModel"
          },
          {
            "type": "object",
            "required": [
              "account",
              "bucket",
              "mountServer"
            ],
            "properties": {
              "taskLimitEnabled": {
                "description": "If `true`, the maximum number of concurrent tasks is limited.",
                "type": "boolean"
              },
              "maxTaskCount": {
                "description": "Maximum number of concurrent tasks.",
                "type": "integer"
              },
              "account": {
                "$ref": "#/components/schemas/WasabiCloudStorageAccountModel"
              },
              "bucket": {
                "$ref": "#/components/schemas/WasabiCloudStorageBucketModel"
              },
              "mountServer": {
                "$ref": "#/components/schemas/MountServerSettingsModel"
              },
              "proxyAppliance": {
                "$ref": "#/components/schemas/S3CompatibleProxyModel"
              }
            }
          }
        ]
      },
      "WasabiCloudStorageAccountModel": {
        "description": "Account used to access the Wasabi Cloud storage.",
        "type": "object",
        "required": [
          "regionId",
          "credentialsId",
          "connectionSettings"
        ],
        "properties": {
          "regionId": {
            "description": "ID of a region where the storage is located.",
            "type": "string"
          },
          "credentialsId": {
            "description": "ID of a cloud credentials record used to access the storage.",
            "type": "string",
            "format": "uuid"
          },
          "connectionSettings": {
            "$ref": "#/components/schemas/ObjectStorageConnectionModel"
          }
        }
      },
      "WasabiCloudStorageBucketModel": {
        "description": "Wasabi bucket where backup data is stored.",
        "type": "object",
        "required": [
          "bucketName",
          "folderName"
        ],
        "properties": {
          "bucketName": {
            "description": "Name of a Wasabi bucket.",
            "type": "string"
          },
          "folderName": {
            "description": "Name of the folder that the object storage repository is mapped to.",
            "type": "string"
          },
          "storageConsumptionLimit": {
            "$ref": "#/components/schemas/ObjectStorageConsumptionLimitModel"
          },
          "immutability": {
            "$ref": "#/components/schemas/ObjectStorageImmutabilityModel"
          }
        }
      },
      "VmwareFcdQuickMigrationSpec": {
        "required": [
          "targetDatastore"
        ],
        "type": "object",
        "properties": {
          "mountedDiskNames": {
            "description": "Array of disks that will be migrated to the `targetDatastore` associated with the `storagePolicy`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetDatastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "storagePolicy": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "RepositoryStatesResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of repository states.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepositoryStateModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "RepositoryStateModel": {
        "required": [
          "id",
          "name",
          "type",
          "description",
          "capacityGB",
          "freeGB",
          "usedSpaceGB",
          "isOnline"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the backup repository.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Name of the backup repository.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "description": {
            "description": "Description of the backup repository.",
            "type": "string"
          },
          "hostId": {
            "description": "ID of the server that is used as a backup repository.",
            "type": "string",
            "format": "uuid"
          },
          "hostName": {
            "description": "Name of the server that is used as a backup repository.",
            "type": "string"
          },
          "path": {
            "description": "Path to the folder where backup files are stored.",
            "type": "string"
          },
          "capacityGB": {
            "description": "Repository capacity in GB.",
            "type": "number",
            "format": "double"
          },
          "freeGB": {
            "description": "Repository free space in GB.",
            "type": "number",
            "format": "double"
          },
          "usedSpaceGB": {
            "description": "Repository used space in GB.",
            "type": "number",
            "format": "double"
          },
          "isOnline": {
            "description": "Repository connection status.",
            "type": "boolean"
          }
        }
      },
      "RepositoryStatesFilters": {
        "description": "Filters repositories by the specified parameters.",
        "type": "object",
        "properties": {
          "skip": {
            "description": "Skips the specified number of repositories.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Returns the specified number of repositories.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ERepositoryStatesFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts repositories in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "idFilter": {
            "type": "string",
            "format": "uuid"
          },
          "nameFilter": {
            "description": "Filters repositories by the `nameFilter` pattern. The pattern can match any repository parameter. To substitute one or more characters, use the asterisk (*) character at the beginning and/or at the end.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ERepositoryType"
          },
          "capacityFilter": {
            "description": "Filters repositories by repository capacity.",
            "type": "number",
            "format": "double"
          },
          "freeSpaceFilter": {
            "description": "Filters repositories by repository free space.",
            "type": "number",
            "format": "double"
          },
          "usedSpaceFilter": {
            "description": "Filters repositories by repository used space.",
            "type": "number",
            "format": "double"
          },
          "isOnlineFilter": {
            "description": "Filters repositories by repository connection status.",
            "type": "boolean"
          }
        }
      },
      "ERepositoryStatesFiltersOrderColumn": {
        "description": "Orders repositories by the specified column.",
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "Host",
          "Path",
          "CapacityGB",
          "FreeGB",
          "UsedSpaceGB",
          "Description"
        ]
      },
      "ServicesResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of services.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicesModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ServicesModel": {
        "required": [
          "name",
          "port"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the service.",
            "type": "string"
          },
          "port": {
            "description": "Port used to communicate with the service.",
            "type": "integer"
          }
        }
      },
      "ServicesFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EServicesFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          }
        }
      },
      "EServicesFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "Port"
        ]
      },
      "InstalledLicenseModel": {
        "description": "Details on the installed license.",
        "type": "object",
        "required": [
          "status",
          "type",
          "edition",
          "licensedTo",
          "supportId",
          "autoUpdateEnabled",
          "freeAgentInstanceConsumptionEnabled",
          "cloudConnect"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/EInstalledLicenseStatus"
          },
          "expirationDate": {
            "type": "string",
            "description": "Expiration date and time of the license.",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/EInstalledLicenseType"
          },
          "edition": {
            "$ref": "#/components/schemas/EInstalledLicenseEdition"
          },
          "licensedTo": {
            "type": "string",
            "description": "Person or organization to which the license was issued."
          },
          "socketLicenseSummary": {
            "$ref": "#/components/schemas/SocketLicenseSummaryModel"
          },
          "instanceLicenseSummary": {
            "$ref": "#/components/schemas/InstanceLicenseSummaryModel"
          },
          "capacityLicenseSummary": {
            "$ref": "#/components/schemas/CapacityLicenseSummaryModel"
          },
          "supportId": {
            "type": "string",
            "description": "Support ID required for contacting Veeam Support."
          },
          "supportExpirationDate": {
            "type": "string",
            "description": "Expiration date and time for the support contract.",
            "format": "date-time"
          },
          "autoUpdateEnabled": {
            "type": "boolean",
            "description": "If `true`, the license is automatically updated."
          },
          "freeAgentInstanceConsumptionEnabled": {
            "type": "boolean",
            "description": "If `true`, unlicensed Veeam Agents consume instances."
          },
          "cloudConnect": {
            "$ref": "#/components/schemas/EInstalledLicenseCloudConnectMode"
          }
        }
      },
      "LicenseRemoveSpec": {
        "description": "Remove the license.",
        "type": "object",
        "properties": {
          "forceStandaloneMode": {
            "type": "boolean",
            "description": "This property is only used with backup servers managed by Veeam Backup Enterprise Manager.<ul><li>If `true`, the request will remove the license.</li><li>If `false` or the property is not specified, the request will produce an error, warning you that the backup server is managed by Enterprise Manager.</li></ul>"
          },
          "section": {
            "$ref": "#/components/schemas/ELicenseSectionType"
          }
        }
      },
      "ELicenseSectionType": {
        "description": "Type of the removed license.",
        "type": "string",
        "enum": [
          "All",
          "Instance",
          "Socket"
        ]
      },
      "LicenseCreateReportSpec": {
        "description": "Create a report on license usage.",
        "type": "object",
        "required": [
          "reportFormat"
        ],
        "properties": {
          "reportFormat": {
            "$ref": "#/components/schemas/ELicenseReportFormat"
          }
        }
      },
      "ELicenseReportFormat": {
        "description": "Format of the license usage report.",
        "enum": [
          "Html",
          "Pdf",
          "Json"
        ],
        "type": "string"
      },
      "LicenseAutoUpdateSpec": {
        "description": "Update the license automatically.",
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If `true`, the license is automatically updated."
          }
        }
      },
      "LicenseAgentConsumptionSpec": {
        "description": "Enable license consumption for standalone Veeam agents.",
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If `true`, unlicensed standalone Veeam Agents consume instances."
          }
        }
      },
      "LicenseRenewSpec": {
        "description": "Renew the license.",
        "type": "object",
        "properties": {
          "forceStandaloneMode": {
            "type": "boolean",
            "description": "This property is only used with backup servers managed by Veeam Backup Enterprise Manager.<ul><li>If `true`, the request will renew the license.</li><li>If `false` or the property is not specified, the request will produce an error, warning you that the backup server is managed by Enterprise Manager.</li></ul>"
          }
        }
      },
      "LicenseRenewalModel": {
        "type": "object",
        "properties": {
          "renewalUrl": {
            "description": "License renewal URL.",
            "type": "string"
          }
        }
      },
      "EInstalledLicenseStatus": {
        "description": "License status.",
        "enum": [
          "Expired",
          "Invalid",
          "Valid"
        ],
        "type": "string"
      },
      "EInstalledLicenseType": {
        "description": "License type.",
        "enum": [
          "Empty",
          "Evaluation",
          "Free",
          "NFR",
          "Perpetual",
          "Rental",
          "Subscription",
          "Promo"
        ],
        "type": "string"
      },
      "ELicensePackageType": {
        "description": "License package.",
        "enum": [
          "Invalid",
          "Starter",
          "Essentials",
          "Backup",
          "One",
          "Suite"
        ],
        "type": "string"
      },
      "EInstalledLicenseEdition": {
        "description": "License edition.",
        "enum": [
          "Community",
          "Enterprise",
          "EnterprisePlus",
          "Standard",
          "Unspecified"
        ],
        "type": "string"
      },
      "EInstalledLicenseCloudConnectMode": {
        "description": "Cloud Connect license mode.",
        "enum": [
          "Disabled",
          "Enabled",
          "Enterprise",
          "Invalid"
        ],
        "type": "string"
      },
      "SocketLicenseSummaryModel": {
        "description": "Details on per-socket license usage.",
        "type": "object",
        "required": [
          "licensedSocketsNumber",
          "usedSocketsNumber",
          "remainingSocketsNumber"
        ],
        "properties": {
          "licensedSocketsNumber": {
            "type": "integer",
            "description": "Total number of CPU sockets on protected hosts."
          },
          "usedSocketsNumber": {
            "type": "integer",
            "description": "Number of CPU sockets that have already been used."
          },
          "remainingSocketsNumber": {
            "type": "integer",
            "description": "Number of CPU sockets that remain available."
          },
          "workload": {
            "type": "array",
            "description": "Array of licensed hosts.",
            "items": {
              "$ref": "#/components/schemas/SocketLicenseWorkloadModel"
            }
          },
          "package": {
            "$ref": "#/components/schemas/ELicensePackageType"
          }
        }
      },
      "SocketLicenseWorkloadResult": {
        "description": "Details on hosts covered by socket licenses.",
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Array of licensed hosts.",
            "items": {
              "$ref": "#/components/schemas/SocketLicenseWorkloadModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "SocketLicenseWorkloadModel": {
        "description": "Details on host covered by socket licenses.",
        "type": "object",
        "required": [
          "name",
          "hostName",
          "hostId",
          "socketsNumber",
          "coresNumber",
          "type"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the protected workload."
          },
          "hostName": {
            "type": "string",
            "description": "Name of the host."
          },
          "hostId": {
            "type": "string",
            "description": "ID of the host.",
            "format": "uuid"
          },
          "socketsNumber": {
            "type": "integer",
            "description": "Number of CPU sockets on the host."
          },
          "coresNumber": {
            "type": "integer",
            "description": "Number of CPU cores on the host."
          },
          "type": {
            "$ref": "#/components/schemas/ESocketLicenseObjectType"
          }
        }
      },
      "ESocketLicenseObjectType": {
        "description": "Type of host covered by socket license.",
        "enum": [
          "HyperV",
          "Universal",
          "Unlicensed",
          "vSphere"
        ],
        "type": "string"
      },
      "InstanceLicenseSummaryModel": {
        "description": "Details on per-instance license consumption.",
        "type": "object",
        "required": [
          "licensedInstancesNumber",
          "usedInstancesNumber",
          "newInstancesNumber",
          "rentalInstancesNumber"
        ],
        "properties": {
          "licensedInstancesNumber": {
            "type": "number",
            "description": "Total number of instances that are available in the license scope.",
            "format": "double"
          },
          "usedInstancesNumber": {
            "type": "number",
            "description": "Number of instances that have already been used.",
            "format": "double"
          },
          "newInstancesNumber": {
            "type": "number",
            "description": "Number of new instances, consumed for the first time within the current calendar month. New instances are counted separately and do not consume licenses in the current month.",
            "format": "double"
          },
          "rentalInstancesNumber": {
            "type": "number",
            "description": "Number of consumed instances.",
            "format": "double"
          },
          "objects": {
            "type": "array",
            "description": "Array of objects containing details on workloads covered by instance licenses.",
            "items": {
              "$ref": "#/components/schemas/InstanceLicenseObjectModel"
            }
          },
          "workload": {
            "type": "array",
            "description": "Array of protected workloads.",
            "items": {
              "$ref": "#/components/schemas/InstanceLicenseWorkloadModel"
            }
          },
          "package": {
            "$ref": "#/components/schemas/ELicensePackageType"
          },
          "promoInstancesNumber": {
            "type": "number",
            "description": "Number of Promo instance licenses.",
            "format": "double"
          },
          "licensedInstancesPromoIncludedNumber": {
            "type": "number",
            "description": "Number of licensed instances, including Promo instance licenses.",
            "format": "double"
          },
          "promoExpiresOn": {
            "type": "string",
            "description": "Expiration date for the Promo instance licenses.",
            "format": "date-time"
          }
        }
      },
      "InstanceLicenseObjectModel": {
        "description": "Details on workloads covered by instance licenses.",
        "type": "object",
        "required": [
          "type",
          "count",
          "multiplier",
          "usedInstancesNumber"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of a protected workload."
          },
          "count": {
            "type": "integer",
            "description": "Number of protected workloads."
          },
          "multiplier": {
            "type": "number",
            "description": "Consumed instance multiplier.",
            "format": "double"
          },
          "usedInstancesNumber": {
            "type": "number",
            "description": "Number of consumed instances.",
            "format": "double"
          }
        }
      },
      "InstanceLicenseWorkloadResult": {
        "description": "Details on workloads covered by instance licenses.",
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Array of objects containing details on workloads covered by instance licenses.",
            "items": {
              "$ref": "#/components/schemas/InstanceLicenseWorkloadModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "InstanceLicenseWorkloadModel": {
        "description": "Details on workload covered by instance licenses.",
        "type": "object",
        "required": [
          "name",
          "hostName",
          "usedInstancesNumber",
          "type",
          "instanceId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Protected workload name."
          },
          "hostName": {
            "type": "string",
            "description": "Name of the host."
          },
          "usedInstancesNumber": {
            "type": "number",
            "description": "Number of consumed instances.",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "Workload type."
          },
          "instanceId": {
            "type": "string",
            "description": "Instance ID.",
            "format": "uuid"
          }
        }
      },
      "CapacityLicenseSummaryModel": {
        "description": "Details on total and consumed capacity by workload.",
        "type": "object",
        "required": [
          "licensedCapacityTb",
          "usedCapacityTb"
        ],
        "properties": {
          "licensedCapacityTb": {
            "type": "number",
            "description": "Total capacity provided by the license in TB.",
            "format": "double"
          },
          "usedCapacityTb": {
            "type": "number",
            "description": "Amount of consumed capacity in TB.",
            "format": "double"
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CapacityLicenseObjectModel"
            }
          },
          "workload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CapacityLicenseWorkloadModel"
            }
          }
        }
      },
      "CapacityLicenseObjectModel": {
        "description": "Type of unstructured data source and the capacity it consumes.",
        "type": "object",
        "required": [
          "type",
          "usedCapacityTb"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECapacityLicenseObjectType"
          },
          "usedCapacityTb": {
            "type": "number",
            "description": "Amount of consumed capacity in TB.",
            "format": "double"
          }
        }
      },
      "ECapacityLicenseObjectType": {
        "description": "Type of unstructured data source.",
        "enum": [
          "FileShare",
          "ObjectStorage"
        ],
        "type": "string"
      },
      "CapacityLicenseWorkloadResult": {
        "description": "Details on unstructured data workloads.",
        "type": "object",
        "required": [
          "workloads"
        ],
        "properties": {
          "workloads": {
            "type": "array",
            "description": "Array of protected workloads.",
            "items": {
              "$ref": "#/components/schemas/CapacityLicenseWorkloadModel"
            }
          }
        }
      },
      "CapacityLicenseWorkloadModel": {
        "description": "Details on unstructured data workloads.",
        "type": "object",
        "required": [
          "name",
          "usedCapacityTb",
          "type",
          "instanceId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the protected workload."
          },
          "usedCapacityTb": {
            "type": "number",
            "description": "Amount of consumed capacity in TB.",
            "format": "double"
          },
          "type": {
            "$ref": "#/components/schemas/ECapacityLicenseObjectType"
          },
          "instanceId": {
            "type": "string",
            "description": "Instance ID.",
            "format": "uuid"
          }
        }
      },
      "LicenseInstallationSpec": {
        "description": "Install license.",
        "type": "object",
        "required": [
          "license"
        ],
        "properties": {
          "license": {
            "type": "string",
            "description": "Base64-encoded string of the content of a license file."
          },
          "forceStandaloneMode": {
            "type": "boolean",
            "description": "This property is only used with backup servers managed by Veeam Backup Enterprise Manager.<ul><li>If `true`, the request will install the license.</li><li>If `false` or the property is not specified, the request will produce an error, warning you that the backup server is managed by Enterprise Manager.</li></ul>"
          },
          "promo": {
            "$ref": "#/components/schemas/LicenseInstallationPromoSpec"
          }
        }
      },
      "LicenseInstallationPromoSpec": {
        "description": "Promo license settings.",
        "type": "object",
        "properties": {
          "overwriteExisting": {
            "type": "boolean",
            "description": "If `true`, the existing license is overwritten."
          },
          "enableAutoUpdate": {
            "type": "boolean",
            "description": "If `true`, the license is automatically updated."
          },
          "installWithoutPromo": {
            "type": "boolean",
            "description": "If `true`, the Promo license is installed without granting the Promo instances."
          }
        }
      },
      "InstanceLicenseAssignmentSpec": {
        "description": "Set the product edition for standalone Veeam Agents.",
        "type": "object",
        "required": [
          "role"
        ],
        "properties": {
          "role": {
            "$ref": "#/components/schemas/EInstanceLicenseWorkloadRole"
          }
        }
      },
      "EInstanceLicenseWorkloadRole": {
        "description": "Product edition that you want to assign to the standalone Veeam Agent.",
        "enum": [
          "Workstation",
          "Server"
        ],
        "type": "string"
      },
      "LicenseUpdateModel": {
        "description": "License update results.",
        "type": "object",
        "required": [
          "message",
          "isSuccessful"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Message that explains the license update result."
          },
          "isSuccessful": {
            "type": "boolean",
            "description": "If `true`, the update is successful."
          }
        }
      },
      "BestPracticesComplianceResult": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of security options.",
            "items": {
              "$ref": "#/components/schemas/BestPracticesComplianceModel"
            }
          }
        }
      },
      "BestPracticesComplianceModel": {
        "type": "object",
        "required": [
          "id",
          "bestPractice",
          "status"
        ],
        "properties": {
          "id": {
            "description": "Best practice ID.",
            "type": "string",
            "format": "uuid"
          },
          "bestPractice": {
            "description": "Best practice name.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/EBestPracticeStatus"
          },
          "note": {
            "description": "Note that specifies the reason for suppressing the best practice compliance status (excluding it from the analyzer checklist).",
            "type": "string"
          }
        }
      },
      "EBestPracticeStatus": {
        "description": "Best practice status.",
        "enum": [
          "Analyzing",
          "None",
          "OK",
          "Suppressed",
          "UnableToCheck",
          "Violation"
        ],
        "type": "string"
      },
      "SecurityAnalyzerScheduleSettingsModel": {
        "type": "object",
        "properties": {
          "dailyScanEnabled": {
            "description": "If `true`, Security & Compliance Analyzer runs daily.",
            "type": "boolean"
          },
          "dailyScanLocalTime": {
            "description": "Local time when the Security & Compliance Analyzer session must start.",
            "type": "string",
            "format": "time"
          },
          "sendScanResults": {
            "description": "If `true`, email notifications with scan results are enabled.",
            "type": "boolean"
          },
          "recipients": {
            "description": "Recipients' email addresses separated with a semicolon.",
            "type": "string"
          },
          "notificationType": {
            "$ref": "#/components/schemas/EEmailNotificationType"
          },
          "customNotificationSettings": {
            "$ref": "#/components/schemas/SecurityAnalyzerEmailNotificationSettings"
          }
        }
      },
      "SecurityAnalyzerEmailNotificationSettings": {
        "description": "Custom notification settings specified for Security & Compliance Analyzer.",
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "notifyOnSuccess": {
            "description": "If `true`, email notifications are sent when the Security & Compliance Analyzer session completes successfully.",
            "type": "boolean"
          },
          "notifyOnWarning": {
            "description": "If `true`, email notifications are sent when the Security & Compliance Analyzer session completes with a warning.",
            "type": "boolean"
          },
          "notifyOnError": {
            "description": "If `true`, email notifications are sent when the Security & Compliance Analyzer session fails.",
            "type": "boolean"
          }
        }
      },
      "BestPracticesSuppressRequest": {
        "type": "object",
        "properties": {
          "note": {
            "description": "Note that specifies the reason for suppressing the option (excluding it from the analyzer checklist).",
            "type": "string"
          }
        }
      },
      "RepositoryAccessPermissionsModel": {
        "description": "Repository access permissions.",
        "type": "object",
        "required": [
          "accessPolicy"
        ],
        "properties": {
          "accessPolicy": {
            "$ref": "#/components/schemas/ERepositoryAccessType"
          },
          "accounts": {
            "description": "(For *AllowExplicit* access policy) Array of accounts that have access to the backup repository.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "encryptionSettings": {
            "$ref": "#/components/schemas/BackupStorageSettingsEncryptionModel"
          }
        }
      },
      "ERepositoryAccessType": {
        "description": "Access type.",
        "type": "string",
        "enum": [
          "DenyAll",
          "AllowAll",
          "AllowExplicit"
        ]
      },
      "DeleteRepositoryFilters": {
        "type": "object",
        "properties": {
          "deleteBackups": {
            "type": "boolean"
          }
        }
      },
      "GeneralOptionsModel": {
        "description": "Veeam Backup & Replication settings.",
        "type": "object",
        "properties": {
          "emailSettings": {
            "$ref": "#/components/schemas/GeneralOptionsEmailNotificationsModel"
          },
          "notifications": {
            "$ref": "#/components/schemas/GeneralOptionsNotificationsModel"
          },
          "siemIntegration": {
            "$ref": "#/components/schemas/GeneralOptionsSiemIntegrationModel"
          }
        }
      },
      "GeneralOptionsEmailNotificationsModel": {
        "description": "Global email notification settings and job notifications.",
        "type": "object",
        "required": [
          "isEnabled",
          "smtpServerName",
          "advancedSmtpOptions",
          "from",
          "to",
          "subject",
          "sendDailyReportsAt",
          "notifyOnSuccess",
          "notifyOnWarning",
          "notifyOnFailure",
          "notifyOnLastRetry"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, global email notification settings are enabled.",
            "type": "boolean"
          },
          "smtpServerName": {
            "description": "Full DNS name or IP address of the SMTP server.",
            "type": "string"
          },
          "advancedSmtpOptions": {
            "$ref": "#/components/schemas/AdvancedSmtpOptionsModel"
          },
          "from": {
            "description": "Email address from which email notifications must be sent.",
            "type": "string"
          },
          "to": {
            "description": "Recipient email addresses. Use a semicolon to separate multiple addresses.",
            "type": "string"
          },
          "subject": {
            "description": "Notification subject. Use the following variables in the subject:<ul> <li>%Time% — completion time</li> <li>%JobName% — job name</li> <li>%JobResult% — job result</li> <li>%ObjectCount% — number of VMs in the job</li> <li>%Issues% — number of VMs in the job that have been processed with the Warning or Failed status</li></ul>",
            "type": "string"
          },
          "sendDailyReportsAt": {
            "description": "Time when Veeam Backup & Replication sends daily email reports.",
            "type": "string",
            "format": "date-time"
          },
          "notifyOnSuccess": {
            "description": "If `true`, email notifications are sent when the job completes successfully.",
            "type": "boolean"
          },
          "notifyOnWarning": {
            "description": "If `true`, email notifications are sent when the job completes with a warning.",
            "type": "boolean"
          },
          "notifyOnFailure": {
            "description": "If `true`, email notifications are sent when the job fails.",
            "type": "boolean"
          },
          "notifyOnLastRetry": {
            "description": "If `true`, email notifications are sent about the final job status only (not per every job retry).",
            "type": "boolean"
          }
        }
      },
      "AdvancedSmtpOptionsModel": {
        "description": "Advanced global email notification settings.",
        "type": "object",
        "required": [
          "port",
          "timeoutMs",
          "SSLEnabled",
          "authRequired"
        ],
        "properties": {
          "port": {
            "description": "Port number for the SMTP server.",
            "type": "integer",
            "format": "int32"
          },
          "timeoutMs": {
            "description": "Connection timeout for the SMTP server.",
            "type": "integer",
            "format": "int32"
          },
          "SSLEnabled": {
            "description": "If `true`, secure connection for email operations is used.",
            "type": "boolean"
          },
          "authRequired": {
            "description": "If `true`, the `credentialsId` credentials are used to connect to the SMTP server.",
            "type": "boolean"
          },
          "credentialsId": {
            "description": "ID of the credentials used to connect to the server.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "GeneralOptionsNotificationsModel": {
        "description": "Other notifications such as notifications on low disk space, support contract expiration, and available updates.",
        "type": "object",
        "required": [
          "storageSpaceThresholdEnabled",
          "storageSpaceThreshold",
          "datastoreSpaceThresholdEnabled",
          "datastoreSpaceThreshold",
          "skipVMSpaceThresholdEnabled",
          "skipVMSpaceThreshold",
          "notifyOnSupportExpiration",
          "notifyOnUpdates"
        ],
        "properties": {
          "storageSpaceThresholdEnabled": {
            "description": "If `true`, notifications about critical amount of free space in backup storage are enabled.",
            "type": "boolean"
          },
          "storageSpaceThreshold": {
            "description": "Space threshold of backup storage, in percent.",
            "type": "integer",
            "format": "int32"
          },
          "datastoreSpaceThresholdEnabled": {
            "description": "If `true`, notifications about critical amount of free space in production datastore are enabled.",
            "type": "boolean"
          },
          "datastoreSpaceThreshold": {
            "description": "Space threshold of production datastore, in percent.",
            "type": "integer",
            "format": "int32"
          },
          "skipVMSpaceThresholdEnabled": {
            "description": "If `true` and the `skipVMSpaceThreshold` threshold is reached, Veeam Backup & Replication terminates backup and replication jobs working with production datastores before VM snapshots are taken.",
            "type": "boolean"
          },
          "skipVMSpaceThreshold": {
            "description": "Space threshold of production datastore, in percent.",
            "type": "integer",
            "format": "int32"
          },
          "notifyOnSupportExpiration": {
            "description": "If `true`, notifications about support contract expiration are enabled.",
            "type": "boolean"
          },
          "notifyOnUpdates": {
            "description": "If `true`, notifications about updates are enabled.",
            "type": "boolean"
          }
        }
      },
      "ConfigBackupModel": {
        "required": [
          "isEnabled",
          "backupRepositoryId",
          "restorePointsToKeep",
          "notifications",
          "schedule",
          "lastSuccessfulBackup",
          "encryption"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, configuration backup is enabled.",
            "type": "boolean"
          },
          "backupRepositoryId": {
            "description": "ID of the backup repository on which the configuration backup is stored.",
            "type": "string",
            "format": "uuid"
          },
          "restorePointsToKeep": {
            "description": "Number of restore points to keep in the backup repository.",
            "type": "integer",
            "format": "int32"
          },
          "notifications": {
            "$ref": "#/components/schemas/ConfigBackupNotificationsModel"
          },
          "schedule": {
            "$ref": "#/components/schemas/ConfigBackupScheduleModel"
          },
          "lastSuccessfulBackup": {
            "$ref": "#/components/schemas/ConfigBackupLastSuccessfulModel"
          },
          "encryption": {
            "$ref": "#/components/schemas/ConfigBackupEncryptionModel"
          }
        }
      },
      "ConfigBackupNotificationsModel": {
        "description": "Notification settings.",
        "required": [
          "SNMPEnabled"
        ],
        "type": "object",
        "properties": {
          "SNMPEnabled": {
            "description": "If `true`, SNMP traps are enabled for this job.",
            "type": "boolean"
          },
          "SMTPSettings": {
            "$ref": "#/components/schemas/ConfigBackupSMTPSettigsModel"
          }
        }
      },
      "ConfigBackupSMTPSettigsModel": {
        "description": "Email notification settings.",
        "required": [
          "isEnabled",
          "recipients",
          "settingsType",
          "subject",
          "notifyOnSuccess",
          "notifyOnWarning",
          "notifyOnError"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, email notifications are enabled for this job.",
            "type": "boolean"
          },
          "recipients": {
            "description": "Array of recipients' email addresses.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settingsType": {
            "$ref": "#/components/schemas/EConfigBackupSMTPSettingsType"
          },
          "subject": {
            "description": "Notification subject. Use the following variables in the subject:<ul> <li>*%Time%* — completion time</li> <li>*%JobName%* — job name</li> <li>*%JobResult%* — job result</li></ul>",
            "type": "string"
          },
          "notifyOnSuccess": {
            "description": "If `true`, email notifications are sent when the job completes successfully.",
            "type": "boolean"
          },
          "notifyOnWarning": {
            "description": "If `true`, email notifications are sent when the job completes with a warning.",
            "type": "boolean"
          },
          "notifyOnError": {
            "description": "If `true`, email notifications are sent when the job fails.",
            "type": "boolean"
          }
        }
      },
      "EConfigBackupSMTPSettingsType": {
        "description": "Type of notification settings.",
        "type": "string",
        "enum": [
          "Global",
          "Custom"
        ]
      },
      "ConfigBackupLastSuccessfulModel": {
        "description": "Last successful backup.",
        "type": "object",
        "properties": {
          "lastSuccessfulTime": {
            "description": "Date and time when the last successful backup was created.",
            "type": "string",
            "format": "date-time"
          },
          "sessionId": {
            "description": "ID of the job session.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ConfigBackupScheduleModel": {
        "description": "Scheduling settings.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, backup scheduling is enabled.",
            "type": "boolean"
          },
          "daily": {
            "$ref": "#/components/schemas/ScheduleDailyModel"
          },
          "monthly": {
            "$ref": "#/components/schemas/ScheduleMonthlyModel"
          }
        }
      },
      "ConfigBackupEncryptionModel": {
        "description": "Encryption settings.",
        "required": [
          "isEnabled",
          "passwordId"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "description": "If `true`, backup encryption is enabled.",
            "type": "boolean"
          },
          "passwordId": {
            "description": "ID of the password used for encryption.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "GeneralOptionsSiemIntegrationModel": {
        "description": "SIEM integration settings.",
        "type": "object",
        "required": [
          "SNMPEventsEnabled",
          "SyslogEventsEnabled"
        ],
        "properties": {
          "SNMPEventsEnabled": {
            "description": "If `true`, SNMP trap management is enabled.",
            "type": "boolean"
          },
          "SNMPServers": {
            "description": "Array of SNMP servers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralOptionsSNMPServerModel"
            }
          },
          "SyslogEventsEnabled": {
            "description": "If `true`, syslog server integration is enabled.",
            "type": "boolean"
          },
          "SyslogServer": {
            "$ref": "#/components/schemas/GeneralOptionsSyslogServerModel"
          },
          "syslogEventFiltering": {
            "description": "Array of syslog event filters.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralOptionsSyslogEventFilteringModel"
            }
          }
        }
      },
      "GeneralOptionsSyslogEventFilteringModel": {
        "type": "object",
        "required": [
          "eventId",
          "severity"
        ],
        "properties": {
          "eventId": {
            "description": "Event ID. For a complete list of Veeam Backup & Replication events, see [Event Reference](https://helpcenter.veeam.com/docs/backup/events/overview.html?ver=120).",
            "type": "string"
          },
          "severity": {
            "description": "Array of event severity levels. Each entry prevents Veeam Backup & Replication from sending events of the specified severity level to the syslog server.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ESyslogEventSeverity"
            }
          }
        }
      },
      "ESyslogEventSeverity": {
        "description": "Syslog event severity level.",
        "enum": [
          "Info",
          "Warning",
          "Error"
        ],
        "type": "string"
      },
      "GeneralOptionsSNMPServerModel": {
        "description": "SNMP server settings.",
        "type": "object",
        "required": [
          "receiver",
          "port",
          "communityString"
        ],
        "properties": {
          "receiver": {
            "description": "Full DNS name or IP address of the SNMP server.",
            "type": "string"
          },
          "port": {
            "description": "Port on the SNMP server.",
            "type": "integer",
            "format": "int32"
          },
          "communityString": {
            "description": "SNMP community string.",
            "type": "string"
          }
        }
      },
      "GeneralOptionsSyslogServerModel": {
        "description": "Syslog server settings.",
        "type": "object",
        "required": [
          "serverName"
        ],
        "properties": {
          "serverName": {
            "description": "Full DNS name or IP address of the syslog server.",
            "type": "string"
          },
          "port": {
            "description": "Port on the syslog server used by the specified protocol.",
            "type": "integer",
            "format": "int32"
          },
          "transportProtocol": {
            "$ref": "#/components/schemas/ESyslogServerProtocol"
          },
          "certificateThumbprint": {
            "description": "Certificate thumbprint used to verify the syslog server identity.",
            "type": "string"
          }
        }
      },
      "ESyslogServerProtocol": {
        "description": "Transport mode.",
        "type": "string",
        "enum": [
          "Udp",
          "Tcp",
          "Tls"
        ]
      },
      "ScaleOutExtentMaintenanceSpec": {
        "type": "object",
        "required": [
          "repositoryIds"
        ],
        "properties": {
          "repositoryIds": {
            "description": "Array of repository IDs added as scale-out backup repository extents.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ConnectionCertificateModel": {
        "type": "object",
        "properties": {
          "fingerprint": {
            "description": "SSH key fingerprint used to verify the server identity.",
            "type": "string"
          },
          "certificate": {
            "$ref": "#/components/schemas/CertificateModel"
          }
        }
      },
      "EEntireVMRestoreModeType": {
        "description": "Restore mode.",
        "type": "string",
        "enum": [
          "OriginalLocation",
          "Customized"
        ]
      },
      "EntireViVMRestoreSpec": {
        "required": [
          "restorePointId",
          "type"
        ],
        "type": "object",
        "properties": {
          "restorePointId": {
            "description": "ID of the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EEntireVMRestoreModeType"
          },
          "restoreProxies": {
            "$ref": "#/components/schemas/RestoreProxySpec"
          },
          "secureRestore": {
            "$ref": "#/components/schemas/SecureRestoreSpec"
          },
          "powerUp": {
            "description": "If `true`, Veeam Backup & Replication powers on the restored VM on the target host.",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason for restoring the VM.",
            "type": "string"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/EntireViVMOriginalLocationRestoreSpec"
          },
          {
            "$ref": "#/components/schemas/EntireViVMCustomizedRestoreSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "OriginalLocation": "#/components/schemas/EntireViVMOriginalLocationRestoreSpec",
            "Customized": "#/components/schemas/EntireViVMCustomizedRestoreSpec"
          }
        }
      },
      "EntireViVMOriginalLocationRestoreSpec": {
        "description": "Restore to the original location with initial settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntireViVMRestoreSpec"
          },
          {
            "type": "object",
            "properties": {
              "quickRollback": {
                "description": "If `true`, Veeam Backup & Replication performs incremental restore.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "EntireViVMCustomizedRestoreSpec": {
        "description": "Restore to a new location or with different settings. To get the inventory objects, use the [Get All Servers](#tag/Inventory-Browser/operation/GetAllInventoryHosts) and [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) requests.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntireViVMRestoreSpec"
          },
          {
            "type": "object",
            "properties": {
              "destinationHost": {
                "$ref": "#/components/schemas/InventoryObjectModel"
              },
              "resourcePool": {
                "$ref": "#/components/schemas/InventoryObjectModel"
              },
              "datastore": {
                "$ref": "#/components/schemas/RestoreTargetDatastoresSpec"
              },
              "folder": {
                "$ref": "#/components/schemas/RestoreTargetFolderSpec"
              },
              "network": {
                "$ref": "#/components/schemas/RestoreTargetNetworkSpec"
              }
            }
          }
        ]
      },
      "RestoreProxySpec": {
        "description": "Backup proxies for VM data transport.",
        "required": [
          "autoSelectEnabled"
        ],
        "type": "object",
        "properties": {
          "autoSelectEnabled": {
            "description": "If `true`, Veeam Backup & Replication detects backup proxies that are connected to the source datastore and automatically assigns optimal proxy resources for processing VM data.",
            "type": "boolean"
          },
          "proxyIds": {
            "description": "Array of backup proxy IDs.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "SecureRestoreSpec": {
        "description": "Secure restore settings.",
        "required": [
          "antivirusScanEnabled"
        ],
        "type": "object",
        "properties": {
          "antivirusScanEnabled": {
            "description": "If `true`, Veeam Backup & Replication scans machine data with antivirus software before restoring the machine to the production environment.",
            "type": "boolean"
          },
          "virusDetectionAction": {
            "$ref": "#/components/schemas/EVirusDetectionAction"
          },
          "entireVolumeScanEnabled": {
            "description": "If `true`, the antivirus continues machine scan after the first malware is found.",
            "type": "boolean"
          }
        }
      },
      "EVirusDetectionAction": {
        "description": "Action that Veeam Backup & Replication takes if the antivirus software finds a threat.",
        "type": "string",
        "enum": [
          "DisableNetwork",
          "AbortRecovery",
          "Ignore"
        ]
      },
      "RestoreTargetDatastoresSpec": {
        "description": "Destination datastore.",
        "type": "object",
        "properties": {
          "configurationFileDatastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "diskMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestoreTargetDatastoreSpec"
            }
          }
        }
      },
      "RestoreTargetDatastoreSpec": {
        "description": "Destination datastore.",
        "type": "object",
        "required": [
          "diskName",
          "datastore"
        ],
        "properties": {
          "diskName": {
            "type": "string"
          },
          "datastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "diskType": {
            "$ref": "#/components/schemas/EDiskCreationMode"
          }
        }
      },
      "EDiskCreationMode": {
        "description": "Disk provisioning type for the recovered VM.",
        "x-enumDescriptions": {
          "Source": "Same as source.",
          "Thick": "Thick provision lazy zeroed.",
          "Thin": "Thin provision.",
          "ThickEagerZeroed": "Thick provision eager zeroed."
        },
        "type": "string",
        "enum": [
          "Source",
          "Thick",
          "Thin",
          "ThickEagerZeroed"
        ]
      },
      "RestoreTargetFolderSpec": {
        "description": "Destination VM folder.",
        "required": [
          "folder"
        ],
        "type": "object",
        "properties": {
          "vmName": {
            "description": "VM name.",
            "type": "string"
          },
          "folder": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "restoreVmTags": {
            "description": "If `true`, Veeam Backup & Replication restores tags that were assigned to the original VMs, and assigns them to the restored VMs.",
            "type": "boolean"
          }
        }
      },
      "RestoreTargetNetworkSpec": {
        "description": "Network that the restored VM will be connected to. To get a network object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
        "type": "object",
        "required": [
          "network"
        ],
        "properties": {
          "network": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "disconnected": {
            "description": "If `true`, the restored VMs is not connected to any virtual network.",
            "type": "boolean"
          }
        }
      },
      "EntireCloudDirectorVMRestoreSpec": {
        "required": [
          "restorePointId",
          "type"
        ],
        "type": "object",
        "properties": {
          "restorePointId": {
            "description": "ID of the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EEntireVMRestoreModeType"
          },
          "restoreProxies": {
            "$ref": "#/components/schemas/RestoreProxySpec"
          },
          "secureRestore": {
            "$ref": "#/components/schemas/SecureRestoreSpec"
          },
          "powerUp": {
            "description": "If `true`, Veeam Backup & Replication powers on the restored VM on the target host.",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason for restoring the VM.",
            "type": "string"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/EntireCloudDirectorVMOriginalLocationRestoreSpec"
          },
          {
            "$ref": "#/components/schemas/EntireCloudDirectorVMCustomizedRestoreSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "OriginalLocation": "#/components/schemas/EntireCloudDirectorVMOriginalLocationRestoreSpec",
            "Customized": "#/components/schemas/EntireCloudDirectorVMCustomizedRestoreSpec"
          }
        }
      },
      "EntireCloudDirectorVMOriginalLocationRestoreSpec": {
        "description": "Restore to the original location with initial settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntireCloudDirectorVMRestoreSpec"
          },
          {
            "type": "object",
            "properties": {
              "quickRollback": {
                "description": "If `true`, Veeam Backup & Replication performs incremental restore.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "EntireCloudDirectorVMCustomizedRestoreSpec": {
        "description": "Restore to a new location or with different settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntireCloudDirectorVMRestoreSpec"
          },
          {
            "type": "object",
            "required": [
              "location"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/EntireCloudDirectorVMRestoreLocationModel"
              },
              "network": {
                "$ref": "#/components/schemas/RestoreTargetNetworkSpec"
              },
              "datastore": {
                "$ref": "#/components/schemas/CloudDirectorRestoreTargetDatastoreSpec"
              }
            }
          }
        ]
      },
      "EntireCloudDirectorVMRestoreLocationModel": {
        "description": "Target location settings. To get a vApp object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
        "type": "object",
        "required": [
          "newName",
          "vApp",
          "restoreVSphereVMTags"
        ],
        "properties": {
          "newName": {
            "description": "New VM name.",
            "type": "string"
          },
          "vApp": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "restoreVSphereVMTags": {
            "description": "If `true`, VMware vSphere tags will be restored for this VM.",
            "type": "boolean"
          }
        }
      },
      "CloudDirectorRestoreTargetDatastoreSpec": {
        "description": "Datastore and storage for the recovered VM. To get datastore and storage policy objects, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
        "type": "object",
        "required": [
          "datastore"
        ],
        "properties": {
          "datastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "storagePolicy": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "InstantViVMRecoverySpec": {
        "description": "Instant Recovery settings.",
        "required": [
          "restorePointId",
          "type",
          "secureRestore"
        ],
        "type": "object",
        "properties": {
          "restorePointId": {
            "description": "ID of the restore point.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EInstantVMRecoveryModeType"
          },
          "vmTagsRestoreEnabled": {
            "description": "If `true`, Veeam Backup & Replication restores tags that were assigned to the original VM, and assign them to the restored VM.",
            "type": "boolean"
          },
          "secureRestore": {
            "$ref": "#/components/schemas/SecureRestoreSpec"
          },
          "nicsEnabled": {
            "description": "If `true`, the restored VM is connected to the network.",
            "type": "boolean"
          },
          "powerUp": {
            "description": "If `true`, Veeam Backup & Replication powers on the restored VM on the target host.",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason for restoring the VM.",
            "type": "string"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/InstantViVMOriginalLocationRecoverySpec"
          },
          {
            "$ref": "#/components/schemas/InstantViVMCustomizedRecoverySpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "OriginalLocation": "#/components/schemas/InstantViVMOriginalLocationRecoverySpec",
            "Customized": "#/components/schemas/InstantViVMCustomizedRecoverySpec"
          }
        }
      },
      "EInstantVMRecoveryModeType": {
        "description": "Restore mode.",
        "type": "string",
        "enum": [
          "OriginalLocation",
          "Customized"
        ]
      },
      "InstantViVMOriginalLocationRecoverySpec": {
        "description": "Instant Recovery to the original location with initial settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/InstantViVMRecoverySpec"
          },
          {
            "type": "object"
          }
        ]
      },
      "InstantViVMCustomizedRecoverySpec": {
        "description": "Instant Recovery to a new location or with different settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/InstantViVMRecoverySpec"
          },
          {
            "type": "object",
            "required": [
              "datastore"
            ],
            "properties": {
              "destination": {
                "$ref": "#/components/schemas/InstantViVMCustomizedRecoveryDestinationSpec"
              },
              "datastore": {
                "$ref": "#/components/schemas/InstantViVMCustomizedRecoveryDatastoreSpec"
              },
              "overwrite": {
                "description": "If `true`, Veeam Backup & Replication overwrites the existing VM that has the same name.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "InstantViVMCustomizedRecoveryDestinationSpec": {
        "description": "Destination where the recovered VM resides. To get objects of the destination host, folder and resource pool, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
        "type": "object",
        "properties": {
          "restoredVmName": {
            "description": "Restored VM name.",
            "type": "string"
          },
          "destinationHost": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "folder": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "resourcePool": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "biosUuidPolicy": {
            "$ref": "#/components/schemas/EInstantViVmRecoveryBiosUuidPolicyType"
          }
        }
      },
      "EInstantViVmRecoveryBiosUuidPolicyType": {
        "description": "BIOS UUID policy for the restored VM.",
        "type": "string",
        "enum": [
          "preserve",
          "generateNew"
        ]
      },
      "InstantViVMCustomizedRecoveryDatastoreSpec": {
        "description": "Datastore that keeps redo logs with changes that take place while a VM is running from a backup. To get a datastore object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
        "required": [
          "redirectEnabled"
        ],
        "type": "object",
        "properties": {
          "redirectEnabled": {
            "description": "If `true`, redo logs are redirected to `cacheDatastore`.",
            "type": "boolean"
          },
          "cacheDatastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          }
        }
      },
      "InstantViVMRecoveryMount": {
        "description": "VM mount point.",
        "required": [
          "id",
          "sessionId",
          "state",
          "spec",
          "vmName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Mount point ID.",
            "type": "string",
            "format": "uuid"
          },
          "sessionId": {
            "description": "Restore session ID. Use the ID to track the progress. For details, see [Get Session](#tag/Sessions/operation/GetSession).",
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/EInstantRecoveryMountState"
          },
          "spec": {
            "$ref": "#/components/schemas/InstantViVMRecoverySpec"
          },
          "vmName": {
            "description": "Name of the recovered VM.",
            "type": "string"
          },
          "errorMessage": {
            "description": "Error message.",
            "type": "string"
          }
        }
      },
      "InstantViVMRecoveryMountsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of mount points to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of mount points to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EInstantViVMRecoveryMountsFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters mount points by the `nameFilter` pattern. The pattern can match any mount parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EInstantRecoveryMountState"
          }
        }
      },
      "EInstantViVMRecoveryMountsFiltersOrderColumn": {
        "description": "Sorts mount points by one of the mount point parameters.",
        "type": "string",
        "enum": [
          "state",
          "name"
        ]
      },
      "InstantViVMRecoveryMountsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of VM mount points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstantViVMRecoveryMount"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ViVMQuickMigrationSpec": {
        "required": [
          "destinationHost"
        ],
        "type": "object",
        "properties": {
          "destinationHost": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "resourcePool": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "folder": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "datastore": {
            "$ref": "#/components/schemas/InventoryObjectModel"
          },
          "sourceProxyIds": {
            "description": "Array of source backup proxies.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "targetProxyIds": {
            "description": "Array of target backup proxies.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "VeeamQMEnabled": {
            "description": "If `true`, the Veeam Quick Migration mechanism is used. Otherwise, Veeam Backup & Replication will use VMware vMotion for migration.",
            "type": "boolean"
          },
          "DeleteSourceVmsFiles": {
            "description": "If `true`, Veeam Backup & Replication will delete source VM files upon successful migration.",
            "type": "boolean"
          }
        }
      },
      "EPublishBackupContentModeType": {
        "description": "Disk publishing mount mode.<ul><li>ISCSITarget — Automatic iSCSI mode. Use this mode if you want Veeam Backup & Replication to automatically configure the iSCSI initiator, start an iSCSI session and allow the specified target Microsoft Windows server to access disk content.</li> <li>ISCSIWindowsMount — Manual iSCSI mode. Use this mode if you want to manually start an iSCSI session from any Microsoft Windows server that has access to the iSCSI target server (mount server).</li> <li>FUSELinuxMount — FUSE mode. Use this mode to allow the specified target Linux or Unix server to access disk content.</li></ul>",
        "type": "string",
        "enum": [
          "ISCSITarget",
          "ISCSIWindowsMount",
          "FUSELinuxMount"
        ]
      },
      "PublishBackupContentSpec": {
        "type": "object",
        "required": [
          "restorePointId",
          "type"
        ],
        "properties": {
          "restorePointId": {
            "description": "Restore point ID. You can use restore points from backups and snapshot replicas.",
            "type": "string",
            "format": "uuid"
          },
          "diskNames": {
            "description": "Array of disk names.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/EPublishBackupContentModeType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ISCSITargetPublishContentSpec"
          },
          {
            "$ref": "#/components/schemas/ISCSIWindowsMountSpec"
          },
          {
            "$ref": "#/components/schemas/FUSELinuxMountSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "ISCSITarget": "#/components/schemas/ISCSITargetPublishContentSpec",
            "ISCSIWindowsMount": "#/components/schemas/ISCSIWindowsMountSpec",
            "FUSELinuxMount": "#/components/schemas/FUSELinuxMountSpec"
          }
        }
      },
      "ISCSITargetPublishContentSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PublishBackupContentSpec"
          },
          {
            "type": "object",
            "required": [
              "allowedIps"
            ],
            "properties": {
              "allowedIps": {
                "description": "Array of IP addresses of target servers that are allowed to access the iSCSI target server (mount server).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "mountHostId": {
                "description": "Mount server ID.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "ISCSIWindowsMountSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PublishBackupContentSpec"
          },
          {
            "type": "object",
            "required": [
              "targetServerName",
              "targetServerCredentialsId"
            ],
            "properties": {
              "targetServerName": {
                "description": "DNS name or IP address of the target server.",
                "type": "string"
              },
              "targetServerCredentialsId": {
                "description": "Credentials ID of the target server.",
                "type": "string",
                "format": "uuid"
              },
              "mountHostId": {
                "description": "Mount server ID.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "FUSELinuxMountSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PublishBackupContentSpec"
          },
          {
            "type": "object",
            "required": [
              "targetServerName",
              "targetServerCredentialsId"
            ],
            "properties": {
              "targetServerName": {
                "description": "DNS name or IP address of the target server.",
                "type": "string"
              },
              "targetServerCredentialsId": {
                "description": "Credentials ID of the target server.",
                "type": "string",
                "format": "uuid"
              },
              "mountHostId": {
                "description": "Mount server ID.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "BackupContentMountModel": {
        "description": "Details about the mount point.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Mount point ID.",
            "type": "string",
            "format": "uuid"
          },
          "initiatorName": {
            "description": "Account used to publish the disks.",
            "type": "string"
          },
          "backupId": {
            "description": "Backup ID.",
            "type": "string",
            "format": "uuid"
          },
          "backupName": {
            "description": "Backup name.",
            "type": "string"
          },
          "restorePointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "restorePointName": {
            "description": "Restore point name.",
            "type": "string"
          },
          "mountState": {
            "$ref": "#/components/schemas/EBackupContentMountState"
          },
          "info": {
            "$ref": "#/components/schemas/BackupContentPublicationInfo"
          }
        }
      },
      "BackupContentPublicationInfo": {
        "description": "Details about the publishing operation.",
        "type": "object",
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/EBackupContentDiskPublishMode"
          },
          "serverPort": {
            "description": "Port used by the mount point.",
            "type": "integer"
          },
          "serverIps": {
            "description": "Array of target server IP addresses.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disks": {
            "description": "Array of objects containing details about the published disks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupContentDiskPublicationInfo"
            }
          }
        }
      },
      "BackupContentDiskPublicationInfo": {
        "description": "Details about a published disk.",
        "type": "object",
        "properties": {
          "diskId": {
            "description": "Disk ID.",
            "type": "string"
          },
          "diskName": {
            "description": "The path of the published disk.",
            "type": "string"
          },
          "accessLink": {
            "description": "iSCSI Qualified Name (IQN) of the disk. Only available for the iSCSI mount mode.",
            "type": "string"
          },
          "mountPoints": {
            "description": "Array of mount point paths.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EBackupContentMountState": {
        "description": "Mount state.",
        "enum": [
          "Mounted",
          "MountFailed",
          "Mounting",
          "Unmounted",
          "UnmountFailed",
          "Unmounting"
        ],
        "type": "string"
      },
      "EBackupContentDiskPublishMode": {
        "description": "Disk publishing mount mode.",
        "enum": [
          "Fuse",
          "ISCSI"
        ],
        "type": "string"
      },
      "BackupContentMountsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of mount points to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of mount points to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EBackupContentMountsFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EBackupContentMountState"
          },
          "modeFilter": {
            "$ref": "#/components/schemas/EBackupContentDiskPublishMode"
          }
        }
      },
      "EBackupContentMountsFiltersOrderColumn": {
        "description": "Sorts mount points by one of the mount point parameters.",
        "type": "string",
        "enum": [
          "state"
        ]
      },
      "BackupContentMountsResult": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of objects containing details about the mount points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupContentMountModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ComputerRecoveryTokenSpec": {
        "required": [
          "backupIds",
          "expirationDate"
        ],
        "type": "object",
        "properties": {
          "backupIds": {
            "description": "Array of backup IDs whose data you want to restore with the recovery token.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "expirationDate": {
            "description": "Date and time when the access token expires.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ComputerRecoveryTokenFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EComputerRecoveryTokenFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "expirationDateBefore": {
            "type": "string",
            "format": "date-time"
          },
          "expirationDateAfter": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EComputerRecoveryTokenFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "ExpirationDate"
        ]
      },
      "ComputerRecoveryTokenResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of recovery tokens.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComputerRecoveryTokenModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ComputerRecoveryTokenModel": {
        "required": [
          "id",
          "name",
          "expirationDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the recovery token.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Friendly name of the recovery token.",
            "type": "string"
          },
          "recoveryToken": {
            "description": "Recovery token.",
            "type": "string"
          },
          "expirationDate": {
            "description": "Date and time when the recovery token expires.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloudDeviceCodeSpec": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureComputeCloudDeviceCodeSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AzureCompute": "#/components/schemas/AzureComputeCloudDeviceCodeSpec"
          }
        }
      },
      "AzureComputeCloudDeviceCodeSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudDeviceCodeSpec"
          },
          {
            "type": "object",
            "required": [
              "region"
            ],
            "properties": {
              "region": {
                "$ref": "#/components/schemas/EAzureRegionType"
              }
            }
          }
        ]
      },
      "CloudDeviceCodeModel": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureComputeCloudDeviceCodeModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AzureCompute": "#/components/schemas/AzureComputeCloudDeviceCodeModel"
          }
        }
      },
      "AzureComputeCloudDeviceCodeModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudDeviceCodeModel"
          },
          {
            "type": "object",
            "required": [
              "url",
              "verificationCode",
              "expirationTime"
            ],
            "properties": {
              "url": {
                "description": "Verification URI.",
                "type": "string"
              },
              "verificationCode": {
                "description": "Verification code.",
                "type": "string"
              },
              "expirationTime": {
                "description": "Expiration date and time of the verification code. By default, the code is valid for 15 minutes.",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "CloudNativeApplicationModel": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ECloudCredentialsType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AzureComputeCloudNativeApplicationModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AzureCompute": "#/components/schemas/AzureComputeCloudNativeApplicationModel"
          }
        }
      },
      "AzureComputeCloudNativeApplicationModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CloudNativeApplicationModel"
          },
          {
            "type": "object",
            "required": [
              "applicationId",
              "secret",
              "tenantId"
            ],
            "properties": {
              "applicationId": {
                "description": "Client ID assigned to the Microsoft Entra ID application.",
                "type": "string"
              },
              "secret": {
                "description": "Client secret assigned to the Microsoft Entra ID application.",
                "type": "string"
              },
              "tenantId": {
                "description": "ID of a tenant where the Microsoft Entra ID application is registered.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EFlrType": {
        "description": "Restore type.",
        "type": "string",
        "enum": [
          "Windows",
          "Linux"
        ]
      },
      "FlrAutoUnmountModel": {
        "description": "Settings for automatic unmount of the file system.",
        "type": "object",
        "required": [
          "isEnabled"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, the file system will be unmounted and the FileLevelRestore session will be stopped automaticaly after the specified time period of inactivity.",
            "type": "boolean"
          },
          "noActivityPeriodInMinutes": {
            "description": "Time period in munutes.",
            "type": "integer",
            "format": "int32",
            "default": 30
          }
        }
      },
      "FlrMountSpec": {
        "description": "File restore settings.",
        "type": "object",
        "required": [
          "restorePointId",
          "type",
          "autoUnmount"
        ],
        "properties": {
          "restorePointId": {
            "description": "ID of the restore point that you want to restore files from.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EFlrType"
          },
          "autoUnmount": {
            "$ref": "#/components/schemas/FlrAutoUnmountModel"
          },
          "reason": {
            "description": "Reason for restoring files.",
            "type": "string"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/WindowsFlrMountSpec"
          },
          {
            "$ref": "#/components/schemas/LinuxFlrMountSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Windows": "#/components/schemas/WindowsFlrMountSpec",
            "Linux": "#/components/schemas/LinuxFlrMountSpec"
          }
        }
      },
      "WindowsFlrMountSpec": {
        "description": "Settings for restore from Microsoft Windows file systems.",
        "allOf": [
          {
            "$ref": "#/components/schemas/FlrMountSpec"
          },
          {
            "type": "object",
            "properties": {
              "credentialsId": {
                "description": "ID of the credentials record used to connect to the source machine. The credentials will be used to compare files from backup and the source machine.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "LinuxFlrMountSpec": {
        "description": "Restore settings for Linux file systems.",
        "allOf": [
          {
            "$ref": "#/components/schemas/FlrMountSpec"
          },
          {
            "type": "object",
            "properties": {
              "helperHost": {
                "$ref": "#/components/schemas/LinuxFlrHelperHostModel"
              },
              "helperAppliance": {
                "$ref": "#/components/schemas/LinuxFlrHelperApplianceSpec"
              },
              "originalHost": {
                "$ref": "#/components/schemas/LinuxFlrOriginalHostSpec"
              }
            }
          }
        ]
      },
      "LinuxFlrHelperHostModel": {
        "description": "Helper host settings. Use this option if you want to mount the file system to a Linux server added to the backup infrastructure.",
        "required": [
          "hostId"
        ],
        "type": "object",
        "properties": {
          "hostId": {
            "description": "ID of a Linux server added to the backup infrastructure.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LinuxFlrHelperApplianceSpec": {
        "description": "Helper appliance settings. Use this option if you want to mount the file system to a temporary helper appliance.",
        "type": "object",
        "properties": {
          "platformResourceSettings": {
            "$ref": "#/components/schemas/LinuxFlrHelperApplianceResourceModel"
          },
          "networkSettings": {
            "$ref": "#/components/schemas/IpSettingsModel"
          },
          "ftpServerEnabled": {
            "description": "If `true`, FTP access to the restored file system is enabled.",
            "type": "boolean"
          },
          "restoreFromNSS": {
            "description": "If `true`, the file system of the original machine is Novell Storage Services (NSS).",
            "type": "boolean"
          }
        }
      },
      "LinuxFlrHelperApplianceResourceModel": {
        "description": "Helper appliance location.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EFlrPlatformType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/VmwareLinuxFlrHelperApplianceResourceModel"
          },
          {
            "$ref": "#/components/schemas/HyperVLinuxFlrHelperApplianceResourceModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "VMware": "#/components/schemas/VmwareLinuxFlrHelperApplianceResourceModel",
            "HyperV": "#/components/schemas/HyperVLinuxFlrHelperApplianceResourceModel"
          }
        }
      },
      "LinuxFlrOriginalHostSpec": {
        "description": "Original host settings. Use this option if you want to mount the file system to the original machine.",
        "type": "object",
        "properties": {
          "credentialsId": {
            "description": "ID of the credentials record that will be used for SSH connection to the original machine. Required if valid credentials are not found in the job that created the backup (or replica).",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EFlrPlatformType": {
        "description": "Platform type.",
        "type": "string",
        "enum": [
          "VMware",
          "HyperV",
          "Agent"
        ]
      },
      "VmwareLinuxFlrHelperApplianceResourceModel": {
        "description": "VMware vSphere settings&#58; ESXi host where the helper appliance must be registered, resouce pool the helper appliance must be placed, and network the helper appliance must be connected to. To get the inventory objects, use the [Get All Servers](#tag/Inventory-Browser/operation/GetAllInventoryHosts) and [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) requests.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LinuxFlrHelperApplianceResourceModel"
          },
          {
            "type": "object",
            "required": [
              "host",
              "resourcePool",
              "network"
            ],
            "properties": {
              "host": {
                "$ref": "#/components/schemas/InventoryObjectModel"
              },
              "resourcePool": {
                "$ref": "#/components/schemas/InventoryObjectModel"
              },
              "network": {
                "$ref": "#/components/schemas/InventoryObjectModel"
              }
            }
          }
        ]
      },
      "HyperVLinuxFlrHelperApplianceResourceModel": {
        "description": "Microsoft Hyper-V settings.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LinuxFlrHelperApplianceResourceModel"
          },
          {
            "type": "object",
            "required": [
              "host",
              "network",
              "vlanId"
            ],
            "properties": {
              "host": {
                "description": "Microsoft Hyper-V host where the helper appliance must be registered.",
                "type": "string"
              },
              "network": {
                "description": "Network that the helper appliance must be connected to.",
                "type": "string"
              },
              "vlanId": {
                "description": "VLAN ID of the network where the helper appliance must reside.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "IpSettingsModel": {
        "description": "IP addressing settings for the helper appliance and DNS server.",
        "type": "object",
        "properties": {
          "IPv4Settings": {
            "$ref": "#/components/schemas/IPv4SettingsModel"
          },
          "IPv6Settings": {
            "$ref": "#/components/schemas/IPv6SettingsModel"
          }
        }
      },
      "IPv4SettingsModel": {
        "description": "IPv4 settings.",
        "type": "object",
        "required": [
          "ipAddress"
        ],
        "properties": {
          "ipAddress": {
            "description": "Helper appliance IP address.",
            "type": "string"
          },
          "subnetMask": {
            "description": "Mask of a subnet where the helper appliance must reside.",
            "type": "string"
          },
          "defaultGateway": {
            "description": "Default gateway address.",
            "type": "string"
          },
          "preferredDNSServer": {
            "description": "Preferred DNS server address.",
            "type": "string"
          },
          "alternateDNSServer": {
            "description": "Alternate DNS server address.",
            "type": "string"
          }
        }
      },
      "IPv6SettingsModel": {
        "description": "IPv6 settings.",
        "type": "object",
        "required": [
          "ipAddress"
        ],
        "properties": {
          "ipAddress": {
            "description": "Helper appliance IP address.",
            "type": "string"
          },
          "prefixLength": {
            "description": "Subnet prefix length.",
            "type": "integer",
            "format": "int32"
          },
          "defaultGateway": {
            "description": "Default gateway address.",
            "type": "string"
          },
          "preferredDNSServer": {
            "description": "Preferred DNS server address.",
            "type": "string"
          },
          "alternateDNSServer": {
            "description": "Alternate DNS server address.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantRestoreDeviceCodeSpec": {
        "type": "object",
        "required": [
          "sessionId"
        ],
        "properties": {
          "sessionId": {
            "description": "Mount session ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIdTenantRestoreDeviceCodeModel": {
        "type": "object",
        "required": [
          "userCode",
          "deviceCode",
          "verificationUrl"
        ],
        "properties": {
          "userCode": {
            "description": "User code, that you must specify in the []() request to obtain credentials that are required restore Microsoft Entra ID tenant.",
            "type": "string"
          },
          "deviceCode": {
            "description": "Device code.",
            "type": "string"
          },
          "verificationUrl": {
            "description": "Verification URL (redirect URI).",
            "type": "string"
          },
          "message": {
            "description": "Message text.",
            "type": "string"
          },
          "clientId": {
            "description": "Application (client) ID.",
            "type": "string"
          },
          "expiresOn": {
            "description": "Expiration date and time of the verification code.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntraIdTenantRestoreDeviceCodeStateSpec": {
        "type": "object",
        "required": [
          "sessionId",
          "userCode"
        ],
        "properties": {
          "sessionId": {
            "description": "Mount session ID.",
            "type": "string",
            "format": "uuid"
          },
          "userCode": {
            "description": "User code. To get the code, use the [Get Microsoft Entra ID User Code for Restore](#tag/Restore/operation/GetEntraIdTenantRestoreDeviceCode) request.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantRestoreDeviceCodeStateModel": {
        "type": "object",
        "properties": {
          "credentialsId": {
            "description": "Credentials ID required for delegated restore of Microsoft Entra ID items.",
            "type": "string",
            "format": "uuid"
          },
          "errorMessage": {
            "description": "Error message.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/EEntraIdTenantRestoreDeviceCodeStatus"
          },
          "username": {
            "description": "User name.",
            "type": "string"
          }
        }
      },
      "EEntraIdTenantRestoreDeviceCodeStatus": {
        "description": "Request status.",
        "enum": [
          "Pending",
          "Success",
          "Failure"
        ],
        "type": "string"
      },
      "EntraIdTenantStartRestoreSpec": {
        "required": [
          "backupId"
        ],
        "type": "object",
        "properties": {
          "backupId": {
            "description": "ID of a Microsoft Entra ID tenant backup.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIdTenantBrowseMountResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of mount points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantBrowseMountModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EntraIdTenantBrowseMountModel": {
        "required": [
          "sessionId"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "description": "Mount session ID.",
            "type": "string",
            "format": "uuid"
          },
          "sourceProperties": {
            "$ref": "#/components/schemas/EntraIdTenantBrowseSourceProperties"
          }
        }
      },
      "EntraIdTenantGeneratePasswordSpec": {
        "type": "object",
        "required": [
          "passwordsCount"
        ],
        "properties": {
          "passwordsCount": {
            "description": "Number of passwords.",
            "type": "integer"
          }
        }
      },
      "EntraIdTenantGeneratedPasswordsModel": {
        "type": "object",
        "properties": {
          "passwords": {
            "description": "Array of user passwords.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntraIdTenantBrowseSpec": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EEntraIdTenantItemType"
          },
          "skip": {
            "description": "Number of items to skip.",
            "type": "integer"
          },
          "limit": {
            "description": "Maximum number of items to return.",
            "type": "integer"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantUserBrowseSpec"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantGroupBrowseSpec"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantAdminUnitBrowseSpec"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantRoleBrowseSpec"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantApplicationBrowseSpec"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantConditionalAccessPolicyBrowseSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "User": "#/components/schemas/EntraIdTenantUserBrowseSpec",
            "Group": "#/components/schemas/EntraIdTenantGroupBrowseSpec",
            "AdminUnit": "#/components/schemas/EntraIdTenantAdminUnitBrowseSpec",
            "Role": "#/components/schemas/EntraIdTenantRoleBrowseSpec",
            "Application": "#/components/schemas/EntraIdTenantApplicationBrowseSpec",
            "ConditionalAccessPolicy": "#/components/schemas/EntraIdTenantConditionalAccessPolicyBrowseSpec"
          }
        }
      },
      "EEntraIdTenantItemType": {
        "description": "Item type.",
        "type": "string",
        "enum": [
          "User",
          "Group",
          "AdminUnit",
          "Role",
          "Application",
          "ConditionalAccessPolicy"
        ]
      },
      "EntraIdTenantItemTypeSpec": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EEntraIdTenantItemType"
          }
        }
      },
      "EntraIdTenantUserBrowseSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
          },
          {
            "type": "object",
            "properties": {
              "filter": {
                "$ref": "#/components/schemas/EntraIdTenantUserFilterBrowseSpec"
              },
              "sorting": {
                "$ref": "#/components/schemas/EntraIdTenantUserSortingBrowseSpec"
              }
            }
          }
        ]
      },
      "EntraIdTenantUserFilterBrowseSpec": {
        "description": "Filtering options.",
        "type": "object",
        "properties": {
          "displayName": {
            "description": "User display name.",
            "type": "string"
          },
          "mailAddress": {
            "description": "User email address.",
            "type": "string"
          },
          "userName": {
            "description": "User principal name.",
            "type": "string"
          },
          "userType": {
            "description": "User type.",
            "type": "string"
          },
          "employeeType": {
            "description": "Employee type.",
            "type": "string"
          },
          "accountEnabled": {
            "description": "If `true`, the user account is enabled.",
            "type": "boolean"
          },
          "companyName": {
            "description": "Company name.",
            "type": "string"
          },
          "creationType": {
            "description": "Creation type.",
            "type": "string"
          },
          "department": {
            "description": "Company department.",
            "type": "string"
          },
          "country": {
            "description": "Country or region.",
            "type": "string"
          },
          "jobTitle": {
            "description": "Job title.",
            "type": "string"
          },
          "officeLocation": {
            "description": "Office location.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantUserSortingBrowseSpec": {
        "description": "Sorting options.",
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/EEntraIdTenantUserSortingProperty"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "EEntraIdTenantUserSortingProperty": {
        "description": "Sorting property.",
        "enum": [
          "displayName",
          "mailAddress",
          "username",
          "userType",
          "employeeType",
          "accountEnabled",
          "companyName",
          "creationType",
          "department",
          "country",
          "jobTitle",
          "officeLocation",
          "objectId",
          "lastRestorePoint"
        ],
        "type": "string"
      },
      "EntraIdTenantGroupBrowseSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
          },
          {
            "type": "object",
            "properties": {
              "filter": {
                "$ref": "#/components/schemas/EntraIdTenantGroupFilterBrowseSpec"
              },
              "sorting": {
                "$ref": "#/components/schemas/EntraIdTenantGroupSortingBrowseSpec"
              }
            }
          }
        ]
      },
      "EntraIdTenantGroupFilterBrowseSpec": {
        "description": "Filtering options.",
        "type": "object",
        "properties": {
          "displayName": {
            "description": "Group display name.",
            "type": "string"
          },
          "groupTypes": {
            "description": "Array of group types.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntraIdTenantGroupType"
            }
          },
          "membershipTypes": {
            "description": "Array of group membership types.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntraIdTenantGroupMembershipType"
            }
          }
        }
      },
      "EntraIdTenantGroupSortingBrowseSpec": {
        "description": "Sorting options.",
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/EEntraIdTenantGroupSortingProperty"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "EEntraIdTenantGroupSortingProperty": {
        "description": "Sorting property.",
        "enum": [
          "displayName",
          "description",
          "groupType",
          "membershipType",
          "visibility",
          "archived",
          "mailEnabled",
          "objectId",
          "lastRestorePoint"
        ],
        "type": "string"
      },
      "EntraIdTenantAdminUnitBrowseSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
          },
          {
            "type": "object",
            "properties": {
              "filter": {
                "$ref": "#/components/schemas/EntraIdTenantAdminUnitFilterBrowseSpec"
              },
              "sorting": {
                "$ref": "#/components/schemas/EntraIdTenantAdminUnitSortingBrowseSpec"
              }
            }
          }
        ]
      },
      "EntraIdTenantAdminUnitFilterBrowseSpec": {
        "description": "Filtering options.",
        "type": "object",
        "properties": {
          "displayName": {
            "description": "Administrative unit diplay name.",
            "type": "string"
          },
          "visibilities": {
            "description": "Array of visibility options.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntraIdTenantAdminUnitVisibilityType"
            }
          }
        }
      },
      "EntraIdTenantAdminUnitSortingBrowseSpec": {
        "description": "Sorting options.",
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/EEntraIdTenantAdminUnitSortingProperty"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "EEntraIdTenantAdminUnitSortingProperty": {
        "description": "Sorting property.",
        "enum": [
          "displayName",
          "description",
          "visibility",
          "objectId",
          "lastRestorePoint"
        ],
        "type": "string"
      },
      "EntraIdTenantRoleBrowseSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
          },
          {
            "type": "object",
            "properties": {
              "filter": {
                "$ref": "#/components/schemas/EntraIdTenantRoleFilterBrowseSpec"
              },
              "sorting": {
                "$ref": "#/components/schemas/EntraIdTenantRoleSortingBrowseSpec"
              }
            }
          }
        ]
      },
      "EntraIdTenantRoleFilterBrowseSpec": {
        "description": "Filtering options.",
        "type": "object",
        "properties": {
          "displayName": {
            "description": "Role display name.",
            "type": "string"
          },
          "isBuiltIn": {
            "description": "If `true`, the role is built-in.",
            "type": "boolean"
          },
          "isEnabled": {
            "description": "If `true`, the role is enabled.",
            "type": "boolean"
          }
        }
      },
      "EntraIdTenantRoleSortingBrowseSpec": {
        "description": "Sorting options.",
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/EEntraIdTenantRoleSortingProperty"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "EEntraIdTenantRoleSortingProperty": {
        "description": "Sorting property.",
        "enum": [
          "displayName",
          "isBuiltIn",
          "isEnabled",
          "description",
          "objectId",
          "lastRestorePoint"
        ],
        "type": "string"
      },
      "EntraIdTenantApplicationBrowseSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
          },
          {
            "type": "object",
            "properties": {
              "filter": {
                "$ref": "#/components/schemas/EntraIdTenantApplicationFilterBrowseSpec"
              },
              "sorting": {
                "$ref": "#/components/schemas/EntraIdTenantApplicationSortingBrowseSpec"
              }
            }
          }
        ]
      },
      "EntraIdTenantApplicationFilterBrowseSpec": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "includedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntraIdTenantApplicationType"
            }
          }
        }
      },
      "EntraIdTenantApplicationSortingBrowseSpec": {
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/EEntraIdTenantApplicationSortingProperty"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "EEntraIdTenantApplicationSortingProperty": {
        "enum": [
          "displayName",
          "enabled",
          "tags",
          "description",
          "applicationType",
          "objectId",
          "lastRestorePoint"
        ],
        "type": "string"
      },
      "EntraIdTenantConditionalAccessPolicyBrowseSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseSpec"
          },
          {
            "type": "object",
            "properties": {
              "filter": {
                "$ref": "#/components/schemas/EntraIdTenantConditionalAccessPolicyFilterBrowseSpec"
              },
              "sorting": {
                "$ref": "#/components/schemas/EntraIdTenantConditionalAccessPolicySortingBrowseSpec"
              }
            }
          }
        ]
      },
      "EntraIdTenantConditionalAccessPolicyFilterBrowseSpec": {
        "description": "Filtering options.",
        "type": "object",
        "properties": {
          "displayName": {
            "description": "Display name of the conditional access policy.",
            "type": "string"
          },
          "state": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EEntraIdTenantConditionalAccessPolicyState"
            }
          }
        }
      },
      "EntraIdTenantConditionalAccessPolicySortingBrowseSpec": {
        "description": "Sorting options.",
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/EEntraIdTenantConditionalAccessPolicySortingProperty"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "EEntraIdTenantConditionalAccessPolicySortingProperty": {
        "description": "Sorting property.",
        "enum": [
          "displayName",
          "objectId",
          "state",
          "lastRestorePoint"
        ],
        "type": "string"
      },
      "UploadingStreamSpec": {
        "type": "object",
        "properties": {
          "data": {
            "description": "CSV file that contains a list of IDs of Microsoft Entra ID items that you want to upload. For users, you can also specify a list of user principle names.",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "EntraIdTenantBrowseResult": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "type": "array",
            "description": "Array of Microsoft Entra ID items.",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EntraIdTenantBrowseModel": {
        "type": "object",
        "required": [
          "id",
          "restorePointId",
          "restorePointDate",
          "type"
        ],
        "properties": {
          "id": {
            "description": "Item ID.",
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "description": "Item display name.",
            "type": "string"
          },
          "restorePointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "restorePointDate": {
            "description": "Restore point date and time.",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/EEntraIdTenantItemType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantUserBrowseModel"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantGroupBrowseModel"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantAdminUnitBrowseModel"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantRoleBrowseModel"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantApplicationBrowseModel"
          },
          {
            "$ref": "#/components/schemas/EntraIdTenantConditionalAccessPolicyBrowseModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "User": "#/components/schemas/EntraIdTenantUserBrowseModel",
            "Group": "#/components/schemas/EntraIdTenantGroupBrowseModel",
            "AdminUnit": "#/components/schemas/EntraIdTenantAdminUnitBrowseModel",
            "Role": "#/components/schemas/EntraIdTenantRoleBrowseModel",
            "Application": "#/components/schemas/EntraIdTenantApplicationBrowseModel",
            "ConditionalAccessPolicy": "#/components/schemas/EntraIdTenantConditionalAccessPolicyBrowseModel"
          }
        }
      },
      "EntraIdTenantUserBrowseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
          },
          {
            "type": "object",
            "properties": {
              "mailAddress": {
                "description": "User email address.",
                "type": "string"
              },
              "userName": {
                "description": "User principal name.",
                "type": "string"
              },
              "userType": {
                "description": "User type.",
                "type": "string"
              },
              "employeeType": {
                "description": "Employee type.",
                "type": "string"
              },
              "accountEnabled": {
                "description": "If `true`, the user account is enabled.",
                "type": "boolean"
              },
              "companyName": {
                "description": "Company name.",
                "type": "string"
              },
              "creationType": {
                "description": "Creation type.",
                "type": "string"
              },
              "department": {
                "description": "Company department.",
                "type": "string"
              },
              "country": {
                "description": "Country or region.",
                "type": "string"
              },
              "jobTitle": {
                "description": "Job title.",
                "type": "string"
              },
              "officeLocation": {
                "description": "Office location.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EntraIdTenantGroupBrowseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
          },
          {
            "type": "object",
            "properties": {
              "groupType": {
                "$ref": "#/components/schemas/EEntraIdTenantGroupType"
              },
              "membershipType": {
                "$ref": "#/components/schemas/EEntraIdTenantGroupMembershipType"
              },
              "description": {
                "description": "Group description.",
                "type": "string"
              },
              "archived": {
                "description": "If `true`, the group is archived.",
                "type": "boolean"
              },
              "mailEnabled": {
                "description": "If `true`, the group is mail-enabled.",
                "type": "boolean"
              },
              "visibility": {
                "description": "Group visibility.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EEntraIdTenantGroupType": {
        "description": "Group type.",
        "type": "string",
        "enum": [
          "Microsoft365Group",
          "SecurityGroup",
          "MailEnabledSecurityGroup",
          "DistributionGroup"
        ]
      },
      "EEntraIdTenantGroupMembershipType": {
        "description": "Group membership type.",
        "type": "string",
        "enum": [
          "Assigned",
          "Dynamic"
        ]
      },
      "EntraIdTenantAdminUnitBrowseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
          },
          {
            "type": "object",
            "required": [
              "visibility"
            ],
            "properties": {
              "visibility": {
                "$ref": "#/components/schemas/EEntraIdTenantAdminUnitVisibilityType"
              },
              "description": {
                "description": "Administrative unit description.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EEntraIdTenantAdminUnitVisibilityType": {
        "description": "Administrative unit visibility.",
        "enum": [
          "Public",
          "Hidden"
        ],
        "type": "string"
      },
      "EntraIdTenantRoleBrowseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
          },
          {
            "type": "object",
            "required": [
              "isBuiltIn",
              "isEnabled"
            ],
            "properties": {
              "isBuiltIn": {
                "description": "If `true`, the role is built-in.",
                "type": "boolean"
              },
              "isEnabled": {
                "description": "If `true`, the role is enabled.",
                "type": "boolean"
              },
              "description": {
                "description": "Role description.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EntraIdTenantApplicationBrowseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
          },
          {
            "type": "object",
            "properties": {
              "applicationType": {
                "$ref": "#/components/schemas/EEntraIdTenantApplicationType"
              },
              "enabled": {
                "description": "If `true`, the application is enabled.",
                "type": "boolean"
              },
              "tags": {
                "description": "Array of application tags.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": {
                "description": "Application description.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EEntraIdTenantApplicationType": {
        "description": "Application type.",
        "enum": [
          "AppRegistration",
          "EnterpriseRegistration"
        ],
        "type": "string"
      },
      "EntraIdTenantConditionalAccessPolicyBrowseModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntraIdTenantBrowseModel"
          },
          {
            "type": "object",
            "properties": {
              "state": {
                "$ref": "#/components/schemas/EEntraIdTenantConditionalAccessPolicyState"
              }
            }
          }
        ]
      },
      "EEntraIdTenantConditionalAccessPolicyState": {
        "description": "State of the conditional access policy.",
        "enum": [
          "Enabled",
          "Disabled",
          "EnabledForReportingButNotEnforced"
        ],
        "type": "string"
      },
      "EntraIdTenantCheckProductionItemsSpec": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "credentialId": {
            "description": "ID of the credentials used to connect to the Microsoft Entra ID tenant.",
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "description": "Array of Microsoft Entra ID items that you want to check.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantProductionItemSpec"
            }
          }
        }
      },
      "EntraIdTenantProductionItemSpec": {
        "type": "object",
        "required": [
          "itemId",
          "restorePointId"
        ],
        "properties": {
          "itemId": {
            "description": "Item ID.",
            "type": "string"
          },
          "restorePointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIdTenantCheckProductionItemsModel": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "description": "Array of items that exist in production.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantProductionItemModel"
            }
          }
        }
      },
      "EntraIdTenantProductionItemModel": {
        "type": "object",
        "required": [
          "itemId",
          "displayName",
          "restorePointId",
          "restorePointDate"
        ],
        "properties": {
          "itemId": {
            "description": "Item ID.",
            "type": "string"
          },
          "displayName": {
            "description": "Item display name.",
            "type": "string"
          },
          "restorePointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "restorePointDate": {
            "description": "Date and time when the restore point was created.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntraIdTenantItemRestoreSpec": {
        "type": "object",
        "properties": {
          "credentialsId": {
            "description": "ID of the credentials record used for connection to the target tenant. The property is used only for delegated restore by restore operator that does not have access to presaved credentials. To obtain the credentials, use the following requests&#58; <ol><li>Obtain a user code&#58; [Get User Code for Microsoft Entra ID Item Restore](#tag/Restore/operation/GetEntraIdTenantRestoreDeviceCode).</li> <li>Use the user code to get the credentials ID&#58; [Get Credentials for Microsoft Entra ID Item Restore](#tag/Restore/operation/GetEntraIdTenantRestoreDeviceCodeState).</li></ol>",
            "type": "string",
            "format": "uuid"
          },
          "items": {
            "description": "Array of Microsoft Entra ID items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIDItemIncludeRestoreSpec"
            }
          },
          "skipRelationships": {
            "description": "If `true`, item relationships (such as assigned roles, group memberships, group ownerships, and admin unit memberships) are not restored.",
            "type": "boolean"
          },
          "skipRecycleBinRestore": {
            "description": "If `true`, all of the items are restored from the backup. <p>Otherwise, the items are restored from the Microsoft Entra ID recycle bin. If an item is not found in the recycle bin, it will not be restored.</p>",
            "type": "boolean"
          },
          "skipObjectsIfExist": {
            "description": "If `true`, only non-existing items are restored.",
            "type": "boolean"
          },
          "requestPasswordChangeOnLogon": {
            "description": "If `true`, restored users will be forced to change their passwords after their first logon.",
            "type": "boolean"
          },
          "defaultUserPassword": {
            "description": "Default password that will be set for all users.",
            "type": "string"
          },
          "usersPasswords": {
            "description": "Array of custom user passwords. To generate the passwords, use the [Generate Microsoft Entra ID User Passwords](#tag/BackupBrowsers/operation/GenerateEntraIdTenantPassword) request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantRestoreUserPasswordSpec"
            }
          },
          "reason": {
            "description": "Reason for restoring Microsoft Entra ID items.",
            "type": "string"
          }
        }
      },
      "EntraIDItemIncludeRestoreSpec": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string"
          },
          "restorePointId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIdTenantRestoreItemAttributesSpec": {
        "type": "object",
        "required": [
          "itemType",
          "restorePointId",
          "itemId"
        ],
        "properties": {
          "credentialsId": {
            "description": "ID of the credentials record used for connection to the target tenant. The property is used only for delegated restore by restore operator that does not have access to presaved credentials. To obtain the credentials, use the following requests&#58; <ol><li>Obtain a user code&#58; [Get User Code for Microsoft Entra ID Item Restore](#tag/Restore/operation/GetEntraIdTenantRestoreDeviceCode).</li> <li>Use the user code to get the credentials ID&#58; [Get Credentials for Microsoft Entra ID Item Restore](#tag/Restore/operation/GetEntraIdTenantRestoreDeviceCodeState).</li></ol>",
            "type": "string",
            "format": "uuid"
          },
          "restorePointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "itemId": {
            "description": "Item ID.",
            "type": "string"
          },
          "itemType": {
            "$ref": "#/components/schemas/EEntraIdTenantItemType"
          },
          "includedProperties": {
            "description": "Array of item properties that you want to restore.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantItemIncludedPropertyModel"
            }
          },
          "skipRelationships": {
            "description": "If `true`, item relationships (such as assigned roles, group memberships, group ownerships, and admin unit memberships) are not restored.",
            "type": "boolean"
          },
          "skipRecycleBinRestore": {
            "description": "If `true`, all of the items are restored from the backup. <p>Otherwise, the items are restored from the Microsoft Entra ID recycle bin. If an item is not found in the recycle bin, it will not be restored.</p>",
            "type": "boolean"
          },
          "skipObjectsIfExist": {
            "description": "If `true`, only non-existing items are restored.",
            "type": "boolean"
          },
          "requestPasswordChangeOnLogon": {
            "description": "If `true`, restored users will be forced to change their passwords after their first logon.",
            "type": "boolean"
          },
          "defaultUserPassword": {
            "description": "Default password that will be set for all users.",
            "type": "string"
          },
          "usersPasswords": {
            "description": "Array of custom user passwords. To generate the passwords, use the [Generate Microsoft Entra ID User Passwords](#tag/BackupBrowsers/operation/GenerateEntraIdTenantPassword) request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantRestoreUserPasswordSpec"
            }
          },
          "reason": {
            "description": "Reason for restoring Microsoft Entra ID items.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantItemIncludedPropertyModel": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "Property ID.",
            "type": "string"
          },
          "groupId": {
            "description": "Property group ID.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantRestoreUserPasswordSpec": {
        "type": "object",
        "required": [
          "userId",
          "password"
        ],
        "properties": {
          "userId": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "EntraIdTenantRestorePointsResult": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "description": "Array of restore points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantRestorePointModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EntraIdTenantRestorePointModel": {
        "type": "object",
        "required": [
          "id",
          "creationTime"
        ],
        "properties": {
          "id": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "creationTime": {
            "description": "Date and time when the restore point was created.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntraIdTenantValidateSpec": {
        "type": "object",
        "required": [
          "restorePointId",
          "itemIds"
        ],
        "properties": {
          "restorePointId": {
            "description": "Restore point ID.",
            "type": "string",
            "format": "uuid"
          },
          "itemIds": {
            "description": "Array of Microsoft Entra ID item IDs.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntraIdTenantValidateModel": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of missing Microsoft Entra ID items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantMissingItemModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EntraIdTenantMissingItemModel": {
        "type": "object",
        "required": [
          "itemId"
        ],
        "properties": {
          "itemId": {
            "description": "Item ID.",
            "type": "string"
          },
          "displayName": {
            "description": "Item display name.",
            "type": "string"
          },
          "itemType": {
            "$ref": "#/components/schemas/EEntraIdTenantItemType"
          }
        }
      },
      "EntraIdTenantBrowseSourceProperties": {
        "description": "Properties of a Microsoft Entra ID tenant backup.",
        "required": [
          "backupId"
        ],
        "type": "object",
        "properties": {
          "backupId": {
            "description": "ID of a Microsoft Entra ID tenant backup.",
            "type": "string",
            "format": "uuid"
          },
          "tenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "type": "string",
            "format": "uuid"
          },
          "tenantName": {
            "description": "Microsoft Entra ID tenant name.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantItemComparisonSpec": {
        "type": "object",
        "required": [
          "itemId",
          "itemType",
          "oldRestorePointId"
        ],
        "properties": {
          "itemId": {
            "description": "ID of a Microsoft Entra ID item.",
            "type": "string"
          },
          "itemType": {
            "$ref": "#/components/schemas/EEntraIdTenantItemType"
          },
          "oldRestorePointId": {
            "description": "ID of an earlier restore point.",
            "type": "string",
            "format": "uuid"
          },
          "newRestorePointId": {
            "description": "ID of a later restore point. If you do not specify this property, the item from the earlir restore point will be compared to the item in production.",
            "type": "string",
            "format": "uuid"
          },
          "showUnchangedAttributes": {
            "description": "If `true`, both changed and unchanged item properties are returned. Otherwise, only changed ones.",
            "type": "boolean"
          },
          "reloadCache": {
            "description": "This property is only used when comparing the item to production (`newRestorePointId` must not be specified). <ul><li>If `true`, the mount session cache will be reset for this request and new data will be obtained from Microsoft Entra ID.</li> <li>If `false`, the data will be obtained from the cache.</li></ul> Resetting the cache slows down request processing but allows you to get up-to-date data. To check the time when the cache was last updated, use the `cacheTimestamp` property in the response body.",
            "type": "boolean"
          }
        }
      },
      "EntraIdTenantItemComparisonSessionModel": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "description": "Session status.",
            "type": "string",
            "enum": [
              "Running",
              "Success",
              "Failure"
            ]
          },
          "result": {
            "$ref": "#/components/schemas/EntraIdTenantItemComparisonModel"
          },
          "errorMessage": {
            "description": "Error message.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantItemComparisonModel": {
        "description": "Comparison result.",
        "type": "object",
        "required": [
          "existsInOldRestorePoint",
          "existsInNewRestorePoint",
          "properties",
          "references",
          "cacheTimestamp"
        ],
        "properties": {
          "existsInOldRestorePoint": {
            "description": "If `true`, the item exists in the earlier restore point.",
            "type": "boolean"
          },
          "existsInNewRestorePoint": {
            "description": "If `true`, the item exists in the later restore point.",
            "type": "boolean"
          },
          "properties": {
            "description": "Array of properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantItemComparisonPropertyModel"
            }
          },
          "references": {
            "description": "Array of item references (relationship with other items).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantItemComparisonReferenceModel"
            }
          },
          "cacheTimestamp": {
            "description": "Date and time the mount session cache was last updated.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntraIdTenantItemStartComparisonModel": {
        "type": "object",
        "required": [
          "compareSessionId"
        ],
        "properties": {
          "compareSessionId": {
            "description": "Comparison session ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIdTenantItemComparisonPropertyModel": {
        "type": "object",
        "required": [
          "propertyName",
          "readOnly"
        ],
        "properties": {
          "propertyName": {
            "description": "Property name.",
            "type": "string"
          },
          "oldValue": {
            "description": "Property value from the earlier restore point.",
            "type": "string"
          },
          "newValue": {
            "description": "Property value from the later restore point.",
            "type": "string"
          },
          "readOnly": {
            "description": "If `true`, the value is read-only.",
            "type": "boolean"
          }
        }
      },
      "EntraIdTenantItemComparisonReferenceModel": {
        "description": "Item reference (relationship with other items).",
        "type": "object",
        "required": [
          "referenceType",
          "referenceTypeDisplayName",
          "values"
        ],
        "properties": {
          "referenceType": {
            "description": "Reference type.",
            "type": "string"
          },
          "referenceTypeDisplayName": {
            "description": "Display name of the reference type.",
            "type": "string"
          },
          "values": {
            "description": "Array of values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantItemComparisonReferenceValueModel"
            }
          }
        }
      },
      "EntraIdTenantItemComparisonReferenceValueModel": {
        "type": "object",
        "required": [
          "displayName",
          "referenceId",
          "oldValue",
          "newValue"
        ],
        "properties": {
          "displayName": {
            "description": "Reference display name.",
            "type": "string"
          },
          "referenceId": {
            "description": "Reference ID.",
            "type": "string"
          },
          "oldValue": {
            "description": "Value from the earlir restore point.",
            "type": "boolean"
          },
          "newValue": {
            "description": "Value from the newer restore point.",
            "type": "boolean"
          }
        }
      },
      "EntraIdTenantItemRecursiveComparisonSpec": {
        "type": "object",
        "required": [
          "itemId",
          "oldRestorePointId"
        ],
        "properties": {
          "itemId": {
            "description": "ID of a conditional access policy.",
            "type": "string"
          },
          "oldRestorePointId": {
            "description": "ID of an earlier restore point.",
            "type": "string",
            "format": "uuid"
          },
          "newRestorePointId": {
            "description": "ID of a later restore point. If you do not specify this property, the item from the earlir restore point will be compared to the item in production.",
            "type": "string",
            "format": "uuid"
          },
          "showUnchangedAttributes": {
            "description": "If `true`, both changed and unchanged item properties are returned. Otherwise, only changed ones.",
            "type": "boolean"
          },
          "reloadCache": {
            "description": "This property is only used when comparing the item to production (`newRestorePointId` must not be specified). <ul><li>If `true`, the mount session cache will be reset for this request and new data will be obtained from Microsoft Entra ID.</li> <li>If `false`, the data will be obtained from the cache.</li></ul> Resetting the cache slows down request processing but allows you to get up-to-date data. To check the time when the cache was last updated, use the `cacheTimestamp` property in the response body.",
            "type": "boolean"
          }
        }
      },
      "EntraIdTenantItemStartRecursiveComparisonModel": {
        "type": "object",
        "required": [
          "compareSessionId"
        ],
        "properties": {
          "compareSessionId": {
            "description": "Comparison session ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIdTenantItemRecursiveComparisonSessionModel": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "description": "Session status.",
            "type": "string",
            "enum": [
              "Running",
              "Success",
              "Failure"
            ]
          },
          "result": {
            "$ref": "#/components/schemas/EntraIdTenantItemRecursiveComparisonModel"
          },
          "errorMessage": {
            "description": "Error message.",
            "type": "string"
          }
        }
      },
      "EntraIdTenantItemRecursiveComparisonModel": {
        "description": "Comparison result.",
        "type": "object",
        "required": [
          "existsInOldRestorePoint",
          "existsInNewRestorePoint",
          "properties",
          "cacheTimestamp"
        ],
        "properties": {
          "existsInOldRestorePoint": {
            "description": "If `true`, the item exists in the earlier restore point.",
            "type": "boolean"
          },
          "existsInNewRestorePoint": {
            "description": "If `true`, the item exists in the later restore point.",
            "type": "boolean"
          },
          "properties": {
            "description": "Array of properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantItemRecursiveComparisonNode"
            }
          },
          "cacheTimestamp": {
            "description": "Date and time the mount session cache was last updated.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntraIdTenantItemRecursiveComparisonNode": {
        "required": [
          "areEqual",
          "name",
          "path"
        ],
        "type": "object",
        "properties": {
          "areEqual": {
            "description": "If `true`, the property values are equal.",
            "type": "boolean"
          },
          "isReadOnly": {
            "description": "If `true`, the property is read only.",
            "type": "boolean"
          },
          "name": {
            "description": "Property name.",
            "type": "string"
          },
          "path": {
            "description": "Property path.",
            "type": "string"
          },
          "oldValue": {
            "description": "Property value from the earlier restore point.",
            "type": "string"
          },
          "newValue": {
            "description": "Property value from the later restore point.",
            "type": "string"
          },
          "children": {
            "type": "array",
            "description": "Array of child properties.",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantItemRecursiveComparisonNode"
            }
          }
        }
      },
      "EntraIdTenantRestorePointSpec": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of restore points to skip.",
            "type": "integer"
          },
          "limit": {
            "description": "Maximum number of restore points to return.",
            "type": "integer"
          },
          "sorting": {
            "$ref": "#/components/schemas/EntraIdTenantRestorePointSortingSpec"
          }
        }
      },
      "EntraIdTenantRestorePointSortingSpec": {
        "description": "Sorting options.",
        "type": "object",
        "properties": {
          "property": {
            "$ref": "#/components/schemas/EEntraIdTenantRestorePointSortingProperty"
          },
          "direction": {
            "$ref": "#/components/schemas/ESortExpressionDirectionType"
          }
        }
      },
      "EEntraIdTenantRestorePointSortingProperty": {
        "description": "Sorting property.",
        "enum": [
          "creationTime"
        ],
        "type": "string"
      },
      "EntraIdTenantRestoreSessionsResult": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "description": "Array of restore sessions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantRestoreSessionModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EntraIdTenantRestoreSessionModel": {
        "description": "Restore session of a Microsoft Entra ID tenant.",
        "type": "object",
        "required": [
          "id",
          "name",
          "state"
        ],
        "properties": {
          "id": {
            "description": "Restore session ID.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Restore session name.",
            "type": "string"
          },
          "creationTime": {
            "description": "Date and time when the session was created.",
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "description": "Date and time when the session was stopped.",
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/EEntraIdTenantRestoreSessionState"
          },
          "reason": {
            "description": "Reason for restoring Microsoft Entra ID items.",
            "type": "string"
          },
          "parentSessionId": {
            "description": "Mount session ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EntraIdTenantRestoreSessionLogsResult": {
        "type": "object",
        "properties": {
          "totalRecords": {
            "description": "Total number of log records.",
            "type": "integer"
          },
          "records": {
            "description": "Array of log records.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntraIdTenantRestoreSessionLogModel"
            }
          }
        }
      },
      "EntraIdTenantRestoreSessionLogModel": {
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "startTime",
          "status",
          "style"
        ],
        "properties": {
          "id": {
            "description": "Record ID.",
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "description": "Event title.",
            "type": "string"
          },
          "description": {
            "description": "Event description.",
            "type": "string"
          },
          "startTime": {
            "description": "Date and time when the event was started.",
            "type": "string",
            "format": "date-time"
          },
          "updateTime": {
            "description": "Date and time when the event was updated.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/EEntraIdTenantRestoreSessionLogStatus"
          },
          "style": {
            "$ref": "#/components/schemas/EEntraIdTenantRestoreSessionLogStyle"
          }
        }
      },
      "EEntraIdTenantRestoreSessionLogStatus": {
        "description": "Event status.",
        "enum": [
          "Running",
          "Success",
          "Warning",
          "Failed"
        ],
        "type": "string"
      },
      "EEntraIdTenantRestoreSessionLogStyle": {
        "description": "Font style of the log record.",
        "enum": [
          "None",
          "Bold",
          "Gray",
          "Tail"
        ],
        "type": "string"
      },
      "EEntraIdTenantRestoreSessionState": {
        "description": "Session state.",
        "enum": [
          "Running",
          "NeverExecuted",
          "Success",
          "Warning",
          "Failed",
          "Canceled",
          "Pending",
          "Stopping"
        ],
        "type": "string"
      },
      "UnstructuredDataMountSpec": {
        "required": [
          "backupId"
        ],
        "type": "object",
        "properties": {
          "backupId": {
            "description": "Backup ID.",
            "type": "string",
            "format": "uuid"
          },
          "autoUnmount": {
            "$ref": "#/components/schemas/FlrAutoUnmountModel"
          }
        }
      },
      "UnstructuredDataFlrBrowseMountResult": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnstructuredDataFlrBrowseMountModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "UnstructuredDataFlrBrowseMountModel": {
        "required": [
          "sessionId"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "description": "Restore session ID.",
            "type": "string",
            "format": "uuid"
          },
          "properties": {
            "$ref": "#/components/schemas/FlrBrowseProperties"
          },
          "sourceProperties": {
            "$ref": "#/components/schemas/UnstructuredDataBrowseSourceProperties"
          }
        }
      },
      "UnstructuredDataBrowseSourceProperties": {
        "description": "Properties of unstructured data backup.",
        "type": "object",
        "properties": {
          "backupId": {
            "description": "Backup ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UnstructuredDataFlrBrowseFolderSpec": {
        "description": "Browser settings.",
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "description": "Browsing path.",
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/FlrBrowseFiltrationModel"
          },
          "order": {
            "$ref": "#/components/schemas/FlrBrowseOrderSpec"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationSpec"
          }
        }
      },
      "UnstructuredDataFlrBrowseFolderModel": {
        "description": "Item content.",
        "type": "object",
        "required": [
          "path",
          "items"
        ],
        "properties": {
          "path": {
            "description": "Browsing path.",
            "type": "string"
          },
          "items": {
            "description": "Array of child items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnstructuredDataFlrBrowseItemModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "UnstructuredDataFlrBrowseItemModel": {
        "type": "object",
        "required": [
          "name",
          "type",
          "size",
          "creationDate",
          "modifiedDate",
          "itemState"
        ],
        "properties": {
          "location": {
            "description": "Item path.",
            "type": "string"
          },
          "name": {
            "description": "Display name of the item.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EFlrItemType"
          },
          "size": {
            "description": "Item size in bytes.",
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "description": "Date and time when the item was created.",
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "description": "Date and time when the item was last modified.",
            "type": "string",
            "format": "date-time"
          },
          "itemState": {
            "$ref": "#/components/schemas/EFlrItemStateType"
          }
        }
      },
      "UnstructuredDataFlrSearchForResultModel": {
        "type": "object",
        "required": [
          "searchString",
          "items"
        ],
        "properties": {
          "path": {
            "description": "Search path.",
            "type": "string"
          },
          "searchString": {
            "description": "Search string.",
            "type": "string"
          },
          "items": {
            "description": "Array of child items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnstructuredDataFlrBrowseItemModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "FileBackupFLRCopyToSpec": {
        "type": "object",
        "required": [
          "sourcePath",
          "restoreMode"
        ],
        "properties": {
          "sourcePath": {
            "description": "Array of paths to the items that you want to restore.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isRecursive": {
            "description": "If `true`, all files and folders in the source path are copied recursively.",
            "type": "boolean"
          },
          "restoreMode": {
            "$ref": "#/components/schemas/EFileBackupFLRCopyToRestoreMode"
          },
          "toDateTime": {
            "description": "Date when the restore point was created. Use this property when copying files and folders from an erlier restore point (the `restoreMode` value is `Custom`).",
            "type": "string",
            "format": "date-time"
          },
          "unstructuredDataServerId": {
            "description": "ID of a server where the target shared folder is located. Use this property when copying files and folders to a file share.",
            "type": "string",
            "format": "uuid"
          },
          "path": {
            "description": "Path to the target folder.",
            "type": "string"
          },
          "copyToBackupServer": {
            "description": "If `true`, the files and folders are copied to a folder on the machine where the Veeam Backup & Replication console is installed.",
            "type": "boolean"
          }
        }
      },
      "EFileBackupFLRCopyToRestoreMode": {
        "description": "Restore mode.",
        "type": "string",
        "enum": [
          "LatestPoint",
          "Custom"
        ]
      },
      "FlrBrowseMountFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EFlrBrowseMountFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          }
        }
      },
      "EFlrBrowseMountFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "CreationTime"
        ]
      },
      "UnstructuredDataFlrBrowseMountFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of mount points to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of mount points to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EUnstructuredDataFlrBrowseMountFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts mount points in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          }
        }
      },
      "EUnstructuredDataFlrBrowseMountFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "CreationTime"
        ]
      },
      "FlrBrowseMountResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of file restore mount points.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlrBrowseMountModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "FlrBrowseMountModel": {
        "description": "File restore mount points.",
        "type": "object",
        "required": [
          "sessionId",
          "type",
          "sourceProperties"
        ],
        "properties": {
          "sessionId": {
            "description": "Restore session ID.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/EFlrType"
          },
          "properties": {
            "$ref": "#/components/schemas/FlrBrowseProperties"
          },
          "sourceProperties": {
            "$ref": "#/components/schemas/FlrBrowseSourceProperties"
          }
        }
      },
      "FlrBrowseProperties": {
        "description": "Browser properties.",
        "type": "object",
        "required": [
          "pathSeparator"
        ],
        "properties": {
          "pathSeparator": {
            "description": "Character that separates individual paths.",
            "type": "string"
          }
        }
      },
      "FlrBrowseSourceProperties": {
        "description": "Restore point settings.",
        "type": "object",
        "required": [
          "machineName",
          "restorePointName"
        ],
        "properties": {
          "machineName": {
            "description": "Name of a virtual or physical machine.",
            "type": "string"
          },
          "restorePointName": {
            "description": "Display name of the restore point (equals to the machine name).",
            "type": "string"
          }
        }
      },
      "FlrBrowserSpec": {
        "description": "Flr Browser Creation Spec",
        "type": "object",
        "required": [
          "sessionId"
        ],
        "properties": {
          "sessionId": {
            "description": "Restore session ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "FlrBrowseFiltrationModel": {
        "description": "Filter settings.",
        "type": "object",
        "properties": {
          "itemStates": {
            "description": "Filters items by their states.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EFlrItemStateType"
            }
          },
          "itemTypes": {
            "description": "Filters items by their types.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EFlrItemType"
            }
          }
        }
      },
      "PaginationSpec": {
        "description": "Pagination settings.",
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of items to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of items to return.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EFlrBrowseOrderType": {
        "description": "Sorts items by one of the following parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "Size",
          "CreationDate",
          "ModifiedDate",
          "ItemState"
        ]
      },
      "FlrBrowseOrderSpec": {
        "description": "Sorting settings.",
        "type": "object",
        "required": [
          "orderColumn"
        ],
        "properties": {
          "orderColumn": {
            "$ref": "#/components/schemas/EFlrBrowseOrderType"
          },
          "orderAsc": {
            "description": "If `true`, sorts items in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          }
        }
      },
      "FlrBrowseFolderSpec": {
        "description": "Browser settings.",
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "description": "Browsing path.",
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/FlrBrowseFiltrationModel"
          },
          "order": {
            "$ref": "#/components/schemas/FlrBrowseOrderSpec"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationSpec"
          }
        }
      },
      "EFlrItemType": {
        "description": "Item type.",
        "type": "string",
        "enum": [
          "Drive",
          "Folder",
          "File",
          "Link"
        ]
      },
      "FlrBrowseFolderModel": {
        "description": "Item content.",
        "type": "object",
        "required": [
          "path",
          "items"
        ],
        "properties": {
          "path": {
            "description": "Browsing path.",
            "type": "string"
          },
          "items": {
            "description": "Array of child items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlrBrowserItemModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EFlrItemStateType": {
        "description": "Item state.",
        "type": "string",
        "enum": [
          "NotAvaliable",
          "Changed",
          "Unchanged",
          "Comparing",
          "Deleted",
          "FailedToCompare"
        ]
      },
      "FlrBrowserItemModel": {
        "type": "object",
        "required": [
          "name",
          "type",
          "size",
          "creationDate",
          "modifiedDate",
          "itemState"
        ],
        "properties": {
          "location": {
            "description": "Item path.",
            "type": "string"
          },
          "name": {
            "description": "Display name of the item.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EFlrItemType"
          },
          "size": {
            "description": "Item size in bytes.",
            "type": "integer",
            "format": "int64"
          },
          "creationDate": {
            "description": "Date and time when the item was created.",
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "description": "Date and time when the item was last modified.",
            "type": "string",
            "format": "date-time"
          },
          "itemState": {
            "$ref": "#/components/schemas/EFlrItemStateType"
          }
        }
      },
      "FlrCompareAttributesSpec": {
        "type": "object",
        "required": [
          "path"
        ],
        "properties": {
          "path": {
            "description": "Path to the item whose attributes you want to compare.",
            "type": "string"
          },
          "showUnchangedAttributes": {
            "description": "If `true`, unchanged item attributes are also returned.",
            "type": "boolean"
          }
        }
      },
      "FlrCompareAttributesModel": {
        "type": "object",
        "required": [
          "path",
          "attributes"
        ],
        "properties": {
          "path": {
            "description": "Path of the item.",
            "type": "string"
          },
          "attributes": {
            "description": "Array of item attributes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlrCompareAttributeModel"
            }
          }
        }
      },
      "FlrCompareAttributeModel": {
        "type": "object",
        "required": [
          "name",
          "valueBackup",
          "valueProduction",
          "isChanged"
        ],
        "properties": {
          "name": {
            "description": "Attribute name.",
            "type": "string"
          },
          "valueBackup": {
            "description": "Attribute value from backup.",
            "type": "string"
          },
          "valueProduction": {
            "description": "Attribute value from production machine.",
            "type": "string"
          },
          "isChanged": {
            "description": "If `true`, the item has been changed.",
            "type": "boolean"
          }
        }
      },
      "FlrCompareToProductionSpec": {
        "type": "object",
        "required": [
          "isEnabled",
          "paths"
        ],
        "properties": {
          "isEnabled": {
            "description": "If `true`, the paths are included in the comparison. Otherwise, they are excluded from the comparison.",
            "type": "boolean"
          },
          "paths": {
            "description": "Array of item paths that you want to compare.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FlrStartSearchForSpec": {
        "type": "object",
        "required": [
          "path",
          "searchString"
        ],
        "properties": {
          "path": {
            "description": "Search path.",
            "type": "string"
          },
          "searchString": {
            "description": "Search string. The following wildcard characters are supported&#58; \"*\", \"?\" and \"+\".",
            "type": "string"
          }
        }
      },
      "FlrSearchForResultSpec": {
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PaginationSpec"
          },
          "order": {
            "$ref": "#/components/schemas/FlrSearchForResultOrderSpec"
          }
        }
      },
      "FlrSearchForResultOrderSpec": {
        "description": "Sorting settings.",
        "type": "object",
        "required": [
          "orderColumn"
        ],
        "properties": {
          "orderColumn": {
            "$ref": "#/components/schemas/EFlrSearchForResultOrderType"
          },
          "orderAsc": {
            "description": "If `true`, sorts items in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          }
        }
      },
      "EFlrSearchForResultOrderType": {
        "description": "Sorts items by one of the following parameters.",
        "type": "string",
        "enum": [
          "Name",
          "Size",
          "Extension",
          "CreationTime",
          "ModificationTime",
          "Path",
          "Owner",
          "CompareState"
        ]
      },
      "FlrSearchForResultModel": {
        "type": "object",
        "required": [
          "searchString",
          "items"
        ],
        "properties": {
          "path": {
            "description": "Search path.",
            "type": "string"
          },
          "searchString": {
            "description": "Search string.",
            "type": "string"
          },
          "items": {
            "description": "Array of child items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlrBrowserItemModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "EFlrRestoreType": {
        "description": "Restore type.",
        "type": "string",
        "enum": [
          "Overwrite",
          "Keep",
          "PermissionOnly"
        ]
      },
      "FlrRestoreSpec": {
        "type": "object",
        "required": [
          "sourcePath",
          "restoreType"
        ],
        "properties": {
          "sourcePath": {
            "description": "Array of paths to the items that you want to restore.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restoreType": {
            "$ref": "#/components/schemas/EFlrRestoreType"
          },
          "credentialsId": {
            "description": "ID of a credentials record used to connect to the target machine. Allowed only for Linux machines.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "FlrRestoreToSpec": {
        "type": "object",
        "required": [
          "sourcePath",
          "restoreType",
          "credentialsId",
          "targetHost",
          "targetPath"
        ],
        "properties": {
          "sourcePath": {
            "description": "Array of paths to the items that you want to restore.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restoreType": {
            "$ref": "#/components/schemas/EFlrRestoreType"
          },
          "credentialsId": {
            "description": "ID of a credentials record used to connect to the target machine.",
            "type": "string",
            "format": "uuid"
          },
          "targetHost": {
            "$ref": "#/components/schemas/FlrRestoreTargetHostModel"
          },
          "targetPath": {
            "description": "Path to the target folder.",
            "type": "string"
          }
        }
      },
      "FlrRestoreTargetHostModel": {
        "description": "Target machine. To get an inventory object, use the [Get Inventory Objects](#tag/Inventory-Browser/operation/GetInventoryObjects) request.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EFlrPlatformType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/VmwareFlrRestoreTargetHostModel"
          },
          {
            "$ref": "#/components/schemas/HyperVFlrRestoreTargetHostModel"
          },
          {
            "$ref": "#/components/schemas/AgentFlrRestoreTargetHostModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "VMware": "#/components/schemas/VmwareFlrRestoreTargetHostModel",
            "HyperV": "#/components/schemas/HyperVFlrRestoreTargetHostModel",
            "Agent": "#/components/schemas/AgentFlrRestoreTargetHostModel"
          }
        }
      },
      "VmwareFlrRestoreTargetHostModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FlrRestoreTargetHostModel"
          },
          {
            "type": "object",
            "required": [
              "vmObject"
            ],
            "properties": {
              "vmObject": {
                "$ref": "#/components/schemas/InventoryObjectModel"
              }
            }
          }
        ]
      },
      "HyperVFlrRestoreTargetHostModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FlrRestoreTargetHostModel"
          },
          {
            "type": "object",
            "required": [
              "vmObject"
            ],
            "properties": {
              "vmObject": {
                "description": "Item path.",
                "type": "string"
              }
            }
          }
        ]
      },
      "AgentFlrRestoreTargetHostModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FlrRestoreTargetHostModel"
          },
          {
            "type": "object",
            "required": [
              "protectedComputerId"
            ],
            "properties": {
              "protectedComputerId": {
                "description": "Protected computer ID. To get the ID, use the [Get All Protected Computers](#tag/Agents/operation/GetProtectedComputers) request.",
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "FlrStartDownloadSpec": {
        "type": "object",
        "required": [
          "sourcePath"
        ],
        "properties": {
          "sourcePath": {
            "description": "Array of paths to the items that you want to download.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of task to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of tasks to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ETaskFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "endedAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "endedBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ETaskType"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/ETaskState"
          },
          "resultFilter": {
            "$ref": "#/components/schemas/ETaskResult"
          }
        }
      },
      "ETaskFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "Type",
          "CreationTime",
          "EndTime",
          "State",
          "Result"
        ]
      },
      "TasksResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of tasks.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ETaskState": {
        "description": "Task state.",
        "type": "string",
        "enum": [
          "Starting",
          "Working",
          "Stopping",
          "Stopped"
        ]
      },
      "ETaskResult": {
        "description": "Task result.",
        "type": "string",
        "enum": [
          "None",
          "Success",
          "Warning",
          "Failed",
          "Cancelled"
        ]
      },
      "ETaskType": {
        "description": "Task type.",
        "type": "string",
        "enum": [
          "Common",
          "FlrRestore",
          "FlrDownload",
          "FlrSearch",
          "HierarchyRescan"
        ]
      },
      "TaskModel": {
        "description": "Task model.",
        "type": "object",
        "required": [
          "id",
          "type",
          "name",
          "state",
          "progressPercent",
          "creationTime",
          "result"
        ],
        "properties": {
          "id": {
            "description": "ID of the task.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/ETaskType"
          },
          "name": {
            "description": "Task name.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/ETaskState"
          },
          "progressPercent": {
            "description": "Progress percentage of the task.",
            "type": "integer"
          },
          "creationTime": {
            "description": "Date and time when the task was created.",
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "description": "Date and time when the task was ended.",
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "$ref": "#/components/schemas/ETaskResult"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CommonTaskModel"
          },
          {
            "$ref": "#/components/schemas/FlrRestoreTaskModel"
          },
          {
            "$ref": "#/components/schemas/FlrDownloadTaskModel"
          },
          {
            "$ref": "#/components/schemas/FlrSearchTaskModel"
          },
          {
            "$ref": "#/components/schemas/HierarchyRescanTaskModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Common": "#/components/schemas/CommonTaskModel",
            "FlrRestore": "#/components/schemas/FlrRestoreTaskModel",
            "FlrDownload": "#/components/schemas/FlrDownloadTaskModel",
            "FlrSearch": "#/components/schemas/FlrSearchTaskModel",
            "HierarchyRescan": "#/components/schemas/HierarchyRescanTaskModel"
          }
        }
      },
      "TaskAdditionalInfoModel": {
        "description": "Task details.",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "description": "Message that explains the task result.",
            "type": "string"
          },
          "resourceId": {
            "description": "ID of the resource.",
            "type": "string",
            "format": "uuid"
          },
          "resourceReference": {
            "description": "URI of the resource.",
            "type": "string"
          }
        }
      },
      "CommonTaskModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskModel"
          },
          {
            "type": "object",
            "description": "Common task.",
            "properties": {
              "additionalInfo": {
                "$ref": "#/components/schemas/TaskAdditionalInfoModel"
              }
            }
          }
        ]
      },
      "FlrRestoreTaskModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskModel"
          },
          {
            "type": "object",
            "description": "File restore task.",
            "properties": {
              "additionalInfo": {
                "$ref": "#/components/schemas/TaskAdditionalInfoModel"
              }
            }
          }
        ]
      },
      "FlrDownloadTaskModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskModel"
          },
          {
            "type": "object",
            "description": "File restore download task.",
            "properties": {
              "additionalInfo": {
                "$ref": "#/components/schemas/TaskAdditionalInfoModel"
              }
            }
          }
        ]
      },
      "FlrSearchTaskModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskModel"
          },
          {
            "type": "object",
            "description": "File restore search task.",
            "properties": {
              "additionalInfo": {
                "$ref": "#/components/schemas/TaskAdditionalInfoModel"
              }
            }
          }
        ]
      },
      "HierarchyRescanTaskModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskModel"
          },
          {
            "type": "object",
            "description": "Hierarchy rescan task.",
            "properties": {
              "serverName": {
                "description": "Name of the rescanned server.",
                "type": "string"
              }
            }
          }
        ]
      },
      "EKMSFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "Type"
        ]
      },
      "EKeyManagementServerType": {
        "description": "KMS server type.",
        "type": "string",
        "enum": [
          "KMS"
        ]
      },
      "EKMSCertificateType": {
        "description": "Certificate type.",
        "type": "string",
        "enum": [
          "Client",
          "Server"
        ]
      },
      "KeyManagementServerBaseSpec": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "description": "Full DNS name or IP address of the KMS server.",
            "type": "string"
          },
          "description": {
            "description": "KMS server description.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EKeyManagementServerType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CommonKeyManagementServerSpec"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "KMS": "#/components/schemas/CommonKeyManagementServerSpec"
          }
        }
      },
      "CommonKeyManagementServerSpec": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeyManagementServerBaseSpec"
          },
          {
            "type": "object",
            "required": [
              "port",
              "serverCertificate",
              "clientCertificate"
            ],
            "properties": {
              "port": {
                "description": "KMIP port on the backup server. You must open the port manually.",
                "type": "integer"
              },
              "serverCertificate": {
                "$ref": "#/components/schemas/CertificateUploadSpec"
              },
              "clientCertificate": {
                "$ref": "#/components/schemas/CertificateUploadSpec"
              }
            }
          }
        ]
      },
      "KMSServerChangeCertificateSpec": {
        "type": "object",
        "required": [
          "type",
          "certificate"
        ],
        "properties": {
          "certificate": {
            "$ref": "#/components/schemas/CertificateUploadSpec"
          },
          "type": {
            "$ref": "#/components/schemas/EKMSCertificateType"
          }
        }
      },
      "KeyManagementServersResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of KMS servers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyManagementServerBaseModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "KeyManagementServerBaseModel": {
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the KMS server.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Full DNS name or IP address of the KMS server.",
            "type": "string"
          },
          "description": {
            "description": "KMS server description.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EKeyManagementServerType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CommonKeyManagementServerModel"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "KMS": "#/components/schemas/CommonKeyManagementServerModel"
          }
        }
      },
      "CommonKeyManagementServerModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeyManagementServerBaseModel"
          },
          {
            "type": "object",
            "required": [
              "port"
            ],
            "properties": {
              "port": {
                "description": "KMIP port on the backup server.",
                "type": "integer",
                "format": "int32"
              },
              "serverCertificateThumbprint": {
                "description": "Thumbprint of the KMS server certificate.",
                "type": "string"
              },
              "clientCertificateThumbprint": {
                "description": "Thumbprint of the client certificate created on the KMS server.",
                "type": "string"
              }
            }
          }
        ]
      },
      "KMSFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of KMS servers to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of KMS servers to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EKMSFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts KMS servers in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters KMS servers by the `nameFilter` pattern. The pattern can match any KMS server parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/EKeyManagementServerType"
          }
        }
      },
      "ESuspiciousActivityType": {
        "description": "Event type.",
        "type": "string",
        "enum": [
          "Unknown",
          "DeletedUsefulFiles",
          "RansomwareNotes",
          "MalwareExtensions",
          "EncryptedData",
          "YaraScan",
          "AntivirusScan",
          "RenamedFiles",
          "IndicatorOfCompromise"
        ]
      },
      "ESuspiciousActivityState": {
        "description": "Event state.",
        "type": "string",
        "enum": [
          "Created",
          "FalsePositive"
        ]
      },
      "ESuspiciousActivitySourceType": {
        "description": "Event source type.",
        "type": "string",
        "enum": [
          "Manual",
          "InternalVeeamDetector",
          "External",
          "MarkAsCleanEvent"
        ]
      },
      "ESuspiciousActivitySeverity": {
        "description": "Malware status.",
        "type": "string",
        "enum": [
          "Clean",
          "Suspicious",
          "Infected"
        ]
      },
      "SuspiciousActivityEventsResult": {
        "required": [
          "data",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of malware events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuspiciousActivityEventModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "SuspiciousActivityEventModel": {
        "description": "Malware event.",
        "type": "object",
        "required": [
          "id",
          "type",
          "detectionTimeUtc",
          "state",
          "details",
          "source",
          "severity",
          "createdBy",
          "engine"
        ],
        "properties": {
          "id": {
            "description": "ID of the event.",
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/ESuspiciousActivityType"
          },
          "detectionTimeUtc": {
            "description": "Detection date and time, in UTC.",
            "type": "string",
            "format": "date-time"
          },
          "machine": {
            "$ref": "#/components/schemas/SuspiciousActivityMachineModel"
          },
          "state": {
            "$ref": "#/components/schemas/ESuspiciousActivityState"
          },
          "details": {
            "description": "Event description.",
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/ESuspiciousActivitySourceType"
          },
          "severity": {
            "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
          },
          "createdBy": {
            "description": "User account created the event.",
            "type": "string"
          },
          "engine": {
            "description": "Detection engine.",
            "type": "string"
          }
        }
      },
      "SuspiciousActivityEventSpec": {
        "description": "SuspiciousActivityInfo",
        "type": "object",
        "required": [
          "detectionTimeUtc",
          "machine",
          "details",
          "engine"
        ],
        "properties": {
          "detectionTimeUtc": {
            "description": "Detection date and time, in UTC.",
            "type": "string",
            "format": "date-time"
          },
          "machine": {
            "$ref": "#/components/schemas/SuspiciousActivityMachineSpec"
          },
          "details": {
            "description": "Event description.",
            "type": "string"
          },
          "engine": {
            "description": "Detection engine.",
            "type": "string"
          }
        }
      },
      "SuspiciousActivityMachineSpec": {
        "description": "Machine that you want to mark with the malware event. Specify at least 2 parameters.<p> Note that Veeam Backup & Replication can identify a machine by its FQDN, IPv4 address and IPv6 address only if the machine has been powered on during the backup. If you back up a powered-off machine, Veeam Backup & Replication will not get the machine IP addresses and domain name and will not be able to identify the machine.</p>",
        "type": "object",
        "properties": {
          "fqdn": {
            "description": "Fully Qualified Domain Name of the machine.",
            "type": "string"
          },
          "ipv4": {
            "description": "IPv4 address of machine.",
            "type": "string"
          },
          "ipv6": {
            "description": "IPv6 address of the machine.",
            "type": "string"
          },
          "uuid": {
            "description": "BIOS UUID of the machine. Specify the UUID in the 8-4-4-4-12 format&#58; xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.",
            "type": "string"
          }
        }
      },
      "SuspiciousActivityMachineModel": {
        "description": "Machine marked by the malware event.",
        "type": "object",
        "required": [
          "displayName",
          "uuid",
          "backupObjectId"
        ],
        "properties": {
          "displayName": {
            "description": "Machine name.",
            "type": "string"
          },
          "uuid": {
            "description": "Machine BIOS UUID.",
            "type": "string"
          },
          "backupObjectId": {
            "description": "Backup object ID.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ESuspiciousActivityEventsFiltersOrderColumn": {
        "description": "ESuspiciousActivityEventsFiltersOrderColumn.",
        "type": "string",
        "enum": [
          "Type",
          "DetectionTimeUtc",
          "BackupObjectId",
          "State",
          "Source",
          "Severity",
          "CreatedBy",
          "Engine"
        ]
      },
      "SuspiciousActivityEventsFilters": {
        "description": "SuspiciousActivityEventsFilters",
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/ESuspiciousActivityEventsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/ESuspiciousActivityType"
          },
          "detectedAfterTimeUtcFilter": {
            "type": "string",
            "format": "date-time"
          },
          "detectedBeforeTimeUtcFilter": {
            "type": "string",
            "format": "date-time"
          },
          "backupObjectIdFilter": {
            "type": "string",
            "format": "uuid"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/ESuspiciousActivityState"
          },
          "sourceFilter": {
            "$ref": "#/components/schemas/ESuspiciousActivitySourceType"
          },
          "severityFilter": {
            "$ref": "#/components/schemas/ESuspiciousActivitySeverity"
          },
          "createdByFilter": {
            "type": "string"
          },
          "engineFilter": {
            "type": "string"
          }
        }
      },
      "YaraRulesResult": {
        "type": "object",
        "required": [
          "data",
          "properties"
        ],
        "properties": {
          "data": {
            "description": "Array of YARA rule file names.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/YaraRuleModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "YaraRuleModel": {
        "description": "YARA rule file name.",
        "type": "object",
        "required": [
          "fileName"
        ],
        "properties": {
          "fileName": {
            "description": "YARA rule file name.",
            "type": "string"
          }
        }
      },
      "MalwareBackupScanSpec": {
        "type": "object",
        "required": [
          "backupObjectPair",
          "scanMode",
          "scanEngine"
        ],
        "properties": {
          "backupObjectPair": {
            "description": "Array of objects containing the backup IDs and backup object IDs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupObjectPair"
            }
          },
          "scanMode": {
            "$ref": "#/components/schemas/EMalwareBackupScanMode"
          },
          "scanEngine": {
            "$ref": "#/components/schemas/MalwareBackupScanSpecEngine"
          },
          "scanRange": {
            "$ref": "#/components/schemas/MalwareBackupScanRange"
          },
          "continueScan": {
            "description": "If `true`, the backup scan will continue even after it finds affected restore points.",
            "type": "boolean"
          }
        }
      },
      "BackupObjectPair": {
        "type": "object",
        "description": "Contains backup ID and backup object ID.",
        "required": [
          "backupId",
          "backupObjectId"
        ],
        "properties": {
          "backupId": {
            "description": "ID of the backup.",
            "type": "string",
            "format": "uuid"
          },
          "backupObjectId": {
            "description": "ID of the backup object.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EMalwareBackupScanMode": {
        "description": "Backup scan mode.",
        "x-enumDescriptions": {
          "MostRecent": "Use this mode if you think a cyber-attack started recently. Restore points will be scanned sequentially, starting from the most resent restore point, until a malware-free restore point is found.",
          "AllInInterval": "Use this mode to scan backup content with necessary YARA rules. Restore points will be scanned sequentially and a malware event will be initiated.",
          "FirstInInterval": "Use this mode if you are not sure when the attack started. Restore points will be scanned in optimal order until a malware-free restore point is found."
        },
        "type": "string",
        "enum": [
          "MostRecent",
          "AllInInterval",
          "FirstInInterval"
        ]
      },
      "MalwareBackupScanSpecEngine": {
        "description": "Type of backup scan engine.",
        "type": "object",
        "required": [
          "useAntivirusEngine",
          "useYaraRule"
        ],
        "properties": {
          "useAntivirusEngine": {
            "description": "If `true`, the selected backup is scanned with antivirus software.",
            "type": "boolean"
          },
          "useYaraRule": {
            "description": "If `true`, the selected backup is scanned with the specified YARA rule.",
            "type": "boolean"
          },
          "yaraRule": {
            "$ref": "#/components/schemas/YaraRuleModel"
          }
        }
      },
      "MalwareBackupScanRange": {
        "description": "Backup scan range. If you do not specify this parameter, Veeam Backup & Replication will scan all available restore points.",
        "type": "object",
        "required": [
          "from",
          "to"
        ],
        "properties": {
          "from": {
            "$ref": "#/components/schemas/MalwareBackupScanSpecRangeFrom"
          },
          "to": {
            "$ref": "#/components/schemas/MalwareBackupScanSpecRangeTo"
          }
        }
      },
      "MalwareBackupScanSpecRangeFrom": {
        "description": "Starting point of the backup scan range.",
        "type": "object",
        "required": [
          "useMostRecentPoint"
        ],
        "properties": {
          "useMostRecentPoint": {
            "type": "boolean",
            "description": "If `true`, the backup scan will process restore points until the most recent one."
          },
          "startDate": {
            "type": "string",
            "description": "The backup scan will process restore points that were created starting from this date and time.",
            "format": "date-time"
          }
        }
      },
      "MalwareBackupScanSpecRangeTo": {
        "description": "Ending point of the backup scan range.",
        "type": "object",
        "required": [
          "useOldestPoint"
        ],
        "properties": {
          "useOldestPoint": {
            "type": "boolean",
            "description": "If `true`, the backup scan will process restore points until the oldest one."
          },
          "endDate": {
            "type": "string",
            "description": "The backup scan will proces restore points that were created by this date and time.",
            "format": "date-time"
          }
        }
      },
      "AuthorizationEventsResult": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Array of authorization events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizationEventModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "AuthorizationEventModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Event ID.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Event name.",
            "type": "string"
          },
          "description": {
            "description": "Event description.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/EAuthorizationEventState"
          },
          "creationTime": {
            "description": "Date and time when the event was created.",
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "description": "User initiated the event.",
            "type": "string"
          },
          "expirationTime": {
            "description": "Date and time when the event expires.",
            "type": "string",
            "format": "date-time"
          },
          "processedBy": {
            "description": "User processed the event.",
            "type": "string"
          },
          "processedTime": {
            "description": "Date and time when the event was processed.",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuthorizationEventsFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Number of task to skip.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Maximum number of tasks to return.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EAuthorizationEventsFiltersOrderColumn"
          },
          "orderAsc": {
            "type": "boolean"
          },
          "nameFilter": {
            "type": "string"
          },
          "createdAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "createdBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "processedAfterFilter": {
            "type": "string",
            "format": "date-time"
          },
          "processedBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EAuthorizationEventState"
          },
          "createdByFilter": {
            "type": "string"
          },
          "processedByFilter": {
            "type": "string"
          },
          "expireBeforeFilter": {
            "type": "string",
            "format": "date-time"
          },
          "expireAfterFilter": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EAuthorizationEventsFiltersOrderColumn": {
        "type": "string",
        "enum": [
          "Name",
          "State",
          "CreationTime",
          "ProcessedTime",
          "ExpirationTime"
        ]
      },
      "EAuthorizationEventState": {
        "description": "Event state.",
        "enum": [
          "Pending",
          "Approved",
          "Rejected",
          "Expired",
          "Info"
        ],
        "type": "string"
      },
      "InventoryBrowserRequestOptions": {
        "type": "object",
        "properties": {
          "resetCache": {
            "description": "If `true`, the cache will be reset for this request. Resetting the cache slows down request processing but it allows you to get up-to-date data.",
            "type": "boolean"
          }
        }
      },
      "CloudBrowserRequestOptions": {
        "type": "object",
        "properties": {
          "resetCache": {
            "description": "If `true`, the cache will be reset for this request. Resetting the cache slows down request processing but it allows you to get up-to-date data.",
            "type": "boolean"
          }
        }
      },
      "ProtectedComputerFilters": {
        "type": "object",
        "properties": {
          "skip": {
            "description": "Skips the specified number of Protected Computers.",
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "description": "Returns the specified number of Protected Computers.",
            "type": "integer",
            "format": "int32"
          },
          "orderColumn": {
            "$ref": "#/components/schemas/EProtectedComputerFiltersOrderColumn"
          },
          "orderAsc": {
            "description": "If `true`, sorts Protected Computers in the ascending order by the `orderColumn` parameter.",
            "type": "boolean"
          },
          "nameFilter": {
            "description": "Filters Protected Computers by the `nameFilter` pattern. The pattern can match any job parameter. To substitute one or more characters, use the asterisk (*) character at the beginning, at the end or both.",
            "type": "string"
          },
          "typeFilter": {
            "$ref": "#/components/schemas/EProtectedComputerType"
          }
        }
      },
      "EProtectedComputerFiltersOrderColumn": {
        "description": "Orders jobs by the specified column.",
        "type": "string",
        "enum": [
          "Name",
          "Type"
        ]
      },
      "ProtectedComputerResult": {
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "properties": {
          "data": {
            "description": "Array of protected computers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtectedComputerModel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationResult"
          }
        }
      },
      "ProtectedComputerModel": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "protectionGroups"
        ],
        "properties": {
          "id": {
            "description": "ID of the protected computer.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Full DNS name, NetBIOS name or IP address of the protected computer",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EProtectedComputerType"
          },
          "protectionGroups": {
            "description": "Array of protection groups that include the computer.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtectedComputerGroupModel"
            }
          }
        }
      },
      "ProtectedComputerGroupModel": {
        "type": "object",
        "required": [
          "id",
          "name",
          "credentialsId"
        ],
        "properties": {
          "id": {
            "description": "ID of the protection group.",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "Type of the protection group.",
            "type": "string"
          },
          "credentialsId": {
            "description": "Default credentials that are used to connect to computers included in the protection group.",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EProtectedComputerType": {
        "description": "Type of the protected computer.",
        "type": "string",
        "enum": [
          "Linux"
        ]
      },
      "LoadCalculatorRequest": {
        "required": [
          "azureTenantId"
        ],
        "type": "object",
        "properties": {
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "minLength": 1,
            "type": "string"
          },
          "applicationId": {
            "description": "Application ID.",
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "TenantLoadCalculatorResponse": {
        "required": [
          "instanceId",
          "issue",
          "tenantConsumption",
          "azureTenantId",
          "tenantItems"
        ],
        "type": "object",
        "properties": {
          "instanceId": {
            "description": "ID of an instance where Veeam Backup & Replication is deployed.",
            "minLength": 1,
            "type": "string"
          },
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "minLength": 1,
            "type": "string"
          },
          "tenantItems": {
            "$ref": "#/components/schemas/TenantResponse"
          },
          "tenantConsumption": {
            "$ref": "#/components/schemas/EntraIdResource"
          },
          "instanceResourceLeft": {
            "$ref": "#/components/schemas/EntraIdResource"
          },
          "issue": {
            "$ref": "#/components/schemas/Issue"
          },
          "entraIdPluginSettings": {
            "$ref": "#/components/schemas/EntraIDPluginSettings"
          },
          "template": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "TenantResponse": {
        "description": "Tenant items.",
        "required": [
          "applications",
          "groups",
          "roles",
          "administrativeUnits",
          "users",
          "servicePrincipals",
          "armRoleAssignments",
          "roleAssignments",
          "roleAssignmentSchedules",
          "roleEligibilitySchedules",
          "conditionalAccessPolicies"
        ],
        "type": "object",
        "properties": {
          "users": {
            "description": "Number of users.",
            "type": "integer"
          },
          "groups": {
            "description": "Number of groups.",
            "type": "integer"
          },
          "applications": {
            "description": "Number of applications.",
            "type": "integer"
          },
          "administrativeUnits": {
            "description": "Number of administrative units.",
            "type": "integer"
          },
          "roles": {
            "description": "Number of roles.",
            "type": "integer"
          },
          "servicePrincipals": {
            "description": "Number of service principals.",
            "type": "integer"
          },
          "armRoleAssignments": {
            "description": "Number of ARM role assignments.",
            "type": "integer"
          },
          "roleAssignments": {
            "description": "Number of role assignments.",
            "type": "integer"
          },
          "roleAssignmentSchedules": {
            "description": "Number of role assignment schedules.",
            "type": "integer"
          },
          "roleEligibilitySchedules": {
            "description": "Number of role eligibility schedules.",
            "type": "integer"
          },
          "conditionalAccessPolicies": {
            "description": "Number of conditional access policies.",
            "type": "integer"
          }
        }
      },
      "EntraIdResource": {
        "description": "Resource consumption.",
        "required": [
          "cpuResource",
          "ramResource",
          "itemResource",
          "cpuBackupResource"
        ],
        "type": "object",
        "properties": {
          "cpuResource": {
            "description": "CPU consumption for restore.",
            "type": "integer"
          },
          "ramResource": {
            "description": "RAM consumption.",
            "type": "integer"
          },
          "itemResource": {
            "description": "Total number of tenant items.",
            "type": "integer"
          },
          "cpuBackupResource": {
            "description": "CPU consumption for backup.",
            "type": "integer"
          }
        }
      },
      "EntraIDPluginSettings": {
        "required": [
          "maxParallelJobsPerWorker",
          "storageQueueCapacity"
        ],
        "type": "object",
        "properties": {
          "maxParallelJobsPerWorker": {
            "description": "Maximum number of parallel backup requests for the backup server.",
            "type": "integer"
          },
          "storageQueueCapacity": {
            "type": "integer"
          }
        }
      },
      "BottleneckType": {
        "description": "Bottleneck type.",
        "type": "string",
        "enum": [
          "noIssues",
          "cpu",
          "ram",
          "hugeTenant",
          "cpuBackup"
        ]
      },
      "BottleneckSeverity": {
        "description": "Bottleneck severity.",
        "type": "string",
        "enum": [
          "none",
          "soft",
          "hard"
        ]
      },
      "Issue": {
        "description": "Issue status.",
        "required": [
          "bottleneck",
          "severity"
        ],
        "type": "object",
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/BottleneckSeverity"
          },
          "bottleneck": {
            "$ref": "#/components/schemas/BottleneckType"
          }
        }
      },
      "DeploymentConsumptionResponse": {
        "required": [
          "instanceId",
          "tenants",
          "instanceConsumption",
          "issue",
          "entraIdPluginSettings"
        ],
        "type": "object",
        "properties": {
          "instanceId": {
            "description": "ID of an instance where Veeam Backup & Replication is deployed.",
            "minLength": 1,
            "type": "string"
          },
          "tenants": {
            "description": "Array of tenants added to the backup server.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentConsumptionTenantResponse"
            }
          },
          "instanceConsumption": {
            "$ref": "#/components/schemas/EntraIdResource"
          },
          "issue": {
            "$ref": "#/components/schemas/Issue"
          },
          "entraIdPluginSettings": {
            "$ref": "#/components/schemas/EntraIDPluginSettings"
          },
          "templateId": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "DeploymentConsumptionTenantResponse": {
        "required": [
          "tenantConsumption",
          "azureTenantId",
          "tenantItems"
        ],
        "type": "object",
        "properties": {
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "minLength": 1,
            "type": "string"
          },
          "tenantItems": {
            "$ref": "#/components/schemas/TenantResponse"
          },
          "tenantConsumption": {
            "$ref": "#/components/schemas/EntraIdResource"
          }
        }
      },
      "DeploymentBackupObjectsSummaryResponse": {
        "required": [
          "tenants"
        ],
        "type": "object",
        "properties": {
          "tenants": {
            "description": "Array of tenants.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantBackupObjectsSummaryResponse"
            }
          }
        }
      },
      "TenantBackupObjectsSummaryResponse": {
        "required": [
          "azureTenantId",
          "users",
          "administrativeUnits",
          "groups",
          "unifiedRoleDefinitions",
          "applications",
          "servicePrincipals",
          "armRoleAssignments",
          "schemaExtensions",
          "unifiedRoleAssignments",
          "unifiedRoleAssignmentSchedules",
          "unifiedRoleAssignmentScheduleInstances",
          "unifiedRoleEligibilitySchedules",
          "unifiedRoleEligibilityScheduleInstances",
          "conditionalAccessPolicies"
        ],
        "type": "object",
        "properties": {
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "minLength": 1,
            "type": "string"
          },
          "users": {
            "description": "Number of backed up users.",
            "type": "integer",
            "format": "int32"
          },
          "administrativeUnits": {
            "description": "Number of backed up administrative units.",
            "type": "integer",
            "format": "int32"
          },
          "groups": {
            "description": "Number of backed up groups.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleDefinitions": {
            "description": "Number of backed up unified role definitions.",
            "type": "integer",
            "format": "int32"
          },
          "applications": {
            "description": "Number of backed up applications.",
            "type": "integer",
            "format": "int32"
          },
          "servicePrincipals": {
            "description": "Number of backed up service principals.",
            "type": "integer",
            "format": "int32"
          },
          "armRoleAssignments": {
            "description": "Number of backed up ARM role assignments.",
            "type": "integer",
            "format": "int32"
          },
          "schemaExtensions": {
            "description": "Number of backed up schema extensions.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleAssignments": {
            "description": "Number of backed up unified role assignments.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleAssignmentSchedules": {
            "description": "Number of backed up unified role assignment schedules.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleAssignmentScheduleInstances": {
            "description": "Number of backed up unified role assignment schedule instances.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleEligibilitySchedules": {
            "description": "Number of backed up unified role eligibility schedules.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleEligibilityScheduleInstances": {
            "description": "Number of backed up unified role eligibility schedule instances.",
            "type": "integer",
            "format": "int32"
          },
          "conditionalAccessPolicies": {
            "description": "Number of backed up conditional access policies.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TenantBackupStatisticsResponse": {
        "required": [
          "users",
          "administrativeUnits",
          "groups",
          "unifiedRoleDefinitions",
          "applications",
          "servicePrincipals",
          "armRoleAssignments",
          "schemaExtensions",
          "unifiedRoleAssignments",
          "unifiedRoleAssignmentSchedules",
          "unifiedRoleAssignmentScheduleInstances",
          "unifiedRoleEligibilitySchedules",
          "unifiedRoleEligibilityScheduleInstances",
          "conditionalAccessPolicies"
        ],
        "type": "object",
        "properties": {
          "users": {
            "description": "Number of backed up users.",
            "type": "integer",
            "format": "int32"
          },
          "administrativeUnits": {
            "description": "Number of backed up administrative units.",
            "type": "integer",
            "format": "int32"
          },
          "groups": {
            "description": "Number of backed up groups.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleDefinitions": {
            "description": "Number of backed up unified role definitions.",
            "type": "integer",
            "format": "int32"
          },
          "applications": {
            "description": "Number of backed up applications.",
            "type": "integer",
            "format": "int32"
          },
          "servicePrincipals": {
            "description": "Number of backed up service principals.",
            "type": "integer",
            "format": "int32"
          },
          "armRoleAssignments": {
            "description": "Number of backed up ARM role assignments.",
            "type": "integer",
            "format": "int32"
          },
          "schemaExtensions": {
            "description": "Number of backed up schema extensions.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleAssignments": {
            "description": "Number of backed up unified role assignments.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleAssignmentSchedules": {
            "description": "Number of backed up unified role assignment schedules.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleAssignmentScheduleInstances": {
            "description": "Number of backed up unified role assignment schedule instances.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleEligibilitySchedules": {
            "description": "Number of backed up unified role eligibility schedules.",
            "type": "integer",
            "format": "int32"
          },
          "unifiedRoleEligibilityScheduleInstances": {
            "description": "Number of backed up unified role eligibility schedule instances.",
            "type": "integer",
            "format": "int32"
          },
          "conditionalAccessPolicies": {
            "description": "Number of backed up conditional access policies.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RestorePointChangesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "description": "Array of restore point changes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestorePointChangeModel"
            }
          }
        }
      },
      "RestorePointChangeModel": {
        "type": "object",
        "properties": {
          "itemType": {
            "$ref": "#/components/schemas/EEntraIdSavedTenantItemType"
          },
          "changeType": {
            "$ref": "#/components/schemas/EEntraIDTenantItemChangeType"
          },
          "counter": {
            "description": "Number of changed items.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EEntraIDTenantItemChangeType": {
        "description": "Change type.",
        "enum": [
          "Added",
          "Deleted"
        ],
        "type": "string"
      },
      "EEntraIdSavedTenantItemType": {
        "description": "Item type.",
        "enum": [
          "User",
          "AdministrativeUnit",
          "Group",
          "UnifiedRoleDefinition",
          "Application",
          "ServicePrincipal",
          "ArmRoleAssignment",
          "SchemaExtension",
          "UnifiedRoleAssignment",
          "UnifiedRoleAssignmentSchedule",
          "UnifiedRoleAssignmentScheduleInstance",
          "UnifiedRoleEligibilitySchedule",
          "UnifiedRoleEligibilityScheduleInstance",
          "ConditionalAccessPolicy"
        ],
        "type": "string"
      },
      "LoadCalculatorConfigurationRequest": {
        "type": "object",
        "properties": {
          "avgAdministrativeUnitsPerMinuteBackupCount": {
            "description": "Average number of administrative units backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgArmRoleAssignmentsPerMinuteBackupCount": {
            "description": "Average number of ARM role assignments backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgApplicationsPerMinuteBackupCount": {
            "description": "Average number of applications backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgConditionalAccessPoliciesPerMinuteBackupCount": {
            "description": "Average number of conditional access policies backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgGroupsPerMinuteBackupCount": {
            "description": "Average number of groups backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgSchemaExtensionsPerMinuteBackupCount": {
            "description": "Average number of schema extensions backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgServicePrincipalsPerMinuteBackupCount": {
            "description": "Average number of service principals backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUsersPerMinuteBackupCount": {
            "description": "Average number of users backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleAssignmentsPerMinuteBackupCount": {
            "description": "Average number of unified role assignments backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleAssignmentSchedulesPerMinuteBackupCount": {
            "description": "Average number of unified role assignment schedules backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleAssignmentScheduleInstancesPerMinuteBackupCount": {
            "description": "Average number of unified role assignment schedule instances backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleDefinitionsPerMinuteBackupCount": {
            "description": "Average number of ARM role definitions backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleEligibilitySchedulePerMinuteBackupCount": {
            "description": "Average number of unified role eligibility schedules backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleEligibilityScheduleInstancePerMinuteBackupCount": {
            "description": "Average number of unified role eligibility schedule instances backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgCpuConsumptionCount": {
            "description": "Average CPU consumption.",
            "type": "integer",
            "format": "int32"
          },
          "avgRamConsumptionMb": {
            "description": "Average RAM consuption in MB.",
            "type": "integer",
            "format": "int32"
          },
          "vbrReservedRamConsumptionMb": {
            "description": "The amount of RAM the Load Calculator reserves for Veeam Backup & Replication.",
            "type": "integer",
            "format": "int32"
          },
          "resourcesConsumptionSoftIssueThreshold": {
            "description": "Soft threshold for resource consumption.",
            "type": "integer",
            "format": "int32"
          },
          "resourcesConsumptionHardIssueThreshold": {
            "description": "Hard threshold for resource consumption.",
            "type": "integer",
            "format": "int32"
          },
          "tenantRestoreCpuConsumption": {
            "description": "CPU consumption for tenant restore.",
            "type": "number",
            "format": "double"
          },
          "tenantRestorePercentage": {
            "description": "Tenant restore percentage.",
            "type": "number",
            "format": "double"
          },
          "cpuAllocationForBackup": {
            "description": "CPU allocation for tenant backup.",
            "type": "number",
            "format": "double"
          },
          "cpuAllocationForRestore": {
            "description": "CPU allocation for tenant restore.",
            "type": "number",
            "format": "double"
          },
          "dummyAzureTenantId": {
            "description": "ID assigned by Microsoft Entra to a dummy tenant used by the Load Calculator for statistics collection. The tenant is added to Veeam Backup & Replication.",
            "type": "string",
            "format": "uuid"
          },
          "tenantReservationLifetimeMinutes": {
            "description": "Tenant time reservation, in minutes.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LoadCalculatorConfigurationResponse": {
        "required": [
          "avgAdministrativeUnitsPerMinuteBackupCount",
          "avgArmRoleAssignmentsPerMinuteBackupCount",
          "avgApplicationsPerMinuteBackupCount",
          "avgConditionalAccessPoliciesPerMinuteBackupCount",
          "avgGroupsPerMinuteBackupCount",
          "avgSchemaExtensionsPerMinuteBackupCount",
          "avgServicePrincipalsPerMinuteBackupCount",
          "avgUsersPerMinuteBackupCount",
          "avgUnifiedRoleAssignmentsPerMinuteBackupCount",
          "avgUnifiedRoleAssignmentSchedulesPerMinuteBackupCount",
          "avgUnifiedRoleAssignmentScheduleInstancesPerMinuteBackupCount",
          "avgUnifiedRoleDefinitionsPerMinuteBackupCount",
          "avgUnifiedRoleEligibilitySchedulePerMinuteBackupCount",
          "avgUnifiedRoleEligibilityScheduleInstancePerMinuteBackupCount",
          "avgCpuConsumptionCount",
          "avgRamConsumptionMb",
          "vbrReservedRamConsumptionMb",
          "resourcesConsumptionSoftIssueThreshold",
          "resourcesConsumptionHardIssueThreshold",
          "tenantRestoreCpuConsumption",
          "tenantRestorePercentage",
          "cpuAllocationForBackup",
          "cpuAllocationForRestore",
          "dummyAzureTenantId",
          "tenantReservationLifetimeMinutes"
        ],
        "type": "object",
        "properties": {
          "avgAdministrativeUnitsPerMinuteBackupCount": {
            "description": "Average number of administrative units backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgArmRoleAssignmentsPerMinuteBackupCount": {
            "description": "Average number of ARM role assignments backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgApplicationsPerMinuteBackupCount": {
            "description": "Average number of applications backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgConditionalAccessPoliciesPerMinuteBackupCount": {
            "description": "Average number of conditional access policies backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgGroupsPerMinuteBackupCount": {
            "description": "Average number of groups backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgSchemaExtensionsPerMinuteBackupCount": {
            "description": "Average number of schema extensions backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgServicePrincipalsPerMinuteBackupCount": {
            "description": "Average number of service principals backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUsersPerMinuteBackupCount": {
            "description": "Average number of users backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleAssignmentsPerMinuteBackupCount": {
            "description": "Average number of unified role assignments backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleAssignmentSchedulesPerMinuteBackupCount": {
            "description": "Average number of unified role assignment schedules backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleAssignmentScheduleInstancesPerMinuteBackupCount": {
            "description": "Average number of unified role assignment schedule instances backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleDefinitionsPerMinuteBackupCount": {
            "description": "Average number of ARM role definitions backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleEligibilitySchedulePerMinuteBackupCount": {
            "description": "Average number of unified role eligibility schedules backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgUnifiedRoleEligibilityScheduleInstancePerMinuteBackupCount": {
            "description": "Average number of unified role eligibility schedule instances backed up in a minute.",
            "type": "integer",
            "format": "int32"
          },
          "avgCpuConsumptionCount": {
            "description": "Average CPU consumption.",
            "type": "integer",
            "format": "int32"
          },
          "avgRamConsumptionMb": {
            "description": "Average RAM consuption in MB.",
            "type": "integer",
            "format": "int32"
          },
          "vbrReservedRamConsumptionMb": {
            "description": "The amount of RAM the Load Calculator reserves for Veeam Backup & Replication.",
            "type": "integer",
            "format": "int32"
          },
          "resourcesConsumptionSoftIssueThreshold": {
            "description": "Soft threshold for resource consumption.",
            "type": "integer",
            "format": "int32"
          },
          "resourcesConsumptionHardIssueThreshold": {
            "description": "Hard threshold for resource consumption.",
            "type": "integer",
            "format": "int32"
          },
          "tenantRestoreCpuConsumption": {
            "description": "CPU consumption for tenant restore.",
            "type": "number",
            "format": "double"
          },
          "tenantRestorePercentage": {
            "description": "Tenant restore percentage.",
            "type": "number",
            "format": "double"
          },
          "cpuAllocationForBackup": {
            "description": "CPU allocation for tenant backup.",
            "type": "number",
            "format": "double"
          },
          "cpuAllocationForRestore": {
            "description": "CPU allocation for tenant restore.",
            "type": "number",
            "format": "double"
          },
          "dummyAzureTenantId": {
            "description": "ID assigned by Microsoft Entra to a dummy tenant used by the Load Calculator for statistics collection. The tenant is added to Veeam Backup & Replication.",
            "type": "string",
            "format": "uuid"
          },
          "tenantReservationLifetimeMinutes": {
            "description": "Tenant time reservation, in minutes.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TenantReservationRequest": {
        "required": [
          "azureTenantId"
        ],
        "type": "object",
        "properties": {
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "minLength": 1,
            "type": "string"
          },
          "applicationId": {
            "description": "Application ID.",
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "TenantReservationResponse": {
        "required": [
          "azureTenantId"
        ],
        "type": "object",
        "properties": {
          "azureTenantId": {
            "description": "Tenant ID assigned by Microsoft Entra ID.",
            "minLength": 1,
            "type": "string"
          },
          "expiration": {
            "description": "Date and time when the tenant reservation expires.",
            "type": "string",
            "format": "date-time"
          },
          "calculatedConsumption": {
            "$ref": "#/components/schemas/TenantLoadCalculatorResponse"
          }
        }
      }
    },
    "parameters": {
      "apiVersionParam": {
        "name": "x-api-version",
        "description": "Version and revision of the client REST API. Must be in the following format&#58; `<version>-<revision>`.",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "default": "1.2-rev0"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "Access token specified in the following format&#58; `Bearer <access token>`."
      }
    },
    "examples": {
      "AgentFlrRestoreToSpecExample": {
        "summary": "Restoring files and folders to a protected computer",
        "value": {
          "sourcePath": [
            "/home/sheiladcory"
          ],
          "restoreType": "Overwrite",
          "credentialsId": "c0940fba-7c6e-445e-bea3-c0fa20e9ef15",
          "targetHost": {
            "type": "Agent",
            "protectedComputerId": "g74c6a02-e4fc-4a5c-a783-16a9ec783717"
          },
          "targetPath": "/home/sheiladcory/temp01"
        }
      },
      "AllBackupObjectsResultExample": {
        "summary": "Array of backup objects",
        "value": {
          "data": [
            {
              "platformName": "Vcd",
              "id": "cd1d334e-e4fc-4a5c-a783-16a9ec783717",
              "name": "App1",
              "type": "NfcDir",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "restorePointsCount": 9
            },
            {
              "platformName": "HyperV",
              "id": "b74c6a02-e540-4a5c-8eac-e34550614b35",
              "name": "appsrv001",
              "type": "VM",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "restorePointsCount": 3
            },
            {
              "platformName": "Vcd",
              "id": "0d1d4c69-a22d-414e-a9ab-8f03125c430a",
              "name": "vApp02",
              "type": "NfcDir",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "restorePointsCount": 10
            },
            {
              "viType": "VirtualMachine",
              "objectId": "vm-2067",
              "path": "vcenter01.tech.local\\Prague\\Templates\\Manual\\win10_pro",
              "platformName": "VMware",
              "id": "8cc1503d-c191-41dc-97a6-d748aff9cad4",
              "name": "win10_pro",
              "type": "Template",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "restorePointsCount": 1
            },
            {
              "viType": "VirtualMachine",
              "objectId": "vm-11864",
              "path": "vcenter01.tech.local\\Prague\\prgtwesx01.tech.local\\Enterprise\\winsp01",
              "platformName": "VMware",
              "id": "8c6b5a4e-8b47-4b02-9c2a-898cb7359e52",
              "name": "winsp01",
              "type": "VM",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "restorePointsCount": 22
            }
          ],
          "pagination": {
            "total": 5,
            "count": 5,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "AzureBlobRepositoryModelExample": {
        "summary": "Microsoft Azure Blob storage",
        "value": {
          "taskLimitEnabled": true,
          "maxTaskCount": 2,
          "account": {
            "regionType": "Global",
            "credentialsId": "566566ee-2378-4498-94433-b2bc21e69b03",
            "connectionSettings": {
              "connectionType": "Direct",
              "gatewayServerIds": [
                "6745a759-2205-4cd2-b172-8ec8f7e60ef8"
              ]
            }
          },
          "container": {
            "containerName": "container01",
            "folderName": "folder01",
            "storageConsumptionLimit": {
              "consumptionLimitKind": "TB",
              "isEnabled": true,
              "consumptionLimitCount": 10
            }
          },
          "proxyAppliance": null,
          "mountServer": {
            "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
            "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
            "vPowerNFSEnabled": true,
            "vPowerNFSPortSettings": {
              "mountPort": 1063,
              "vPowerNFSPort": 2049
            }
          },
          "type": "AzureBlob",
          "id": "31ff6538-f3e2-4c92-a756-3f450ba920ac",
          "name": "Azure Blob Storage",
          "description": "Created by TECH\\sheila.d.cory",
          "uniqueId": "31FF6538F3E24C92A7563F450BA920AC"
        }
      },
      "BackupContentMountModelExample": {
        "summary": "Details about a specific published disk",
        "value": {
          "mountState": "Mounted",
          "id": "bce89e03-9269-4cb0-aa49-c8b04d4273d5",
          "initiatorName": "SRV99\\Administrator",
          "backupId": "bdc74451-8719-4a66-9791-21a4bbd2d048",
          "backupName": "Backup Job 1 - linbase01",
          "restorePointId": "170bcae5-f2c4-4547-972e-15349aa04609",
          "restorePointName": "linbase01",
          "info": {
            "mode": "Fuse",
            "serverPort": 0,
            "serverIps": [
              "172.24.28.134"
            ],
            "disks": [
              {
                "diskId": "FA4DAB4887080CBCFBA9028A72BD9BF2",
                "diskName": "/tmp/Veeam.Mount.Disks.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_1",
                "accessLink": "",
                "mountPoints": [
                  "/tmp/Veeam.Mount.FS.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_2/boot/efi"
                ]
              },
              {
                "diskId": "FA4DAB4887080CBCFBA9028A72BD9BF2",
                "diskName": "/tmp/Veeam.Mount.Disks.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_2",
                "accessLink": "",
                "mountPoints": [
                  "/tmp/Veeam.Mount.FS.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_2"
                ]
              }
            ]
          }
        }
      },
      "BackupContentMountsResultExample": {
        "summary": "Details about published disks",
        "value": {
          "data": [
            {
              "mountState": "Mounted",
              "id": "bce89e03-9269-4cb0-aa49-c8b04d4273d5",
              "initiatorName": "SRV99\\Administrator",
              "backupId": "bdc74451-8719-4a66-9791-21a4bbd2d048",
              "backupName": "Backup Job 1 - linbase01",
              "restorePointId": "170bcae5-f2c4-4547-972e-15349aa04609",
              "restorePointName": "linbase01",
              "info": {
                "mode": "Fuse",
                "serverPort": 0,
                "serverIps": [
                  "172.24.28.134"
                ],
                "disks": [
                  {
                    "diskId": "FA4DAB4887080CBCFBA9028A72BD9BF2",
                    "diskName": "/tmp/Veeam.Mount.Disks.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_1",
                    "accessLink": "",
                    "mountPoints": [
                      "/tmp/Veeam.Mount.FS.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_2/boot/efi"
                    ]
                  },
                  {
                    "diskId": "FA4DAB4887080CBCFBA9028A72BD9BF2",
                    "diskName": "/tmp/Veeam.Mount.Disks.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_2",
                    "accessLink": "",
                    "mountPoints": [
                      "/tmp/Veeam.Mount.FS.01e91972-4e66-4787-84b5-efc189508544/linbase01-flat.vmdk_2"
                    ]
                  }
                ]
              }
            },
            {
              "mountState": "Mounted",
              "id": "a9d62797-30ed-4fa2-8c28-b8938394ded9",
              "initiatorName": "SRV99\\Administrator",
              "backupId": "ac713f71-d48c-48c2-b1b1-ea597209e3d6",
              "backupName": "Backup Job 2 - winsrv88",
              "restorePointId": "807f0ca2-c2c0-46ae-b759-df510585459d",
              "restorePointName": "winsrv88",
              "info": {
                "mode": "ISCSI",
                "serverPort": 3260,
                "serverIps": [
                  "172.24.30.84"
                ],
                "disks": [
                  {
                    "diskId": "EA828485D1655DE79ED5F2144CDE1B6E",
                    "diskName": "08d37a90-09cd-42b8-9f98-c582c1ec6c8f (vm-1059)\\winsrv88_1-flat.vmdk",
                    "accessLink": "iqn.2006-06.com.veeam:winsrv88.a9d6279730ed4fa28c28b8938394ded9:LUN(0)",
                    "mountPoints": [
                      "C:\\VeeamFLR\\winsrv88_436398fa\\Volume0"
                    ]
                  }
                ]
              }
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 2
          }
        }
      },
      "BackupFileModelExample": {
        "summary": "Backup file preview",
        "value": {
          "id": "bfe4ce8a-a41e-4a86-aae6-1471fac1bb31",
          "name": "C:\\Backup\\SRV99_Administrator\\linbase02 AgentBackupJob\\AgentBackupJob_2024-11-06T003020.vib",
          "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
          "objectId": "00000000-0000-0000-0000-000000000000",
          "restorePointIds": [
            "ab3361d3-df80-474d-b23f-ea9a498b9e8c"
          ],
          "dataSize": 1203845162,
          "backupSize": 520585216,
          "dedupRatio": 81,
          "compressRatio": 53,
          "creationTime": "2024-11-06T00:30:20",
          "gfsPeriods": [
            "None"
          ]
        }
      },
      "BackupFilesResultExample": {
        "summary": "Array of backup files",
        "value": {
          "data": [
            {
              "id": "bfe4ce8a-a41e-4a86-aae6-1471fac1bb31",
              "name": "C:\\Backup\\SRV99_Administrator\\linbase02 AgentBackupJob\\AgentBackupJob_2024-11-06T003020.vib",
              "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
              "objectId": "00000000-0000-0000-0000-000000000000",
              "restorePointIds": [
                "ab3361d3-df80-474d-b23f-ea9a498b9e8c"
              ],
              "dataSize": 1203845162,
              "backupSize": 520585216,
              "dedupRatio": 81,
              "compressRatio": 53,
              "creationTime": "2024-11-06T00:30:20",
              "gfsPeriods": [
                "None"
              ]
            },
            {
              "id": "599b962d-6e8b-456f-a2eb-ca734686ff20",
              "name": "C:\\Backup\\SRV99_Administrator\\linbase02 AgentBackupJob\\AgentBackupJob_2024-11-05T003013.vib",
              "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
              "objectId": "00000000-0000-0000-0000-000000000000",
              "restorePointIds": [
                "bdcbf817-330e-45e3-aa8c-1ab3180719c3"
              ],
              "dataSize": 1659975722,
              "backupSize": 191586304,
              "dedupRatio": 49,
              "compressRatio": 23,
              "creationTime": "2024-11-05T00:30:13",
              "gfsPeriods": [
                "None"
              ]
            },
            {
              "id": "5213d3d6-4111-4104-bf5f-6b6e972c8e25",
              "name": "C:\\Backup\\SRV99_Administrator\\linbase02 AgentBackupJob\\AgentBackupJob_2024-11-04T164443.vbk",
              "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
              "objectId": "00000000-0000-0000-0000-000000000000",
              "restorePointIds": [
                "2619492a-22e9-4e97-b5b1-3e906284e543"
              ],
              "dataSize": 21474916348,
              "backupSize": 8005099520,
              "dedupRatio": 73,
              "compressRatio": 50,
              "creationTime": "2024-11-04T16:44:43",
              "gfsPeriods": [
                "None"
              ]
            }
          ],
          "pagination": {
            "total": 3,
            "count": 3,
            "skip": null,
            "limit": null
          }
        }
      },
      "BackupJobSpecExample": {
        "summary": "Creating a backup job",
        "value": {
          "type": "Backup",
          "name": "Backup Job 3",
          "description": "Created by ENTERPRISE01\\Administrator",
          "isHighPriority": false,
          "virtualMachines": {
            "includes": [
              {
                "type": "ResourcePool",
                "vcName": "vcenter01.tech.local",
                "name": "ResourcePool01",
                "objectId": "resgroup-32774"
              }
            ],
            "excludes": {
              "vms": [
                {
                  "type": "VirtualMachine",
                  "vcName": "vcenter01.tech.local",
                  "name": "srv01",
                  "objectId": "vm-34739"
                },
                {
                  "type": "VirtualMachine",
                  "vcName": "vcenter01.tech.local",
                  "name": "srv02",
                  "objectId": "vm-32843"
                }
              ],
              "disks": [
                {
                  "disksToProcess": "SelectedDisks",
                  "vmObject": {
                    "type": "ResourcePool",
                    "vcName": "vcenter01.tech.local",
                    "name": "ResourcePool01",
                    "objectId": "resgroup-32774"
                  },
                  "disks": [
                    "SCSI 0:0 (2000)",
                    "IDE 0:0 (3000)"
                  ]
                }
              ],
              "templates": {
                "isEnabled": true,
                "excludeFromIncremental": false
              }
            }
          },
          "storage": {
            "backupRepositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
            "backupProxies": {
              "autoSelectEnabled": true,
              "proxyIds": []
            },
            "retentionPolicy": {
              "type": "RestorePoints",
              "quantity": 7
            },
            "gfsPolicy": {
              "isEnabled": false,
              "weekly": {
                "desiredTime": "sunday",
                "isEnabled": false,
                "keepForNumberOfWeeks": 1
              },
              "monthly": {
                "desiredTime": "First",
                "isEnabled": false,
                "keepForNumberOfMonths": 1
              },
              "yearly": {
                "desiredTime": "January",
                "isEnabled": false,
                "keepForNumberOfYears": 1
              }
            },
            "advancedSettings": {
              "backupModeType": "Incremental",
              "synthenticFulls": {
                "isEnabled": true,
                "days": [
                  "saturday"
                ]
              },
              "activeFulls": {
                "isEnabled": true,
                "weekly": {
                  "isEnabled": true,
                  "days": [
                    "saturday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "monday",
                  "dayNumberInMonth": "First",
                  "isEnabled": false,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "backupHealth": {
                "isEnabled": true,
                "weekly": {
                  "isEnabled": false,
                  "days": [
                    "friday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "monday",
                  "dayNumberInMonth": "First",
                  "isEnabled": true,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "fullBackupMaintenance": {
                "RemoveData": {
                  "isEnabled": false,
                  "afterDays": 14
                },
                "defragmentAndCompact": {
                  "isEnabled": false,
                  "weekly": {
                    "isEnabled": false,
                    "days": [
                      "saturday"
                    ]
                  },
                  "monthly": {
                    "dayOfWeek": "saturday",
                    "dayNumberInMonth": "Last",
                    "isEnabled": true,
                    "dayOfMonths": 1,
                    "months": [
                      "January",
                      "February",
                      "March",
                      "April",
                      "May",
                      "June",
                      "July",
                      "August",
                      "September",
                      "October",
                      "November",
                      "December"
                    ]
                  }
                }
              },
              "storageData": {
                "compressionLevel": "Optimal",
                "storageOptimization": "LocalTarget",
                "inlineDataDedupEnabled": true,
                "excludeSwapFileBlocks": true,
                "excludeDeletedFileBlocks": true,
                "encryption": {
                  "isEnabled": false,
                  "passwordId": "00000000-0000-0000-0000-000000000000"
                }
              },
              "notifications": {
                "sendSNMPNotifications": true,
                "emailNotifications": {
                  "notificationType": null,
                  "isEnabled": false,
                  "recipients": [],
                  "customNotificationSettings": null
                },
                "vmAttribute": {
                  "isEnabled": false,
                  "notes": "Notes",
                  "appendToExistingValue": true
                }
              },
              "vSphere": {
                "enableVMWareToolsQuiescence": false,
                "changedBlockTracking": {
                  "isEnabled": true,
                  "enableCBTautomatically": true,
                  "resetCBTonActiveFull": true
                }
              },
              "storageIntegration": {
                "isEnabled": true,
                "processedVmsLimitEnabled": true,
                "processedVmsCount": 13,
                "failoverToStandardBackup": true
              },
              "scripts": {
                "preCommand": {
                  "periodicityType": "BackupSessions",
                  "isEnabled": false,
                  "command": "",
                  "runScriptEvery": 1,
                  "dayOfWeek": [
                    "saturday"
                  ]
                },
                "postCommand": {
                  "periodicityType": "BackupSessions",
                  "isEnabled": false,
                  "command": "",
                  "runScriptEvery": 1,
                  "dayOfWeek": [
                    "saturday"
                  ]
                }
              }
            }
          },
          "guestProcessing": {
            "appAwareProcessing": {
              "isEnabled": true,
              "appSettings": [
                {
                  "vss": "requireSuccess",
                  "transactionLogs": "process",
                  "vmObject": {
                    "type": "ResourcePool",
                    "vcName": "vcenter01.tech.local",
                    "name": "ResourcePool01",
                    "objectId": "resgroup-32774"
                  },
                  "sql": {
                    "logsProcessing": "backup",
                    "retainLogBackups": "untilBackupDeleted",
                    "backupMinsCount": 15,
                    "keepDaysCount": null,
                    "logShippingServers": {
                      "autoSelection": true,
                      "shippingServerIds": []
                    }
                  },
                  "oracle": {
                    "archiveLogs": "deleteExpiredGBs",
                    "retainLogBackups": "untilBackupDeleted",
                    "useGuestCredentials": false,
                    "credentialsId": "a1b84070-9767-4f47-99cd-e25f57cd65dc",
                    "deleteHoursCount": null,
                    "deleteGBsCount": 10240,
                    "backupLogs": true,
                    "backupMinsCount": 23,
                    "keepDaysCount": 15,
                    "logShippingServers": {
                      "autoSelection": true,
                      "shippingServerIds": []
                    }
                  },
                  "exclusions": {
                    "exclusionPolicy": "disabled",
                    "itemsList": []
                  },
                  "scripts": {
                    "scriptProcessingMode": "disableExec",
                    "windowsScripts": null,
                    "linuxScripts": null
                  }
                }
              ]
            },
            "guestFSIndexing": {
              "isEnabled": true,
              "indexingSettings": [
                {
                  "vmObject": {
                    "type": "ResourcePool",
                    "vcName": "vcenter01.tech.local",
                    "name": "ResourcePool01",
                    "objectId": "resgroup-32774"
                  },
                  "WindowsIndexing": {
                    "guestFSIndexingMode": "indexAllExcept",
                    "indexingList": [
                      "%windir%",
                      "%ProgramFiles%",
                      "%ProgramFiles(x86)%",
                      "%ProgramW6432%",
                      "%TEMP%"
                    ]
                  },
                  "LinuxIndexing": {
                    "guestFSIndexingMode": "indexAllExcept",
                    "indexingList": [
                      "/cdrom",
                      "/dev",
                      "/media",
                      "/mnt",
                      "/proc",
                      "/tmp",
                      "/lost+found"
                    ]
                  }
                }
              ]
            },
            "guestInteractionProxies": {
              "autoSelectEnabled": true,
              "proxyIds": []
            },
            "guestCredentials": {
              "windowsCredsId": "a1b84070-9767-4f47-99cd-e25f57cd65dc",
              "linuxCredsId": "00000000-0000-0000-0000-000000000000",
              "credentialsPerMachine": [
                {
                  "windowsCredsId": "a1b84070-9767-4f47-99cd-e25f57cd65dc",
                  "linuxCredsId": "00000000-0000-0000-0000-000000000000",
                  "vmObject": {
                    "type": "ResourcePool",
                    "vcName": "vcenter01.tech.local",
                    "name": "ResourcePool01",
                    "objectId": "resgroup-32774"
                  }
                }
              ]
            }
          },
          "schedule": {
            "isEnabled": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "10:00",
              "days": [
                "sunday",
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "10:00",
              "dayOfMonth": 1,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 0,
              "continuously": {
                "BackupWindow": {
                  "days": [
                    {
                      "day": "monday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "tuesday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "wednesday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "thursday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "friday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "saturday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "sunday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    }
                  ]
                }
              }
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "WindowSetting": {
                "days": [
                  {
                    "day": "monday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "tuesday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "wednesday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "thursday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "friday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "saturday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "sunday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  }
                ]
              }
            }
          }
        }
      },
      "BackupModelExample": {
        "summary": "Backup",
        "value": {
          "platformName": "VMware",
          "id": "9d4c348d-284a-480d-9340-6454998fa227",
          "jobId": "301450bc-34cd-4d2c-bfc3-8d269bb471be",
          "policyUniqueId": "",
          "name": "AD Backup",
          "platformId": "00000000-0000-0000-0000-000000000000",
          "creationTime": "2023-02-12T04:24:32.087+03:00",
          "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
        }
      },
      "BackupObjectModelExample": {
        "summary": "Backup object",
        "value": {
          "viType": "VirtualMachine",
          "objectId": "vm-69191",
          "path": "vcenter01.tech.local\\Atlanta\\esx04.tech.local\\Enterprise\\winsrv88",
          "platformName": "VmWare",
          "id": "fcea73fa-aa48-45e1-89e4-6e33411e8de2",
          "name": "winsrv88",
          "type": "VM",
          "platformId": "00000000-0000-0000-0000-000000000000",
          "restorePointsCount": 13
        }
      },
      "BackupObjectsResultExample": {
        "summary": "Array of backup objects",
        "value": {
          "data": [
            {
              "viType": "VirtualMachine",
              "objectId": "503",
              "path": "172.17.42.92\\DLDC",
              "platformName": "VMware",
              "id": "2a192b21-4d32-4b94-829e-231e8f0c0355",
              "name": "DLDC",
              "type": "VM",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "restorePointsCount": 3
            }
          ],
          "pagination": {
            "total": 1,
            "count": 1,
            "skip": 0,
            "limit": 1
          }
        }
      },
      "BackupsResultExample": {
        "summary": "Array of backups",
        "value": {
          "data": [
            {
              "platformName": "VMware",
              "id": "f3b0fbc5-01cf-4464-976a-4881e6eda067",
              "jobId": "53b87378-7958-477d-8def-fbe6740d4b6f",
              "policyUniqueId": "",
              "name": "Oracle Backup",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-02-12T04:24:16.2+03:00",
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
            },
            {
              "platformName": "CustomPlatform",
              "id": "b2f9f40f-7944-498f-baff-175e18558829",
              "jobId": "00000000-0000-0000-0000-000000000000",
              "policyUniqueId": "",
              "name": "Oracle Backup",
              "platformId": "c8098b32-9700-459b-b27c-4dceaf4ea932",
              "creationTime": "2023-11-13T16:34:21+03:00",
              "repositoryId": "49607f55-4cc4-4ea5-a2c9-e750318d0f34"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "CapacityLicenseWorkloadModelExample": {
        "summary": "Unstructured data workload with revoked instance license",
        "value": {
          "workloads": [
            {
              "name": "winsrv88:/C:\\Shares\\nfs_share",
              "usedCapacityTb": 0,
              "type": "FileShare",
              "instanceId": "0405a174-dc1a-473a-a2cf-b5b1c8b1b620"
            }
          ]
        }
      },
      "CapacityLicenseWorkloadResultExample": {
        "summary": "Array of workloads that consume capacity",
        "value": {
          "workloads": [
            {
              "type": "FileShare",
              "name": "winsrv88:/C:\\Shares\\nfs_share",
              "usedCapacityTb": 0,
              "instanceId": "0405a174-dc1a-473a-a2cf-b5b1c8b1b620"
            }
          ]
        }
      },
      "CertificateModelExample": {
        "summary": "Backup server certificate settings",
        "value": {
          "thumbprint": "4E916B201930CD9AE44C20019F87F2A4EF227303",
          "serialNumber": "65FFC0E36A66B2BA40EF93AF47C2EF7D",
          "keyAlgorithm": "RSA-PKCS1-KeyEx",
          "keySize": "2048",
          "subject": "CN=Veeam Backup Server Certificate",
          "issuedTo": "Veeam Backup Server Certificate",
          "issuedBy": "Veeam Backup Server Certificate",
          "validFrom": "2023-03-17T19:53:54+01:00",
          "validBy": "2031-03-17T19:53:54+01:00"
        }
      },
      "CloudDirectorBackupJobModelExample": {
        "summary": "VMware Cloud Director backup job",
        "value": {
          "isHighPriority": true,
          "virtualMachines": {
            "includes": [
              {
                "type": "vApp",
                "hostName": "prgclouddirector02.tech.local",
                "name": "vApp01",
                "objectId": "urn:vcloud:vapp:12871a90-c43a-445e-a9d0-819d54030295",
                "urn": null,
                "platform": "CloudDirector",
                "size": "0 B"
              },
              {
                "type": "vApp",
                "hostName": "prgclouddirector02.tech.local",
                "name": "vApp02",
                "objectId": "urn:vcloud:vapp:09026019-ad19-478f-bb33-d9248d92db94",
                "urn": null,
                "platform": "CloudDirector",
                "size": "0 B"
              }
            ],
            "excludes": {
              "vms": [
                {
                  "type": "VirtualMachine",
                  "hostName": "prgclouddirector02.tech.local",
                  "name": "vm02",
                  "objectId": "urn:vcloud:vm:1715149f-c9dc-4f44-b2ba-bcb0a838b3d8",
                  "urn": null,
                  "platform": "CloudDirector",
                  "size": "0 B"
                },
                {
                  "type": "VirtualMachine",
                  "hostName": "prgclouddirector02.tech.local",
                  "name": "vm03",
                  "objectId": "urn:vcloud:vm:a8814d8a-9937-4296-b605-dd1a0a4370cb",
                  "urn": null,
                  "platform": "CloudDirector",
                  "size": "0 B"
                }
              ],
              "disks": [
                {
                  "disksToProcess": "AllDisks",
                  "vmObject": {
                    "type": "vApp",
                    "hostName": "prgclouddirector02.tech.local",
                    "name": "vApp01",
                    "objectId": "urn:vcloud:vapp:12871a90-c43a-445e-a9d0-819d54030295",
                    "urn": null,
                    "platform": "CloudDirector",
                    "size": "0 B"
                  },
                  "disks": [],
                  "removeFromVMConfiguration": true
                },
                {
                  "disksToProcess": "AllDisks",
                  "vmObject": {
                    "type": "vApp",
                    "hostName": "prgclouddirector02.tech.local",
                    "name": "vApp02",
                    "objectId": "urn:vcloud:vapp:09026019-ad19-478f-bb33-d9248d92db94",
                    "urn": null,
                    "platform": "CloudDirector",
                    "size": "0 B"
                  },
                  "disks": [],
                  "removeFromVMConfiguration": true
                }
              ],
              "templates": {
                "isEnabled": true,
                "excludeFromIncremental": true
              }
            }
          },
          "storage": {
            "backupRepositoryId": "3c5557b1-71e8-4508-8dce-4e743b294ef5",
            "backupProxies": {
              "autoSelection": true,
              "proxyIds": []
            },
            "retentionPolicy": {
              "type": "Days",
              "quantity": 7
            },
            "gfsPolicy": {
              "isEnabled": true,
              "weekly": {
                "desiredTime": "monday",
                "isEnabled": true,
                "keepForNumberOfWeeks": 1
              },
              "monthly": {
                "desiredTime": "Second",
                "isEnabled": true,
                "keepForNumberOfMonths": 1
              },
              "yearly": {
                "desiredTime": "April",
                "isEnabled": true,
                "keepForNumberOfYears": 1
              }
            },
            "advancedSettings": {
              "backupModeType": "Incremental",
              "synthenticFulls": {
                "isEnabled": true,
                "weekly": {
                  "isEnabled": true,
                  "days": [
                    "saturday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "monday",
                  "dayNumberInMonth": "First",
                  "isEnabled": false,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "activeFulls": {
                "isEnabled": true,
                "weekly": {
                  "isEnabled": true,
                  "days": [
                    "saturday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "monday",
                  "dayNumberInMonth": "First",
                  "isEnabled": false,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "backupHealth": {
                "isEnabled": false,
                "weekly": {
                  "isEnabled": false,
                  "days": [
                    "saturday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "saturday",
                  "dayNumberInMonth": "Last",
                  "isEnabled": true,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "fullBackupMaintenance": {
                "RemoveData": {
                  "isEnabled": false,
                  "afterDays": 14
                },
                "defragmentAndCompact": {
                  "isEnabled": false,
                  "weekly": {
                    "isEnabled": false,
                    "days": [
                      "saturday"
                    ]
                  },
                  "monthly": {
                    "dayOfWeek": "saturday",
                    "dayNumberInMonth": "Last",
                    "isEnabled": true,
                    "dayOfMonths": 1,
                    "months": [
                      "January",
                      "February",
                      "March",
                      "April",
                      "May",
                      "June",
                      "July",
                      "August",
                      "September",
                      "October",
                      "November",
                      "December"
                    ]
                  }
                }
              },
              "storageData": {
                "compressionLevel": "Optimal",
                "storageOptimization": "LocalTarget",
                "enableInlineDataDedup": true,
                "excludeSwapFileBlocks": true,
                "excludeDeletedFileBlocks": true,
                "encryption": {
                  "encryptionType": "ByUserPassword",
                  "isEnabled": false,
                  "encryptionPasswordId": null,
                  "encryptionPasswordTag": null,
                  "kmsServerId": null
                }
              },
              "notifications": {
                "sendSNMPNotifications": true,
                "emailNotifications": {
                  "notificationType": null,
                  "isEnabled": false,
                  "recipients": [],
                  "customNotificationSettings": null
                },
                "vmAttribute": {
                  "isEnabled": false,
                  "notes": "Notes",
                  "appendToExisitingValue": true
                }
              },
              "vSphere": {
                "enableVMWareToolsQuiescence": false,
                "changedBlockTracking": {
                  "isEnabled": true,
                  "enableCBTautomatically": true,
                  "resetCBTonActiveFull": true
                }
              },
              "storageIntegration": {
                "isEnabled": true,
                "limitProcessedVm": false,
                "limitProcessedVmCount": 10,
                "failoverToStandardBackup": false
              },
              "scripts": {
                "periodicityType": "BackupSessions",
                "preCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "postCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "runScriptEvery": 1,
                "dayOfWeek": [
                  "saturday"
                ]
              }
            }
          },
          "guestProcessing": {
            "appAwareProcessing": {
              "isEnabled": false,
              "appSettings": []
            },
            "guestFSIndexing": {
              "isEnabled": true,
              "indexingSettings": []
            },
            "guestInteractionProxies": {
              "autoSelection": true,
              "proxyIds": []
            },
            "guestCredentials": {
              "credsType": "Standard",
              "credsId": "a3389336-d9c1-445d-9f3c-c24020c6d009",
              "credentialsPerMachine": []
            }
          },
          "schedule": {
            "runAutomatically": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "21:00",
              "days": [
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday",
                "sunday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "22:00",
              "dayOfMonth": 1,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 1,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              },
              "startTimeWithinAnHour": 0
            },
            "continuously": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            },
            "afterThisJob": {
              "isEnabled": false,
              "jobName": null
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            }
          },
          "type": "CloudDirectorBackup",
          "id": "153d52d4-1595-489a-8c7a-8b9c9d083bab",
          "name": "Organization01 Backup",
          "description": "Created by TECH\\sheila.d.cory",
          "isDisabled": false
        }
      },
      "ConfigBackupModelExample": {
        "summary": "Configuration backup",
        "value": {
          "isEnabled": true,
          "backupRepositoryId": "d4b5e196-f3ad-474c-99bc-dfef051dae07",
          "restorePointsToKeep": 10,
          "notifications": {
            "SNMPEnabled": true,
            "SMTPSettings": {
              "settingsType": "Custom",
              "isEnabled": false,
              "recipients": [],
              "subject": "[%JobResult%] %JobName% (%Time%)",
              "notifyOnSuccess": true,
              "notifyOnWarning": true,
              "notifyOnError": true
            }
          },
          "schedule": {
            "isEnabled": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "10:00",
              "days": [
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday",
                "sunday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "10:00",
              "dayOfMonth": 1,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            }
          },
          "lastSuccessfulBackup": {
            "lastSuccessfulTime": "2024-01-21T10:00:35.033+01:00",
            "sessionId": "a8f1b5ba-a6dc-416d-9b17-95e92c0d7e76"
          },
          "encryption": {
            "isEnabled": true,
            "passwordId": "ebf6c20f-7126-4186-a1b8-24e6c541161c"
          }
        }
      },
      "ConfigurationBackupSessionModelExample": {
        "summary": "ConfigurationBackup session",
        "value": {
          "sessionType": "ConfigurationBackup",
          "state": "Starting",
          "id": "d20f79d1-962d-4cb1-809b-0364c5b90696",
          "name": "Backup Configuration Job",
          "jobId": "99d1bf3d-e2e0-4bec-b2b3-820c0b87d212",
          "creationTime": "2024-01-26T17:13:29.097+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": null,
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0
        }
      },
      "ConfigurationResynchronizeSessionModelExample": {
        "summary": "ConfigurationResynchronize session",
        "value": {
          "sessionType": "ConfigurationResynchronize",
          "state": "Stopped",
          "id": "3491ffcf-082e-4a1c-8a2b-e77bd4d1c291",
          "name": "Configuration Database Resynchronize",
          "activityId": "3491ffcf-082e-4a1c-8a2b-e77bd4d1c291",
          "creationTime": "2023-10-26T15:14:28.085236+02:00",
          "endTime": "2023-10-26T15:14:33.679242+02:00",
          "progressPercent": 100,
          "result": {
            "result": "Success",
            "message": "Success",
            "isCanceled": false
          },
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0
        }
      },
      "ConnectionCertificateModelExample": {
        "summary": "Certificate settings",
        "value": {
          "fingerprint": null,
          "certificate": {
            "thumbprint": "1FFB549DC6C6CFF4DA8923F3E640F88925D11704",
            "serialNumber": "00CE2401CE350B143C",
            "keyAlgorithm": "RSA-PKCS1-KeyEx",
            "keySize": "2048",
            "subject": "C=US, CN=vcenter01.tech.local",
            "issuedTo": "vcenter01.tech.local",
            "issuedBy": "CA",
            "validFrom": "2015-08-21T18:28:05+02:00",
            "validBy": "2025-08-15T18:27:45+02:00"
          }
        }
      },
      "CustomizedInstantViVMRecoverySpecExample": {
        "summary": "Instant Recovery to a custom location",
        "value": {
          "restorePointId": "af75ddaa-d680-4c50-ac82-07834a007707",
          "type": "Customized",
          "vmTagsRestoreEnabled": true,
          "secureRestore": {
            "antivirusScanEnabled": true,
            "virusDetectionAction": "DisableNetwork",
            "entireVolumeScanEnabled": true
          },
          "nicsEnabled": false,
          "powerUp": true,
          "reason": "Instant Recovery to VMware vSphere",
          "destination": {
            "restoredVmName": "apache04-ir",
            "destinationHost": {
              "type": "Host",
              "hostName": "vcenter01.tech.local",
              "name": "prgtwesx01.tech.local",
              "objectId": "host-1008",
              "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008",
              "platform": "VMware",
              "size": "N/A"
            },
            "folder": {
              "type": "Folder",
              "hostName": "vcenter01.tech.local",
              "name": "PragueVM",
              "objectId": "group-v2048",
              "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-v1002;folder:group-v2048",
              "platform": "VMware",
              "size": "N/A"
            },
            "resourcePool": {
              "type": "ResourcePool",
              "hostName": "vcenter01.tech.local",
              "name": "Enterprise",
              "objectId": "resgroup-1023",
              "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008;resourcepool:resgroup-1023",
              "platform": "VMware",
              "size": "N/A"
            },
            "biosUuidPolicy": "preserve"
          },
          "datastore": {
            "redirectEnabled": true,
            "cacheDatastore": {
              "type": "Datastore",
              "hostName": "vcenter01.tech.local",
              "name": "prgtwesx01-ds01",
              "objectId": "datastore-1253",
              "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;datastore:datastore-1253",
              "platform": "VMware",
              "size": "16.2 TB"
            }
          },
          "overwrite": false
        }
      },
      "DataIntegrationAPIStartSessionModelExample": {
        "summary": "Publishing disk",
        "value": {
          "sessionType": "PublishBackupContentViaMount",
          "state": "Starting",
          "platformName": "VMware",
          "id": "cc5de5c2-3ce4-4b67-af45-3733c3fc0a1e",
          "name": "linbase01",
          "jobId": "2597af5d-0645-401c-ae7c-db663c35597e",
          "creationTime": "2024-11-15T13:01:29.905514+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": {
            "result": "None",
            "message": "",
            "isCanceled": false
          },
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 16087,
          "platformId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "DataIntegrationAPIUnpublishSessionModelExample": {
        "summary": "Unpublishing disk",
        "value": {
          "sessionType": "PublishBackupContentViaMount",
          "state": "Working",
          "platformName": null,
          "id": "cc5de5c2-3ce4-4b67-af45-3733c3fc0a1e",
          "name": "linbase01",
          "jobId": "2597af5d-0645-401c-ae7c-db663c35597e",
          "creationTime": "2024-11-15T13:01:29.905514+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": {
            "result": "None",
            "message": "",
            "isCanceled": null
          },
          "resourceId": "cc5de5c2-3ce4-4b67-af45-3733c3fc0a1e",
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0,
          "platformId": null
        }
      },
      "DrivesFlrBrowseFolderSpecExample": {
        "summary": "Browsing disks on a Microsoft Windows machine",
        "value": {
          "path": ""
        }
      },
      "EncryptionPasswordChangeSpecExample": {
        "summary": "Encryption password",
        "value": {
          "hint": "Pet name",
          "password": "passsw3wrsdf2d44"
        }
      },
      "EncryptionPasswordModelExample": {
        "summary": "Encryption password",
        "value": {
          "id": "86e99ee0-3673-48d6-bf6a-9a8058d4de96",
          "hint": "Pet name",
          "modificationTime": "2023-02-13T02:22:40.801982-08:00",
          "uniqueId": "vcenter01"
        }
      },
      "EncryptionPasswordSpecExample": {
        "summary": "Creating an encryption password",
        "value": {
          "password": "passsw3wrsdf2d44",
          "hint": "Pet name",
          "uniqueId": "vcenter01"
        }
      },
      "EncryptionPasswordsResultExample": {
        "summary": "Array of encryption passwords",
        "value": {
          "data": [
            {
              "id": "6ebbe3cc-8147-47b6-b77a-01eeb7965522",
              "hint": "Standard Password",
              "modificationTime": "2023-10-19T12:37:58.27+03:00",
              "uniqueId": "internal"
            },
            {
              "id": "3261d360-1db7-4291-b1ed-360ef5b77175",
              "hint": "Created by TECH\\Administrator",
              "modificationTime": "2024-02-11T11:34:28.677+03:00",
              "uniqueId": "external"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "EntraIDAuditLogBackupJobModelExample": {
        "summary": "Entra ID audit log backup job",
        "value": {
          "description": "Microsoft Entra ID audit logs backup job",
          "isHighPriority": true,
          "tenant": {
            "tenantId": "a1401206-5c01-4586-aa81-573aeb027b6d"
          },
          "storage": {
            "backupRepositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
            "sourceBackupId": null,
            "retentionPolicy": {
              "type": "Months",
              "quantity": 6
            },
            "advancedSettings": {
              "storageData": {
                "compressionLevel": "Optimal",
                "encryption": {
                  "encryptionType": "ByUserPassword",
                  "isEnabled": false,
                  "encryptionPasswordId": null,
                  "encryptionPasswordUniqueId": null,
                  "kmsServerId": null
                }
              },
              "backupHealth": {
                "isEnabled": true,
                "weekly": {
                  "isEnabled": true,
                  "days": [
                    "friday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "saturday",
                  "dayNumberInMonth": "Last",
                  "isEnabled": false,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "scripts": {
                "periodicityType": "BackupSessions",
                "preCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "postCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "runScriptEvery": 1,
                "dayOfWeek": [
                  "saturday"
                ]
              },
              "notifications": {
                "sendSNMPNotifications": true,
                "emailNotifications": {
                  "notificationType": "UseGlobalNotificationSettings",
                  "isEnabled": true,
                  "recipients": [
                    "sheila.d.cory@tech.local,william.fox@tech.local"
                  ],
                  "customNotificationSettings": null
                }
              }
            }
          },
          "schedule": {
            "runAutomatically": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "22:00",
              "days": [
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday",
                "sunday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "22:00",
              "dayOfMonth": null,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 1,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              },
              "startTimeWithinAnHour": 0
            },
            "continuously": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            },
            "afterThisJob": {
              "isEnabled": false,
              "jobName": null
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            }
          },
          "type": "EntraIDAuditLogBackup",
          "id": "6b5ddcae-947c-4028-84d8-8ce1c26ba052",
          "name": "Tenant 1 Audit Log Backup",
          "isDisabled": false
        }
      },
      "EntraIDAuditLogBackupJobSpecExample": {
        "summary": "Creating an Entra ID audit log backup job",
        "value": {
          "name": "Tenant 1 Audit Log Backup",
          "type": "EntraIDAuditLogBackup",
          "description": "Microsoft Entra ID audit logs backup job",
          "isHighPriority": true,
          "tenant": {
            "tenantId": "a1401206-5c01-4586-aa81-573aeb027b6d"
          },
          "storage": {
            "backupRepositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
            "retentionPolicy": {
              "type": "Months",
              "quantity": 6
            },
            "advancedSettings": {
              "storageData": {
                "compressionLevel": "Optimal",
                "encryption": {
                  "isEnabled": false
                }
              },
              "backupHealth": {
                "isEnabled": true,
                "weekly": {
                  "isEnabled": true,
                  "days": [
                    "friday"
                  ]
                }
              },
              "scripts": null,
              "notifications": {
                "sendSNMPNotifications": true,
                "emailNotifications": {
                  "notificationType": "UseGlobalNotificationSettings",
                  "isEnabled": true,
                  "recipients": [
                    "sheila.d.cory@tech.local",
                    "william.fox@tech.local"
                  ]
                }
              }
            }
          },
          "schedule": {
            "runAutomatically": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "10:00",
              "days": [
                "sunday",
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "10:00",
              "dayOfMonth": 1,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 0,
              "continuously": {
                "BackupWindow": {
                  "days": [
                    {
                      "day": "monday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "tuesday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "wednesday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "thursday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "friday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "saturday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "sunday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    }
                  ]
                }
              }
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "WindowSetting": {
                "days": [
                  {
                    "day": "monday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "tuesday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "wednesday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "thursday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "friday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "saturday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "sunday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  }
                ]
              }
            }
          }
        }
      },
      "EntraIDTenantBackupJobSpecExample": {
        "summary": "Creating an Entra ID tenant backup job",
        "value": {
          "name": "Tenant 1 Backup",
          "type": "EntraIDTenantBackup",
          "description": "Microsoft Entra ID tenant backup job",
          "storage": {
            "tenantId": "a1401206-5c01-4586-aa81-573aeb027b6d",
            "retentionPolicy": {
              "type": "RestorePoints",
              "quantity": 7
            },
            "advancedSettings": {
              "notifications": {
                "sendSNMPNotifications": true,
                "emailNotifications": {
                  "notificationType": null,
                  "isEnabled": true,
                  "recipients": [
                    "sheila.d.cory@tech.local",
                    "william.fox@tech.local"
                  ],
                  "customNotificationSettings": null
                },
                "encryption": {
                  "isEnabled": false
                }
              }
            }
          },
          "schedule": {
            "runAutomatically": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "10:00",
              "days": [
                "sunday",
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "10:00",
              "dayOfMonth": 1,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 0,
              "continuously": {
                "BackupWindow": {
                  "days": [
                    {
                      "day": "monday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "tuesday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "wednesday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "thursday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "friday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "saturday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    },
                    {
                      "day": "sunday",
                      "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                    }
                  ]
                }
              }
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "WindowSetting": {
                "days": [
                  {
                    "day": "monday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "tuesday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "wednesday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "thursday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "friday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "saturday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  },
                  {
                    "day": "sunday",
                    "hours": "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
                  }
                ]
              }
            }
          }
        }
      },
      "EntraIDTenantBackupJobModelExample": {
        "summary": "Microsoft Entra ID tenant backup job",
        "value": {
          "description": "Microsoft Entra ID tenant backup job",
          "storage": {
            "tenantId": "a1401206-5c01-4586-aa81-573aeb027b6d",
            "retentionPolicy": {
              "type": "RestorePoints",
              "quantity": 7
            },
            "advancedSettings": {
              "notifications": {
                "sendSNMPNotifications": true,
                "emailNotifications": {
                  "notificationType": "UseGlobalNotificationSettings",
                  "isEnabled": true,
                  "recipients": [
                    "sheila.d.cory@tech.local",
                    "william.fox@tech.local"
                  ],
                  "customNotificationSettings": null
                }
              },
              "encryption": {
                "encryptionType": "ByUserPassword",
                "isEnabled": false,
                "encryptionPasswordId": null,
                "encryptionPasswordUniqueId": null,
                "kmsServerId": null
              }
            }
          },
          "schedule": {
            "runAutomatically": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "22:00",
              "days": [
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday",
                "sunday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "22:00",
              "dayOfMonth": null,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 1,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              },
              "startTimeWithinAnHour": 0
            },
            "continuously": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            },
            "afterThisJob": {
              "isEnabled": false,
              "jobName": null
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            }
          },
          "type": "EntraIDTenantBackup",
          "id": "45fa08b2-9e6a-4c19-8b8c-90e8f4413b1d",
          "name": "Tenant 1 Backup",
          "isDisabled": false
        }
      },
      "EntraIdTenantBrowseModelUserExample": {
        "summary": "Microsoft Entra ID user",
        "value": {
          "mailAddress": "test1@8bt3cp.onmicrosoft.com",
          "userName": "test1@8bt3cp.onmicrosoft.com",
          "userType": "Member",
          "employeeType": "Employee",
          "accountEnabled": true,
          "companyName": "Veeam Software",
          "creationType": null,
          "department": "Marketing",
          "country": "United States",
          "jobTitle": "Manager",
          "officeLocation": "Miami",
          "type": "User",
          "id": "fee6a1c9-6f07-4729-bf46-d3d4f45c7ad0",
          "displayName": "Test 1",
          "restorePointId": "e41b1345-a565-4db8-82f5-0632403630e8",
          "restorePointDate": "2024-10-15T22:11:26.218187+02:00"
        }
      },
      "EntraIdTenantBrowseModelGroupExample": {
        "summary": "Microsoft Entra ID group",
        "value": {
          "groupType": "SecurityGroup",
          "membershipType": "Assigned",
          "description": "Our first test group",
          "archived": null,
          "mailEnabled": true,
          "visibility": "Public",
          "type": "Group",
          "id": "5c923c24-effd-4e66-bc6f-cf0b9b9fba84",
          "displayName": "Test Group 1",
          "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
          "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
        }
      },
      "EntraIdTenantBrowseModelAdminUnitExample": {
        "summary": "Microsoft Entra ID administrative unit",
        "value": {
          "visibility": "Public",
          "description": "Description 1",
          "type": "AdminUnit",
          "id": "f2143f59-6f46-40c5-ba00-6cc2be23a210",
          "displayName": "Unit 1",
          "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
          "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
        }
      },
      "EntraIdTenantBrowseModelRoleExample": {
        "summary": "Microsoft Entra ID role",
        "value": {
          "isBuiltIn": false,
          "isEnabled": true,
          "description": "Update properties of application registrations",
          "type": "Role",
          "id": "11766790-99c7-486a-8d5b-58f45a3effde",
          "displayName": "Role 1",
          "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
          "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
        }
      },
      "EntraIdTenantBrowseModelApplicationExample": {
        "summary": "Microsoft Entra ID application",
        "value": {
          "applicationType": "AppRegistration",
          "enabled": true,
          "tags": [],
          "description": null,
          "type": "Application",
          "id": "674b69a9-f288-46fd-babe-a172ddff0c6c",
          "displayName": "VeeamAzureApp5",
          "restorePointId": "cc5ada33-8c22-41d4-b559-87adcdabb2ee",
          "restorePointDate": "2024-10-17T22:11:50.974832+02:00"
        }
      },
      "EntraIdTenantBrowseModelConditionalAccessPolicyExample": {
        "summary": "Microsoft Entra ID conditional access policy",
        "value": {
          "type": "ConditionalAccessPolicy",
          "id": "674b69a9-f288-46fd-babe-a172ddff0c6c",
          "displayName": "VeeamAzureConditionalAccess",
          "restorePointId": "cc5ada33-8c22-41d4-b559-87adcdabb2ee",
          "restorePointDate": "2024-10-17T22:11:50.974832+02:00"
        }
      },
      "EntraIdTenantBrowseMountModelExample": {
        "summary": "Microsoft Entra ID tenant mount point",
        "value": {
          "sessionId": "783241eb-5b56-4456-9736-379206ffc600",
          "sourceProperties": {
            "backupId": "61a85b62-41a9-4421-aa4f-568e3989fed8",
            "tenantId": "46101a50-1c07-4e11-a249-6dc349fbf909",
            "tenantName": "Tenant 1"
          }
        }
      },
      "EntraIdTenantBrowseMountResultExample": {
        "summary": "Mount points for Microsoft Entra ID tenants",
        "value": {
          "data": [
            {
              "sessionId": "783241eb-5b56-4456-9736-379206ffc600",
              "sourceProperties": {
                "backupId": "61a85b62-41a9-4421-aa4f-568e3989fed8",
                "tenantId": "46101a50-1c07-4e11-a249-6dc349fbf909",
                "tenantName": "MSFT2"
              }
            },
            {
              "sessionId": "b3f568b0-88e0-4c3f-9a78-86ea4072976e",
              "sourceProperties": {
                "backupId": "61a85b62-41a9-4421-aa4f-568e3989fed8",
                "tenantId": "46101a50-1c07-4e11-a249-6dc349fbf909",
                "tenantName": "MSFT2"
              }
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "EntraIdTenantBrowseSpecApplicationExample": {
        "summary": "Microsoft Entra ID applications",
        "value": {
          "type": "Application",
          "filter": {
            "displayName": "Veeam",
            "includedTypes": [
              "EnterpriseRegistration"
            ]
          },
          "sorting": {
            "property": "displayName",
            "direction": "ascending"
          }
        }
      },
      "EntraIdTenantBrowseSpecAdminUnitExample": {
        "summary": "Microsoft Entra ID administrative units",
        "value": {
          "type": "AdminUnit",
          "filter": {
            "visibilities": [
              "Public"
            ]
          },
          "sorting": {
            "property": "displayName",
            "direction": "ascending"
          }
        }
      },
      "EntraIdTenantBrowseSpecGroupExample": {
        "summary": "Microsoft Entra ID groups",
        "value": {
          "type": "Group",
          "filter": {
            "groupTypes": [
              "SecurityGroup",
              "MailEnabledSecurityGroup"
            ]
          },
          "sorting": {
            "property": "displayName",
            "direction": "ascending"
          }
        }
      },
      "EntraIdTenantBrowseSpecRoleExample": {
        "summary": "Microsoft Entra ID roles",
        "value": {
          "type": "Role",
          "filter": {
            "isBuiltIn": false,
            "isEnabled": true
          },
          "sorting": {
            "property": "displayName",
            "direction": "ascending"
          }
        }
      },
      "EntraIdTenantBrowseSpecUserExample": {
        "summary": "Microsoft Entra ID users",
        "value": {
          "type": "User",
          "filter": {
            "department": "Marketing"
          },
          "sorting": {
            "property": "userName",
            "direction": "ascending"
          }
        }
      },
      "EntraIdTenantBrowseSpecConditionalAccessPolicyExample": {
        "summary": "Microsoft Entra ID conditional access policies",
        "value": {
          "type": "ConditionalAccessPolicy",
          "filter": {
            "displayName": "Veeam"
          },
          "sorting": {
            "property": "displayName",
            "direction": "ascending"
          }
        }
      },
      "EntraIdTenantBrowseResultUserExample": {
        "summary": "Microsoft Entra ID users",
        "value": {
          "data": [
            {
              "mailAddress": "test1@8bt3cp.onmicrosoft.com",
              "userName": "test1@8bt3cp.onmicrosoft.com",
              "userType": "Member",
              "employeeType": "Employee",
              "accountEnabled": true,
              "companyName": "Veeam Software",
              "creationType": null,
              "department": "Marketing",
              "country": "United States",
              "jobTitle": "Manager",
              "officeLocation": "Miami",
              "type": "User",
              "id": "fee6a1c9-6f07-4729-bf46-d3d4f45c7ad0",
              "displayName": "Test 1",
              "restorePointId": "e41b1345-a565-4db8-82f5-0632403630e8",
              "restorePointDate": "2024-10-15T22:11:26.218187+02:00"
            },
            {
              "mailAddress": "test2@8bt3cp.onmicrosoft.com",
              "userName": "test2@8bt3cp.onmicrosoft.com",
              "userType": "Guest",
              "employeeType": "Contractor",
              "accountEnabled": true,
              "companyName": "Veeam Software",
              "creationType": null,
              "department": "Marketing",
              "country": "United States",
              "jobTitle": "Specialist",
              "officeLocation": null,
              "type": "User",
              "id": "8d9c14c9-822b-4b9d-ba1c-531275f1c6c6",
              "displayName": "Test 2",
              "restorePointId": "e41b1345-a565-4db8-82f5-0632403630e8",
              "restorePointDate": "2024-10-15T22:11:26.218187+02:00"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "EntraIdTenantBrowseResultGroupExample": {
        "summary": "Microsoft Entra ID groups",
        "value": {
          "data": [
            {
              "groupType": "SecurityGroup",
              "membershipType": "Assigned",
              "description": "Our first test group",
              "archived": null,
              "mailEnabled": true,
              "visibility": "Public",
              "type": "Group",
              "id": "5c923c24-effd-4e66-bc6f-cf0b9b9fba84",
              "displayName": "Test Group 1",
              "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
              "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
            },
            {
              "groupType": "SecurityGroup",
              "membershipType": "Assigned",
              "description": "Our second test group",
              "archived": null,
              "mailEnabled": false,
              "visibility": "Private",
              "type": "Group",
              "id": "ad01d5df-a796-4781-81a1-37264cd6de0b",
              "displayName": "Test Group 2",
              "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
              "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "EntraIdTenantBrowseResultAdminUnitExample": {
        "summary": "Microsoft Entra ID administrative units",
        "value": {
          "data": [
            {
              "visibility": "Public",
              "description": "Description 1",
              "type": "AdminUnit",
              "id": "f2143f59-6f46-40c5-ba00-6cc2be23a210",
              "displayName": "Unit 1",
              "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
              "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
            },
            {
              "visibility": "Public",
              "description": "Description 2",
              "type": "AdminUnit",
              "id": "a9e01ce9-da91-455d-bf12-881ec1e420b7",
              "displayName": "Unit 2",
              "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
              "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "EntraIdTenantBrowseResultRoleExample": {
        "summary": "Microsoft Entra ID roles",
        "value": {
          "data": [
            {
              "isBuiltIn": false,
              "isEnabled": true,
              "description": "Update properties of application registrations",
              "type": "Role",
              "id": "11766790-99c7-486a-8d5b-58f45a3effde",
              "displayName": "Role 1",
              "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
              "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
            },
            {
              "isBuiltIn": false,
              "isEnabled": false,
              "description": "Read custom security attribute keys and values",
              "type": "Role",
              "id": "7b0df540-1e7c-4c91-badd-095ce0ad055a",
              "displayName": "Role 2",
              "restorePointId": "34aa2791-09f4-432b-8c61-84080dc5e710",
              "restorePointDate": "2024-10-16T22:14:49.089469+02:00"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "EntraIdTenantBrowseResultApplicationExample": {
        "summary": "Microsoft Entra ID applications",
        "value": {
          "data": [
            {
              "applicationType": "AppRegistration",
              "enabled": true,
              "tags": [],
              "description": null,
              "type": "Application",
              "id": "674b69a9-f288-46fd-babe-a172ddff0c6c",
              "displayName": "VeeamAzureApp5",
              "restorePointId": "cc5ada33-8c22-41d4-b559-87adcdabb2ee",
              "restorePointDate": "2024-10-17T22:11:50.974832+02:00"
            },
            {
              "applicationType": "EnterpriseRegistration",
              "enabled": true,
              "tags": [],
              "description": null,
              "type": "Application",
              "id": "21147b36-913d-4e69-bf3c-924935bc72dc",
              "displayName": "VeeamAzureApp9",
              "restorePointId": "cc5ada33-8c22-41d4-b559-87adcdabb2ee",
              "restorePointDate": "2024-10-17T22:11:50.974832+02:00"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "EntraIdTenantBrowseResultConditionalAccessPolicyExample": {
        "summary": "Microsoft Entra ID conditional access policies",
        "value": {
          "data": [
            {
              "type": "ConditionalAccessPolicy",
              "id": "674b69a9-f288-46fd-babe-a172ddff0c6c",
              "displayName": "ConditionalAccessPolicy1",
              "restorePointId": "cc5ada33-8c22-41d4-b559-87adcdabb2ee",
              "restorePointDate": "2025-02-20T22:02:03.617717+01:00",
              "state": "Enabled"
            },
            {
              "type": "ConditionalAccessPolicy",
              "id": "a014d6c1-8a26-4cda-85fb-ff71eefd0366",
              "displayName": "ConditionalAccessPolicy2",
              "restorePointId": "cc5ada33-8c22-41d4-b559-87adcdabb2ee",
              "restorePointDate": "2025-02-20T22:02:03.617717+01:00",
              "state": "EnabledForReportingButNotEnforced"
            }
          ],
          "pagination": {
            "total": 1,
            "count": 1,
            "skip": null,
            "limit": null
          }
        }
      },
      "EntraIdTenantCheckProductionItemsSpecExample": {
        "summary": "Checking that items exist in production",
        "value": {
          "items": [
            {
              "itemId": "10b501ed-7f68-4b07-a620-92b2d654623d",
              "restorePointId": "8c843d10-6d0f-4abe-b898-e1ba18b94f68"
            },
            {
              "itemId": "dc6e5ce8-b6d2-49de-9d13-7c0eee3a419c",
              "restorePointId": "8c843d10-6d0f-4abe-b898-e1ba18b94f68"
            },
            {
              "itemId": "492e3eec-ae57-4fab-898f-34c8bba4cc7b",
              "restorePointId": "8c843d10-6d0f-4abe-b898-e1ba18b94f68"
            }
          ]
        }
      },
      "EntraIdTenantGeneratedPasswordsModelExample": {
        "summary": "Generated user passwords",
        "value": {
          "passwords": [
            "JQ1Ir3z*?vt@",
            "=2z_q)Xvq#Rr",
            "{;%&x:rQ`x7k",
            "f3bQs'V(A>:V",
            "^&N79@-&pH Z"
          ]
        }
      },
      "EntraIdTenantGeneratePasswordSpecExample": {
        "summary": "Generating passwords for Microsoft Entra ID users",
        "value": {
          "passwordsCount": 5
        }
      },
      "EntraIdTenantItemRestoreSpecExample": {
        "summary": "Restoring Microsoft Entra ID users",
        "value": {
          "items": [
            {
              "itemId": "6bc5249e-897b-4ba0-989e-2e273f5d0cd2",
              "restorePointId": "8c843d10-6d0f-4abe-b898-e1ba18b94f68"
            },
            {
              "itemId": "a5943423-2255-469e-8270-ed91e35bd2ec",
              "restorePointId": "8c843d10-6d0f-4abe-b898-e1ba18b94f68"
            }
          ],
          "skipRelationships": "false",
          "skipRecycleBinRestore": "true",
          "skipObjectsIfExist": "false",
          "requestPasswordChangeOnLogon": "true",
          "usersPasswords": [
            {
              "userId": "6bc5249e-897b-4ba0-989e-2e273f5d0cd2",
              "password": "JQ1Ir3z*?vt@"
            },
            {
              "userId": "a5943423-2255-469e-8270-ed91e35bd2ec",
              "password": "=2z_q)Xvq#Rr"
            }
          ],
          "reason": "Restore corrupted items"
        }
      },
      "EntraIDTenantModelExample": {
        "summary": "Microsoft Entra ID tenant",
        "value": {
          "region": "Global",
          "id": "a1401206-5c01-4586-aa81-573aeb027b6d",
          "azureTenantId": "00000000-0000-0000-0000-000000000000",
          "description": "Tenant 1",
          "cacheRepositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
          "authentication": {
            "applicationId": "00000000-0000-0000-0000-000000000000",
            "secret": null,
            "certificate": null
          }
        }
      },
      "EntraIdTenantRestorePointSpecExample": {
        "summary": "Getting 5 restore points ascendingly ordered by restore point date",
        "value": {
          "limit": 5,
          "sorting": {
            "property": "creationTime",
            "direction": "ascending"
          }
        }
      },
      "EntraIdTenantRestorePointsResultExample": {
        "summary": "Restore points of a Microsoft Entra ID tenant",
        "value": {
          "data": [
            {
              "id": "8004f69b-c462-4412-bfd8-ea697052ea61",
              "creationTime": "2024-10-23T15:33:52.557121+02:00"
            },
            {
              "id": "2add5743-0e45-43c1-afc3-85ed5f3a3071",
              "creationTime": "2024-10-23T22:01:36.529336+02:00"
            },
            {
              "id": "8ffeea88-a439-4f27-8be8-8815ca1122f1",
              "creationTime": "2024-10-24T22:01:49.87691+02:00"
            },
            {
              "id": "92b88093-f439-4e74-93ca-f736b66aab01",
              "creationTime": "2024-10-25T22:02:12.513235+02:00"
            },
            {
              "id": "d67eabe0-c5f1-40d9-835b-954f9b7e4b9c",
              "creationTime": "2024-10-26T22:01:40.239859+02:00"
            }
          ],
          "pagination": {
            "total": 7,
            "count": 5,
            "skip": 0,
            "limit": 5
          }
        }
      },
      "EntraIdTenantRestoreSessionModelExample": {
        "summary": "Restore session for Microsoft Entra ID items",
        "value": {
          "state": "Running",
          "id": "0faf31e6-e6e8-43ea-95b4-1acacbe916c4",
          "name": "RestoreTenant",
          "creationTime": "2024-11-15T16:23:23.2885294+01:00",
          "endTime": "0001-01-01T00:00:00",
          "reason": "Restore corrupted users.",
          "parentSessionId": "b47e4f57-176f-4196-b6db-783c05729828"
        }
      },
      "EntraIDTenantSpecExistingAppExample": {
        "summary": "Adding Microsoft Entra ID tenant with an existing app registration",
        "value": {
          "azureTenantId": "00000000-0000-0000-0000-000000000000",
          "cacheRepositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
          "creationMode": "existingAccount",
          "description": "Tenant 1",
          "region": "Global",
          "existingAccount": {
            "authentication": {
              "applicationId": "00000000-0000-0000-0000-000000000000",
              "secret": 0
            }
          }
        }
      },
      "EntraIDTenantSpecNewAppExample": {
        "summary": "Adding Microsoft Entra ID tenant with a new app registration",
        "value": {
          "azureTenantId": "00000000-0000-0000-0000-000000000000",
          "cacheRepositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
          "creationMode": "newAccount",
          "description": "Tenant 1",
          "region": "Global",
          "newAccount": {
            "verificationCode": "D8Q2S9KU3"
          }
        }
      },
      "EntraIdTenantValidateModelExample": {
        "summary": "Missing items",
        "value": {
          "data": [
            {
              "itemType": "Group",
              "itemId": "10b501ed-7f68-4b07-a62a-92b2d654623d",
              "displayName": "HR"
            }
          ],
          "pagination": {
            "total": 1,
            "count": 1,
            "skip": null,
            "limit": null
          }
        }
      },
      "EntraIdTenantValidateSpecExample": {
        "summary": "Validating that items exist in a restore point",
        "value": {
          "restorePointId": "d67eabe0-c5f1-40d9-835b-954f9b7e4b9c",
          "itemIds": [
            "10b501ed-7f68-4b07-a62a-92b2d654623d",
            "dc6e5ce8-b6d2-49de-9d13-7c0eee3a419c",
            "492e3eec-ae57-4fab-898f-34c8bba4cc7b"
          ]
        }
      },
      "FailoverSessionsResultExample": {
        "summary": "Array of Failover sessions",
        "value": {
          "data": [
            {
              "sessionType": "Failover",
              "state": "Starting",
              "id": "18b5ac5f-56b6-4456-8e19-9164cf5f4c56",
              "name": "apache04",
              "activityId": "938c8559-3224-45da-9349-162e621001c7",
              "creationTime": "2023-10-31T14:00:29.789665+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            },
            {
              "sessionType": "Failover",
              "state": "Starting",
              "id": "48bc7815-68a7-49ea-8e46-af75448921d3",
              "name": "apache05",
              "activityId": "7e767329-a1af-4fa0-9de5-197b67d3627a",
              "creationTime": "2023-10-31T14:00:30.117769+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "FingerprintConnectionCertificateModelExample": {
        "summary": "SSH fingerprint settings",
        "value": {
          "fingerprint": "ssh-rsa 3072 KCR7SAh1JAqLNVgFaPcL6uEBS72dX+brNJKsjXov22M",
          "certificate": null
        }
      },
      "FlrBrowseMountResultExample": {
        "summary": "Array of file restore mount points",
        "value": {
          "data": [
            {
              "type": "Linux",
              "sessionId": "1dc723e8-12a0-4480-bc34-6cb117d3d4a1",
              "properties": {
                "pathSeparator": "/"
              },
              "sourceProperties": {
                "machineName": "ubuntu88",
                "restorePointName": "ubuntu88"
              }
            },
            {
              "type": "Windows",
              "sessionId": "f031db1c-8294-4ace-b6f1-bb7e299e9e53",
              "properties": {
                "pathSeparator": "\\"
              },
              "sourceProperties": {
                "machineName": "winsp01",
                "restorePointName": "winsp01"
              }
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "FlrCompareAttributesModelExample": {
        "summary": "Compared attributes",
        "value": {
          "path": "C:\\Users\\sheila.d.cory\\Documents",
          "attributes": [
            {
              "name": "Attributes",
              "valueBackup": "ReadOnly, Directory",
              "valueProduction": "ReadOnly, Directory",
              "isChanged": false
            },
            {
              "name": "CreateDateUtc",
              "valueBackup": "7/25/2023 6:31:51 PM",
              "valueProduction": "7/25/2023 6:31:51 PM",
              "isChanged": false
            },
            {
              "name": "ModifyDateUtc",
              "valueBackup": "11/7/2023 3:28:12 PM",
              "valueProduction": "11/7/2023 3:28:12 PM",
              "isChanged": false
            },
            {
              "name": "IsArchived",
              "valueBackup": "False",
              "valueProduction": "False",
              "isChanged": false
            },
            {
              "name": "IsCollected",
              "valueBackup": "True",
              "valueProduction": "True",
              "isChanged": false
            },
            {
              "name": "IsEncrypted",
              "valueBackup": "False",
              "valueProduction": "False",
              "isChanged": false
            },
            {
              "name": "IsHidden",
              "valueBackup": "False",
              "valueProduction": "False",
              "isChanged": false
            },
            {
              "name": "IsReadonly",
              "valueBackup": "True",
              "valueProduction": "True",
              "isChanged": false
            }
          ]
        }
      },
      "FlrCompareAttributesSpecExample": {
        "summary": "Comparing attributes",
        "value": {
          "path": "C:\\Users\\sheila.d.cory\\Documents",
          "showUnchangedAttributes": true
        }
      },
      "FlrCompareToProductionSpecExample": {
        "summary": "Comparing files and folders",
        "value": {
          "IsEnabled": true,
          "paths": [
            "C:\\Users\\sheila.d.cory\\Documents",
            "C:\\Users\\sheila.d.cory\\Downloads"
          ]
        }
      },
      "FlrDownloadTaskModelExample": {
        "summary": "FlrDownload task",
        "value": {
          "additionalInfo": null,
          "type": "FlrDownload",
          "state": "Working",
          "result": "None",
          "id": "82ac5bd1-36bb-4980-b79e-0634f90c5754",
          "name": "FLR Download from VM winsp01",
          "progressPercent": 0,
          "creationTime": "2023-11-07T21:24:36.7715523+01:00",
          "endTime": null
        }
      },
      "FlrRestoreTaskModelExample": {
        "summary": "FlrRestore task",
        "value": {
          "type": "FlrRestore",
          "state": "Starting",
          "result": "None",
          "id": "aabc5716-417b-4761-94a8-59ef21113ed2",
          "name": "winsp01",
          "progressPercent": 0,
          "creationTime": "2023-11-07T18:22:17.8433688+01:00",
          "endTime": null
        }
      },
      "FlrSearchTaskModelExample": {
        "summary": "FlrSearch task",
        "value": {
          "type": "FlrSearch",
          "state": "Starting",
          "result": "None",
          "id": "32d764f7-18b0-47d9-8e34-1be27bc32d3b",
          "name": "Search files on VM winsp01",
          "progressPercent": 0,
          "creationTime": "2023-11-07T17:41:51.32221+01:00",
          "endTime": null
        }
      },
      "FlrStartSearchForSpecExample": {
        "summary": "Searching for files and folders",
        "value": {
          "path": "C:\\Users\\sheila.d.cory\\Documents",
          "searchString": "*docx"
        }
      },
      "FlrSearchForResultSpecExample": {
        "summary": "Browsing search results",
        "value": {
          "order": {
            "orderColumn": "Name"
          }
        }
      },
      "FlrSearchForResultModelExample": {
        "summary": "Search results",
        "value": {
          "path": "C:\\Users\\sheila.d.cory\\Documents",
          "searchString": "*docx",
          "items": [
            {
              "type": "File",
              "itemState": "Unchanged",
              "location": "C:\\Users\\sheila.d.cory\\Documents\\Documents for SharePoint",
              "name": "Document01.docx",
              "size": 13712,
              "creationDate": "2023-11-07T16:28:12.5685143+01:00",
              "modifiedDate": "2023-07-26T20:56:32.6357349+02:00"
            },
            {
              "type": "File",
              "itemState": "Unchanged",
              "location": "C:\\Users\\sheila.d.cory\\Documents\\Documents for SharePoint",
              "name": "Document02.docx",
              "size": 19484,
              "creationDate": "2023-11-07T16:28:12.5685143+01:00",
              "modifiedDate": "2023-07-26T20:58:48.9404094+02:00"
            },
            {
              "type": "File",
              "itemState": "Unchanged",
              "location": "C:\\Users\\sheila.d.cory\\Documents\\Documents for SharePoint",
              "name": "Document04.docx",
              "size": 13712,
              "creationDate": "2023-11-07T16:28:12.7560357+01:00",
              "modifiedDate": "2023-07-26T20:56:32.6357349+02:00"
            },
            {
              "type": "File",
              "itemState": "Unchanged",
              "location": "C:\\Users\\sheila.d.cory\\Documents\\Documents for SharePoint",
              "name": "Document06.docx",
              "size": 4897,
              "creationDate": "2023-11-07T16:28:12.7872775+01:00",
              "modifiedDate": "2023-11-07T16:36:04.413056+01:00"
            },
            {
              "type": "File",
              "itemState": "Unchanged",
              "location": "C:\\Users\\sheila.d.cory\\Documents\\Documents for SharePoint",
              "name": "Document07.docx",
              "size": 18436,
              "creationDate": "2023-11-07T16:28:12.5841302+01:00",
              "modifiedDate": "2023-07-26T20:58:19.1911861+02:00"
            }
          ],
          "pagination": {
            "total": 5,
            "count": 5,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "FlrStartDownloadSpecExample": {
        "summary": "Preparing files and folders for download",
        "value": {
          "sourcePath": [
            "C:\\Users\\sheila.d.cory\\Documents",
            "C:\\Users\\sheila.d.cory\\Downloads"
          ]
        }
      },
      "GeneralOptionsModelExample": {
        "summary": "Veeam Backup & Replication settings",
        "value": {
          "emailSettings": {
            "isEnabled": false,
            "smtpServerName": "",
            "advancedSmtpOptions": {
              "port": 25,
              "timeoutMs": 100000,
              "SSLEnabled": false,
              "authRequred": false,
              "credentialsId": null
            },
            "from": "",
            "to": "",
            "subject": "[%JobResult%] %JobName% (%ObjectCount% objects) %Issues%",
            "sendDailyReportsAt": "2023-01-01T22:00:00+01:00",
            "notifyOnSuccess": true,
            "notifyOnWarning": true,
            "notifyOnFailure": true,
            "notifyOnLastRetry": true
          },
          "notifications": {
            "storageSpaceThresholdEnabled": true,
            "storageSpaceThreshold": 10,
            "datastoreSpaceThresholdEnabled": true,
            "datastoreSpaceThreshold": 10,
            "skipVMSpaceThresholdEnabled": true,
            "skipVMSpaceThreshold": 5,
            "notifyOnSupportExpiration": true,
            "notifyOnUpdates": true
          },
          "siemIntegration": {
            "SNMPEventsEnabled": true,
            "SNMPServers": [
              {
                "receiver": "snmp01",
                "port": 5577,
                "communityString": "community_string"
              },
              {
                "receiver": "snmp02",
                "port": 5578,
                "communityString": "community_string"
              }
            ],
            "SyslogEventsEnabled": true,
            "SyslogServer": {
              "transportProtocol": "TCP",
              "serverName": "enterprise01.tech.local",
              "port": 9419,
              "certificateThumbprint": ""
            },
            "syslogEventFiltering": [
              {
                "eventId": "110",
                "severity": [
                  "Info",
                  "Warning",
                  "Error"
                ]
              },
              {
                "eventId": "150",
                "severity": [
                  "Info",
                  "Warning",
                  "Error"
                ]
              }
            ]
          }
        }
      },
      "InstanceLicenseRemoveExample": {
        "summary": "Removing instance license",
        "value": {
          "section": "Instance"
        }
      },
      "InstalledLicenseModelExample": {
        "summary": "Installed license preview",
        "value": {
          "status": "Valid",
          "type": "Subscription",
          "edition": "EnterprisePlus",
          "cloudConnect": "Enterprise",
          "expirationDate": "2024-12-31T00:00:00Z",
          "licensedTo": "Veeam Software Group GmbH",
          "socketLicenseSummary": null,
          "instanceLicenseSummary": {
            "package": "Suite",
            "licensedInstancesNumber": 100,
            "usedInstancesNumber": 2,
            "newInstancesNumber": 0,
            "rentalInstancesNumber": 0,
            "objects": [
              {
                "type": "VM",
                "count": 1,
                "multiplier": 1,
                "usedInstancesNumber": 1
              },
              {
                "type": "FileShare",
                "count": 0,
                "multiplier": 1,
                "usedInstancesNumber": 0
              },
              {
                "type": "Application",
                "count": 1,
                "multiplier": 1,
                "usedInstancesNumber": 1
              }
            ],
            "workload": [
              {
                "name": "linbase01",
                "hostName": "vcenter01.tech.local",
                "usedInstancesNumber": 1,
                "type": "VM",
                "instanceId": "d8175a8b-942c-4ddb-a36d-0690f1b875d7"
              },
              {
                "name": "WINORCL01",
                "hostName": "WINORCL01",
                "usedInstancesNumber": 1,
                "type": "Application",
                "instanceId": "71c41142-888b-bc72-c46d-74322c9b32eb"
              },
              {
                "name": "winsrv88:/C:\\Shares\\nfs_share",
                "hostName": "winsrv88",
                "usedInstancesNumber": 0,
                "type": "FileShare",
                "instanceId": "0405a174-dc1a-473a-a2cf-b5b1c8b1b620"
              }
            ],
            "promoInstancesNumber": null,
            "licensedInstancesPromoIncludedNumber": null,
            "promoExpiresOn": null
          },
          "capacityLicenseSummary": null,
          "supportId": "02067762",
          "supportExpirationDate": null,
          "autoUpdateEnabled": true,
          "freeAgentInstanceConsumptionEnabled": true
        }
      },
      "InstanceLicenseWorkloadModelExample": {
        "summary": "Details about standalone agent product edition",
        "value": {
          "name": "linbase02",
          "hostName": "Standalone",
          "usedInstancesNumber": 1,
          "type": "Server",
          "instanceId": "4225c1d4-e095-92db-d123-2d635a38c390"
        }
      },
      "InstanceLicenseWorkloadResultExample": {
        "summary": "Getting instance licenses consumption",
        "value": {
          "data": [
            {
              "name": "linbase01",
              "hostName": "vcenter01.tech.local",
              "usedInstancesNumber": 1,
              "type": "VM",
              "instanceId": "d8175a8b-942c-4ddb-a36d-0690f1b875d7"
            },
            {
              "name": "WINORCL01",
              "hostName": "WINORCL01",
              "usedInstancesNumber": 1,
              "type": "Application",
              "instanceId": "71c41142-888b-bc72-c46d-74322c9b32eb"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "GlobalNetworkTrafficRulesModelExample": {
        "summary": "Traffic rules",
        "value": {
          "useMultipleStreamsPerJob": true,
          "uploadStreamsCount": 5,
          "trafficRules": [
            {
              "throttlingUnit": "MbitPerSpec",
              "id": "622b0112-a972-49c2-9987-24a57ddc930a",
              "name": "Internet",
              "sourceIPStart": "Any",
              "sourceIPEnd": "",
              "targetIPStart": "Internet",
              "targetIPEnd": "",
              "encryptionEnabled": true,
              "throttlingEnabled": false,
              "throttlingValue": 2,
              "throttlingWindowEnabled": true,
              "throttlingWindowOptions": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            }
          ],
          "preferredNetworks": {
            "isEnabled": true,
            "networks": [
              {
                "ipAddress": "124.0.0.0",
                "subnetMask": "255.0.0.0",
                "cidrNotation": "8"
              },
              {
                "ipAddress": "123.0.0.0",
                "subnetMask": "255.0.0.0",
                "cidrNotation": "8"
              }
            ]
          }
        }
      },
      "GoogleCloudRepositoryModelExample": {
        "summary": "Google Cloud storage",
        "value": {
          "taskLimitEnabled": true,
          "maxTaskCount": 2,
          "account": {
            "credentialsId": "1b431f18-b81f-4c63-94ef-fdc1e51a971e",
            "regionId": "EUROPE-WEST1",
            "connectionSettings": {
              "connectionType": "Direct",
              "gatewayServerIds": [
                "6745a759-2205-4cd2-b172-8ec8f7e60ef8"
              ]
            }
          },
          "bucket": {
            "bucketName": "abor-eu-west1",
            "folderName": "folder01",
            "storageConsumptionLimit": {
              "consumptionLimitKind": "TB",
              "isEnabled": true,
              "consumptionLimitCount": 10
            },
            "nearlineStorageEnabled": false
          },
          "mountServer": {
            "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
            "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
            "vPowerNFSEnabled": true,
            "vPowerNFSPortSettings": {
              "mountPort": 1063,
              "vPowerNFSPort": 2049
            }
          },
          "type": "GoogleCloud",
          "id": "9e42401a-60ec-4a8c-9f95-f493de6f214b",
          "name": "Google Cloud",
          "description": "Created by TECH\\sheila.d.cory",
          "uniqueId": "9E42401A60EC4A8C9F95F493DE6F214B"
        }
      },
      "CertificateHostConnectionSpecExample": {
        "summary": "Getting TLS certificate",
        "value": {
          "serverName": "vcenter01.tech.local",
          "credentialsId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
          "type": "ViHost",
          "port": 443
        }
      },
      "FingerprintHostConnectionSpecExample": {
        "summary": "Getting SSH fingerprint",
        "value": {
          "serverName": "172.24.29.163",
          "credentialsStorageType": "Permanent",
          "credentialsId": "0736fcb7-e5b3-4433-9157-252633f1abf9",
          "type": "LinuxHost"
        }
      },
      "IBMCloudRepositoryModelExample": {
        "summary": "IBM Cloud storage",
        "value": {
          "taskLimitEnabled": true,
          "maxTaskCount": 2,
          "account": {
            "servicePoint": "https://example.com",
            "regionId": "us-east-1",
            "credentialsId": "ef133fa9-46c1-9431-b0bd-3ca750b83aa1",
            "connectionSettings": {
              "connectionType": "SelectedGateway",
              "gatewayServerIds": [
                "6745a759-2205-4cd2-b172-8ec8f7e60ef8"
              ]
            }
          },
          "bucket": {
            "bucketName": "d3e020df-4219-4fa3-a9gy-a83drb3f9cfa",
            "folderName": "folder01",
            "storageConsumptionLimit": {
              "consumptionLimitKind": "TB",
              "isEnabled": true,
              "consumptionLimitCount": 10
            },
            "immutability": {
              "isEnabled": false,
              "daysCount": 30
            }
          },
          "mountServer": {
            "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
            "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
            "vPowerNFSEnabled": true,
            "vPowerNFSPortSettings": {
              "mountPort": 1063,
              "vPowerNFSPort": 2049
            }
          },
          "proxyAppliance": {
            "managedServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8"
          },
          "type": "IBMCloud",
          "id": "68b95e79-6570-44bb-82d8-6f7e1f7aa159",
          "name": "IBM Cloud",
          "description": "Created by TECH\\sheila.d.cory",
          "uniqueId": "68B95E79657044BB82D86F7E1F7AA159"
        }
      },
      "InfrastructureItemDeletionSessionModelExample": {
        "summary": "InfrastructureItemDeletion session",
        "value": {
          "sessionType": "InfrastructureItemDeletion",
          "state": "Working",
          "id": "af1a6027-3845-487e-9a16-6849f4775a1e",
          "name": "Infrastructure Item Deletion",
          "jobId": "fc5683a4-8c25-4f8e-97cc-0a40745a5729",
          "creationTime": "2024-01-28T20:21:08.81+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": null,
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0
        }
      },
      "InfrastructureSessionModelExample": {
        "summary": "Infrastructure session",
        "value": {
          "sessionType": "Infrastructure",
          "state": "Working",
          "id": "59f85a1e-2016-4d08-aea5-2676a03d548c",
          "name": "Infrastructure Item Saving",
          "jobId": "59f85a1e-2016-4d08-aea5-2676a03d548c",
          "creationTime": "2024-01-28T19:48:43.117+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": null,
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0
        }
      },
      "InstantRecoverySessionModelExample": {
        "summary": "InstantRecovery session",
        "value": {
          "sessionType": "InstantRecovery",
          "state": "Working",
          "id": "2e0bf225-91b3-4005-8524-6f7971e9ac4f",
          "name": "apache05",
          "jobId": "9239c712-3c0e-49e9-ae4d-c9c6267504e0",
          "creationTime": "2024-03-07T19:31:23.07555+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": {
            "result": "Success",
            "message": "<StateXml/>",
            "isCanceled": false
          },
          "resourceId": "2e0bf225-91b3-4005-8524-6f7971e9ac4f",
          "resourceReference": "/api/v1/restore/instantRecovery/vmware/vm/2e0bf225-91b3-4005-8524-6f7971e9ac4f",
          "parentSessionId": null,
          "usn": 0
        }
      },
      "InstantViVMRecoveryMountExample": {
        "summary": "Instant Recovery VM mount point",
        "value": {
          "state": "Mounted",
          "id": "32441b29-d55c-4b20-801a-c1b17cd75d55",
          "sessionId": "32441b29-d55c-4b20-801a-c1b17cd75d55",
          "spec": {
            "type": "OriginalLocation",
            "restorePointId": "77be4f6f-66d8-4b2b-9821-1e6acce25b87",
            "vmTagsRestoreEnabled": true,
            "secureRestore": {
              "virusDetectionAction": "DisableNetwork",
              "antivirusScanEnabled": true,
              "entireVolumeScanEnabled": true
            },
            "nicsEnabled": false,
            "powerUp": true,
            "reason": "Instant Recovery to VMware vSphere"
          },
          "vmName": "apache04",
          "errorMessage": ""
        }
      },
      "InstantViVMRecoveryMountsResultExample": {
        "summary": "Array of Instant Recovery VM mount points",
        "value": {
          "data": [
            {
              "state": "Mounted",
              "id": "2e0bf225-91b3-4005-8524-6f7971e9ac4f",
              "sessionId": "2e0bf225-91b3-4005-8524-6f7971e9ac4f",
              "spec": {
                "type": "Customized",
                "restorePointId": "ae2757ca-c200-46a6-88f9-fe9b90262672",
                "vmTagsRestoreEnabled": true,
                "secureRestore": {
                  "virusDetectionAction": "DisableNetwork",
                  "antivirusScanEnabled": true,
                  "entireVolumeScanEnabled": true
                },
                "nicsEnabled": false,
                "powerUp": true,
                "reason": "IR"
              },
              "vmName": "apache05-ir",
              "errorMessage": ""
            }
          ],
          "pagination": {
            "total": 1,
            "count": 1,
            "skip": 0,
            "limit": 1
          }
        }
      },
      "JobsResultExample": {
        "summary": "Array of jobs",
        "value": {
          "data": [
            {
              "isHighPriority": false,
              "virtualMachines": {
                "includes": [
                  {
                    "inventoryObject": {
                      "type": "VirtualMachine",
                      "hostName": "vcenter01.tech.local",
                      "name": "filesrv02",
                      "objectId": "vm-45006"
                    },
                    "size": "43.5 GB"
                  }
                ],
                "excludes": {
                  "vms": [],
                  "disks": [
                    {
                      "disksToProcess": "AllDisks",
                      "vmObject": {
                        "type": "VirtualMachine",
                        "hostName": "vcenter01.tech.local",
                        "name": "filesrv02",
                        "objectId": "vm-45006"
                      },
                      "disks": [],
                      "removeFromVMConfiguration": true
                    }
                  ],
                  "templates": {
                    "isEnabled": true,
                    "excludeFromIncremental": true
                  }
                }
              },
              "storage": {
                "backupRepositoryId": "88101045-8755-4117-9221-bca81fbfabc4",
                "backupProxies": {
                  "autoSelectEnabled": true,
                  "proxyIds": []
                },
                "retentionPolicy": {
                  "type": "Days",
                  "quantity": 7
                },
                "gfsPolicy": {
                  "isEnabled": false,
                  "weekly": {
                    "desiredTime": "sunday",
                    "isEnabled": false,
                    "keepForNumberOfWeeks": 1
                  },
                  "monthly": {
                    "desiredTime": "First",
                    "isEnabled": false,
                    "keepForNumberOfMonths": 1
                  },
                  "yearly": {
                    "desiredTime": "January",
                    "isEnabled": false,
                    "keepForNumberOfYears": 1
                  }
                },
                "advancedSettings": {
                  "backupModeType": "Incremental",
                  "synthenticFulls": {
                    "isEnabled": true,
                    "days": [
                      "saturday"
                    ]
                  },
                  "activeFulls": {
                    "isEnabled": false,
                    "weekly": {
                      "isEnabled": true,
                      "days": [
                        "saturday"
                      ]
                    },
                    "monthly": {
                      "dayOfWeek": "monday",
                      "dayNumberInMonth": "First",
                      "isEnabled": false,
                      "dayOfMonths": 1,
                      "months": [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December"
                      ]
                    }
                  },
                  "backupHealth": {
                    "isEnabled": false,
                    "weekly": {
                      "isEnabled": false,
                      "days": [
                        "friday"
                      ]
                    },
                    "monthly": {
                      "dayOfWeek": "friday",
                      "dayNumberInMonth": "Last",
                      "isEnabled": true,
                      "dayOfMonths": 1,
                      "months": [
                        "January",
                        "February",
                        "March",
                        "April",
                        "May",
                        "June",
                        "July",
                        "August",
                        "September",
                        "October",
                        "November",
                        "December"
                      ]
                    }
                  },
                  "fullBackupMaintenance": {
                    "RemoveData": {
                      "isEnabled": false,
                      "afterDays": 14
                    },
                    "defragmentAndCompact": {
                      "isEnabled": false,
                      "weekly": {
                        "isEnabled": false,
                        "days": [
                          "saturday"
                        ]
                      },
                      "monthly": {
                        "dayOfWeek": "saturday",
                        "dayNumberInMonth": "Last",
                        "isEnabled": true,
                        "dayOfMonths": 1,
                        "months": [
                          "January",
                          "February",
                          "March",
                          "April",
                          "May",
                          "June",
                          "July",
                          "August",
                          "September",
                          "October",
                          "November",
                          "December"
                        ]
                      }
                    }
                  },
                  "storageData": {
                    "compressionLevel": "Optimal",
                    "storageOptimization": "LocalTarget",
                    "inlineDataDedupEnabled": true,
                    "excludeSwapFileBlocks": true,
                    "excludeDeletedFileBlocks": true,
                    "encryption": {
                      "isEnabled": false,
                      "encryptionPasswordId": "00000000-0000-0000-0000-000000000000",
                      "encryptionPasswordUniqueId": null
                    }
                  },
                  "notifications": {
                    "sendSNMPNotifications": false,
                    "emailNotifications": {
                      "notificationType": null,
                      "isEnabled": false,
                      "recipients": [],
                      "customNotificationSettings": null
                    },
                    "vmAttribute": {
                      "isEnabled": false,
                      "notes": "Notes",
                      "appendToExistingValue": true
                    }
                  },
                  "vSphere": {
                    "enableVMWareToolsQuiescence": false,
                    "changedBlockTracking": {
                      "isEnabled": true,
                      "enableCBTautomatically": true,
                      "resetCBTonActiveFull": true
                    }
                  },
                  "storageIntegration": {
                    "isEnabled": true,
                    "processedVmsLimitEnabled": false,
                    "processedVmsCount": 10,
                    "failoverToStandardBackup": false
                  },
                  "scripts": {
                    "periodicityType": "BackupSessions",
                    "preCommand": {
                      "isEnabled": false,
                      "command": ""
                    },
                    "postCommand": {
                      "isEnabled": false,
                      "command": ""
                    },
                    "runScriptEvery": 1,
                    "dayOfWeek": [
                      "saturday"
                    ]
                  }
                }
              },
              "guestProcessing": {
                "appAwareProcessing": {
                  "isEnabled": false,
                  "appSettings": []
                },
                "guestFSIndexing": {
                  "isEnabled": true,
                  "indexingSettings": [
                    {
                      "vmObject": {
                        "type": "VirtualMachine",
                        "hostName": "vcenter01.tech.local",
                        "name": "filesrv02",
                        "objectId": "vm-45006"
                      },
                      "WindowsIndexing": {
                        "guestFSIndexingMode": "indexAllExcept",
                        "indexingList": [
                          "%windir%",
                          "%ProgramFiles%",
                          "%ProgramFiles(x86)%",
                          "%ProgramW6432%",
                          "%TEMP%"
                        ]
                      },
                      "LinuxIndexing": {
                        "guestFSIndexingMode": "indexAllExcept",
                        "indexingList": [
                          "/cdrom",
                          "/dev",
                          "/media",
                          "/mnt",
                          "/proc",
                          "/tmp",
                          "/lost+found"
                        ]
                      }
                    }
                  ]
                },
                "guestInteractionProxies": {
                  "autoSelectEnabled": true,
                  "proxyIds": []
                },
                "guestCredentials": {
                  "credentialsType": "Standard",
                  "credentialsId": "4fbeb05c-c158-4510-84f3-6744554fb350",
                  "credentialsPerMachine": []
                }
              },
              "schedule": {
                "runAutomatically": true,
                "daily": {
                  "dailyKind": "Everyday",
                  "isEnabled": true,
                  "localTime": "10:00",
                  "days": [
                    "sunday",
                    "monday",
                    "tuesday",
                    "wednesday",
                    "thursday",
                    "friday",
                    "saturday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "saturday",
                  "dayNumberInMonth": "Fourth",
                  "isEnabled": false,
                  "localTime": "10:00",
                  "dayOfMonth": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                },
                "periodically": {
                  "periodicallyKind": "Hours",
                  "isEnabled": false,
                  "frequency": 1,
                  "backupWindow": {
                    "days": [
                      {
                        "day": "sunday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "monday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "tuesday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "wednesday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "thursday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "friday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "saturday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      }
                    ]
                  },
                  "startTimeWithinAnHour": 0
                },
                "continuously": {
                  "isEnabled": false,
                  "backupWindow": {
                    "days": [
                      {
                        "day": "sunday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "monday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "tuesday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "wednesday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "thursday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "friday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "saturday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      }
                    ]
                  }
                },
                "afterThisJob": {
                  "isEnabled": false,
                  "jobName": null
                },
                "retry": {
                  "isEnabled": true,
                  "retryCount": 3,
                  "awaitMinutes": 10
                },
                "backupWindow": {
                  "isEnabled": false,
                  "backupWindow": {
                    "days": [
                      {
                        "day": "sunday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "monday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "tuesday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "wednesday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "thursday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "friday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      },
                      {
                        "day": "saturday",
                        "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                      }
                    ]
                  }
                }
              },
              "type": "Backup",
              "id": "ef1f0227-80e1-40f8-b2a2-5119172d2c36",
              "name": "Backup Job 2",
              "description": "Created by ENTERPRISE01\\Administrator",
              "isDisabled": false
            }
          ],
          "pagination": {
            "total": 3,
            "count": 1,
            "skip": 0,
            "limit": 1
          }
        }
      },
      "JobSessionModelExample": {
        "summary": "Job session",
        "value": {
          "sessionType": "Job",
          "state": "Starting",
          "id": "b1380736-18a9-4fac-adfe-20abc570e8de",
          "name": "Oracle Backup",
          "jobId": "75fc491a-d158-4380-a433-ebc42a28e4df",
          "creationTime": "2024-02-04T20:46:49.067+03:00",
          "endTime": null,
          "progressPercent": 0,
          "result": null,
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0
        }
      },
      "JobStartSpecExample": {
        "summary": "Starting a job",
        "value": {
          "performActiveFull": true,
          "startChainedJobs": true
        }
      },
      "JobStatesResultExample": {
        "summary": "Array of job states",
        "value": {
          "data": [
            {
              "type": "Backup",
              "status": "running",
              "lastResult": "None",
              "workload": "vm",
              "id": "301450bc-34cd-4d2c-bfc3-8d269bb471be",
              "name": "AD Backup",
              "description": "Created by GAMMA\\Administrator",
              "lastRun": "2024-02-04T21:40:34.473+03:00",
              "nextRun": null,
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "repositoryName": "Default Backup Repository",
              "objectsCount": 1,
              "sessionId": "dc98d2df-e845-46c4-bba1-57c3d020bf36"
            },
            {
              "type": "Backup",
              "status": "inactive",
              "lastResult": "Warning",
              "workload": "vm",
              "id": "53b87378-7958-477d-8def-fbe6740d4b6f",
              "name": "Exchange Backup",
              "description": "Created by GAMMA\\Administrator",
              "lastRun": "2023-02-20T06:53:17.747+03:00",
              "nextRun": null,
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "repositoryName": "Default Backup Repository",
              "objectsCount": 1,
              "sessionId": "4c5f14a6-b883-4b83-891a-d520809e4284"
            },
            {
              "type": "Backup",
              "status": "running",
              "lastResult": "None",
              "workload": "application",
              "id": "75fc491a-d158-4380-a433-ebc42a28e4df",
              "name": "Oracle Backup",
              "description": "Created by GAMMA\\Administrator",
              "lastRun": "2024-02-04T21:40:24.96+03:00",
              "nextRun": "2024-02-05T16:00:00+03:00",
              "repositoryId": "49607f55-4cc4-4ea5-a2c9-e750318d0f34",
              "repositoryName": "Storage 3",
              "objectsCount": 1,
              "sessionId": "433d8b8b-bcb7-4ce3-986e-7bf2a3731d01"
            }
          ],
          "pagination": {
            "total": 3,
            "count": 3,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "LicenseCreateReportExample": {
        "summary": "License report preview",
        "value": {
          "products": [
            {
              "productVersion": "12.3.0.291",
              "edition": "Enterprise Plus",
              "installationId": "01d17da0-a5ee-4969-9f36-2dc80bf03ee6",
              "data": [
                {
                  "instances": {
                    "supportId": "02067762",
                    "licenseId": "11112222-1111-2222-3333-111122223333",
                    "licenseType": "Subscription",
                    "counters": [
                      {
                        "counterType": "VBR-VBR-APPLICATION-PLUGIN",
                        "multiplier": "1",
                        "instancesInGrace": "0",
                        "numberOfObjects": 1,
                        "numberOfNewObjects": 0,
                        "numberOfRentalObjects": 0,
                        "numberOfRemovedObjects": 0,
                        "consumedInstances": "1",
                        "newInstances": "0",
                        "rentalInstances": "0",
                        "removedInstances": "0",
                        "reasonForRemoval": ""
                      },
                      {
                        "counterType": "VBR-VBR-VM-VSPHERE",
                        "multiplier": "1",
                        "instancesInGrace": "0",
                        "numberOfObjects": 1,
                        "numberOfNewObjects": 0,
                        "numberOfRentalObjects": 0,
                        "numberOfRemovedObjects": 0,
                        "consumedInstances": "1",
                        "newInstances": "0",
                        "rentalInstances": "0",
                        "removedInstances": "0",
                        "reasonForRemoval": ""
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      },
      "LicenseInstallationExample": {
        "summary": "Installing license",
        "value": {
          "license": "PD94bWwgdmVyc2lvbj0iMGoeDiBlbmNvZGluZz0iVVRGLTgiPz4KPExpY2Vuc2VzPjxMaWNlbnNlPjwhW0NEQVRBW0FkZGl0aW9uYWwgU2lnbmF0dXJlPTM0NkJBRDM0NjE3QUJCOEU1NDJFQkJGQ0QyRTczMjQ4QjIzNjcwQjExQTM1MTdEODA5RURDMEQ0MERFNDJDMTU5QzZCNTdDRTRGOEUxMjA2NDE2NzQ2ODg4QjM4RDc2ODY2NzcwM0Y3NTU2NzU0MkM4MjU2NTdBOTFCREY4QkIwOEE4ODJDRkQwNjdCNjU4NjZDMjBBOTc4MjYwOURCQzg3QUQ1ODRENjU5MzczRkNGRkI5NDc5M0RGRjk2MEVCOTNGRTlFRTU4NDcxREQ3Q0U5M0JEOUM5OEIxQUM5NzI3MjRCMUIxMUM5QUM5QzUyQTdCNEQwRDcxQUI3N0RCRDY2MTY0Q0YzREUwMzJDMjBBNUZCQjdFOTMyRkI3QzRCQjM1NkI3NkJCNkM2NEVENDdGNzlDMzE1NTMzNTI3QzNERkYzMEM2QUU4RjQxRjU5MTYxOUMyQTQ1NDk4RUQwOTQwRjZDQTA4NDQ4QzgyNTcwNTg1ODM0ODNBMTdBRThCQUE1QkUyQ0UxQUM3MkJGRDcyNTY5NUZEQzI2OTM0N0U0NENENUE0ODJDMDM4QjhCQkU4RjM1MkQ5MzFGQjU2NzM4RkI5MTcwODU3QUQ2RDQ2N0RBODI4NzY2MzI4ODY4MDAxRkE1NURFRUNCMjUzMzFDRTQzMUIwNzYwNTJFNzIxNkNFODBFMkZENDk4RUQ5RUEwM0E0NzVBNzkxN0RGNzY0QUYwRkNDNUE3M0Y4N0ZGNzg5RkZGRjRGRjlEQkNFNjMyMDU3RDM0REQyNEY2RTMwNEJGMEUzMDM3NEU0RTY4MTlDMjhGMTVDMjIwRUZCODNEMjdENjQzMDdGNjkwRTA1QkM4M0U5QzFDREMwMzJCQTczMjk2RTRDQTZBMjBDMzM1RjE3NTQwRjk2NTZFOTVGMTA1NUQzQzQ5Qjk1RTIyODZCQzY1OEI2MjU4QTIxMDMyMTgxRTk5RTIzRjg1MzdDMjdFNEE4NjcxQjgwRDc5RTQ4M0U2RTZFNjRDOTkzMQpDbG91ZCBDb25uZWN0PUVudGVycHJpc2UKQ29tcGFueT1WZWVhbSBTb2Z0d2FyZSBHcm91cCBHbWJICkRlc2NyaXB0aW9uPUNvcHlyaWdodCAyMDIzIFZlZWFtIFNvZnR3YXJlIEdyb3VwIEdtYkguIEFsbCBSaWdodHMgUmVzZXJ2ZWQuIFVzZSBvZiBzb2Z0d2FyZSBpcyBnb3Zlcm5lZCBieSB0aGUgc29mdHdhcmUgbGljZW5zZSBhZ3JlZW1lbnQuCkUtbWFpbD1yZEB2ZWVhbS5jb20KSW5zdGFuY2VzPTEwMApMaWNlbnNlIElEPTExMTEyMjIyLTExMTEtMjIyMi0zMzMzLTExMTEyMjIyMzMzMwpMaWNlbnNlIGV4cGlyZXM9MzEvMTIvMjAyNApMaWNlbnNlIHR5cGU9U3Vic2NyaXB0aW9uClBhY2thZ2U9U3VpdGUKU3VwcG9ydCBJRD0wMjA2Nzc2MgpTaWduYXR1cmU9MThDMTcxN0NCMjFBNEU3QkI2RTg5Q0NDREJFMTlBQzY4N0IwNUFDMDRDNzY0RkExODI0NUQxMjgzOEQ0NjUxQjUwNTYzMUVERUNENDBBNzFGODNEQUNGNjRGNkYzQUJFOUNBMzYxMUZDNUM0NjFBNUJBMjhEM0M4RTVGMDRBMEFFQ0UyNDc2REE0MzY2RDQyRkFGQUU0MDYyN0M2RDM4ODEzOERCRDUzQzgzNzE4MEIzMkU1NEE0NDcwN0U5OENCRkJDQkVDMUM5MTExQkEyQzFBQTM2RDVDNzE4RjgxQjA2RkJEQjMzOTA5RUI1ODMxMzkxQTk4MzhDNEY5RTI0OApdXT48L0xpY2Vuc2U+PC9MaWNlbnNlcz4K"
        }
      },
      "LicenseRenewalModelExample": {
        "summary": "Getting license renewal link",
        "value": {
          "renewalUrl": "https://veeam.com/renew-online.html?buynow=eyJ2ZXJzaW9uIjoxLCJsaWNlbnNlcyI6W3sibGljZW5zZS1pZCI6ImU1ODQ1ZGE0OGViOWJmYTgwNzhlY2QwMTk1MGZiMjNkYzQzZTI3NDNiZTc2M2QxZGZlNDFkZGY2MzFiYTJlMDcifV19"
        }
      },
      "LicenseUpdateModelExample": {
        "summary": "License update",
        "value": {
          "message": "Veeam Backup and Replication:\r License key is up-to-date",
          "isSuccessful": true
        }
      },
      "LinuxFlrBrowseFolderModelExample": {
        "summary": "Linux items",
        "value": {
          "path": "/home",
          "items": [
            {
              "type": "Folder",
              "itemState": "NotAvaliable",
              "location": "/home",
              "name": "administrator",
              "size": 0,
              "creationDate": "2023-09-29T18:00:42+02:00",
              "modifiedDate": "2023-09-29T18:00:42+02:00"
            },
            {
              "type": "Folder",
              "itemState": "NotAvaliable",
              "location": "/home",
              "name": "sheiladcory",
              "size": 0,
              "creationDate": "2024-05-25T15:43:40+02:00",
              "modifiedDate": "2024-05-25T15:43:40+02:00"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "LinuxFlrBrowseMountModelExample": {
        "summary": "File restore mount point for a Linux machine",
        "value": {
          "type": "Linux",
          "sessionId": "1dc723e8-12a0-4480-bc34-6cb117d3d4a1",
          "properties": {
            "pathSeparator": "/"
          },
          "sourceProperties": {
            "machineName": "ubuntu88",
            "restorePointName": "ubuntu88"
          }
        }
      },
      "LinuxFlrRestoreSpecExample": {
        "summary": "Restoring files and folders to the original location for a Linux machine",
        "value": {
          "sourcePath": [
            "/home/sheiladcory"
          ],
          "restoreType": "Overwrite",
          "credentialsId": "366fca36-3c28-4db2-a2c9-564f1509fb08"
        }
      },
      "LinuxFlrRestoreToSpecExample": {
        "summary": "Restoring files and folders to another location for a Linux machine",
        "value": {
          "sourcePath": [
            "/home/sheiladcory"
          ],
          "restoreType": "Overwrite",
          "credentialsId": "c0940fba-7c6e-445e-bea3-c0fa20e9ef15",
          "targetHost": {
            "type": "VMware",
            "vmObject": {
              "type": "VirtualMachine",
              "hostName": "vcenter01.tech.local",
              "name": "ubuntu89",
              "objectId": "vm-17019",
              "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008;resourcepool:resgroup-1023;virtualmachine:vm-17019",
              "platform": "VMware",
              "size": "19.9 GB"
            }
          },
          "targetPath": "/home/sheiladcory/temp01"
        }
      },
      "LinuxFolderFlrBrowseFolderSpecExample": {
        "summary": "Browsing items in a spesific folder on a Linux machine and sorting them by creation time",
        "value": {
          "path": "/home",
          "order": {
            "orderColumn": "CreationDate",
            "orderAsc": false
          }
        }
      },
      "LinuxHelperApplianceFlrMountSpecExample": {
        "summary": "Starting file restore of a Linux machine using a helper appliance",
        "value": {
          "restorePointId": "5777a78d-62f6-40a3-a7e3-8b56a56e58c0",
          "type": "Linux",
          "autoUnmount": {
            "isEnabled": true,
            "noActivityPeriodInMinutes": 40
          },
          "reason": "File restore",
          "helperAppliance": {
            "platformResourceSettings": {
              "type": "VMware",
              "host": {
                "type": "Host",
                "hostName": "vcenter01.tech.local",
                "name": "prgtwesx01.tech.local",
                "objectId": "host-1008",
                "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008",
                "platform": "VMware",
                "size": "N/A"
              },
              "resourcePool": {
                "type": "ResourcePool",
                "hostName": "vcenter01.tech.local",
                "name": "Enterprise",
                "objectId": "resgroup-1023",
                "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008;resourcepool:resgroup-1023",
                "platform": "VMware",
                "size": "N/A"
              },
              "network": {
                "type": "Network",
                "hostName": "prgtwesx01.tech.local",
                "name": "VM Network",
                "objectId": "VM Network",
                "urn": "vc:vcenter01.tech.local;esx:host-1008;network:VM Network",
                "platform": "VMware",
                "size": "N/A"
              }
            },
            "ftpServerEnabled": false,
            "restoreFromNSS": false
          }
        }
      },
      "LinuxHelperHostFlrMountSpecExample": {
        "summary": "Starting file restore of a Linux machine using a helper host",
        "value": {
          "restorePointId": "5777a78d-62f6-40a3-a7e3-8b56a56e58c0",
          "type": "Linux",
          "autoUnmount": {
            "isEnabled": true,
            "noActivityPeriodInMinutes": 10
          },
          "reason": "File restore",
          "helperHost": {
            "hostId": "ea7dc5d3-0daa-442a-adfe-ab9f5fd9d482"
          }
        }
      },
      "LinuxLocalRepositoryModelExample": {
        "summary": "Linux-based repository",
        "value": {
          "hostId": "25d2b2f8-ff7d-458d-a558-3ffc937d2624",
          "repository": {
            "path": "/home/administrator/Repository",
            "taskLimitEnabled": true,
            "maxTaskCount": 4,
            "readWriteLimitEnabled": true,
            "readWriteRate": 4,
            "useFastCloningOnXFSVolumes": false,
            "advancedSettings": {
              "RotatedDriveCleanupMode": "Disabled",
              "alignDataBlocks": true,
              "decompressBeforeStoring": false,
              "rotatedDrives": false,
              "perVmBackup": true
            }
          },
          "mountServer": {
            "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
            "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
            "vPowerNFSEnabled": true,
            "vPowerNFSPortSettings": {
              "mountPort": 1058,
              "vPowerNFSPort": 2049
            }
          },
          "type": "LinuxLocal",
          "id": "d2f2d569-1dfe-4294-89df-d429cedffdc1",
          "name": "Backup Repository 1",
          "description": "Created by TECH\\sheila.d.cory",
          "uniqueId": "D2F2D5691DFE429489DFD429CEDFFDC1"
        }
      },
      "LinuxLocalRepositorySpecExample": {
        "summary": "Creating a Linux-based Repository",
        "value": {
          "hostId": "f13af962-34af-4c1a-a272-edfac05ac2af",
          "repository": {
            "path": "/home/repository",
            "taskLimitEnabled": true,
            "maxTaskCount": 4,
            "readWriteLimitEnabled": true,
            "readWriteRate": 1,
            "useFastCloningOnXFSVolumes": false,
            "useImmutableBackups": false,
            "advancedSettings": {
              "RotatedDriveCleanupMode": "Disabled",
              "alignDataBlocks": true,
              "decompressBeforeStoring": true,
              "rotatedDrives": false,
              "perVmBackup": true
            }
          },
          "mountServer": {
            "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
            "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache2\\",
            "vPowerNFSEnabled": true,
            "vPowerNFSPortSettings": {
              "mountPort": 1058,
              "vPowerNFSPort": 2049
            }
          },
          "type": "LinuxLocal",
          "name": "Linux Backup Repository 2",
          "description": "Created by TECH\\sheila.d.cory",
          "uniqueId": "4E2A20FC487D44EDA5A88058C62BC3A0"
        }
      },
      "LinuxManagedServerModelExample": {
        "summary": "Linux host",
        "value": {
          "sshSettings": {
            "sshTimeOutMs": 20000,
            "portRangeStart": 2500,
            "portRangeEnd": 3300,
            "serverSide": false,
            "managementPort": 6162
          },
          "type": "LinuxHost",
          "id": "71988b5d-e338-4c62-81e5-05ea944d233e",
          "name": "linuxsrv01.tech.local",
          "description": "Backup repository",
          "credentialsId": "76571109-fe6e-4638-ad37-2f1f30e3e9f1"
        }
      },
      "LinuxManagedServerSpecExample": {
        "summary": "Adding a managed Linux server",
        "value": {
          "sshSettings": {
            "sshTimeOutMs": 20000,
            "portRangeStart": 2500,
            "portRangeEnd": 3300,
            "serverSide": false,
            "managementPort": 6162
          },
          "type": "LinuxHost",
          "name": "172.24.29.163",
          "description": "Backup repository",
          "credentialsId": "0736fcb7-e5b3-4433-9157-252633f1abf9",
          "credentialsStorageType": "Permanent",
          "sshFingerprint": "ssh-rsa 3072 KCR7SAh1JAqLNVgFaPcL6uEBS72dX+brNJKsjXov22M"
        }
      },
      "LinuxRootFlrBrowseFolderSpecExample": {
        "summary": "Browsing the root folder on a Linux machine",
        "value": {
          "path": "/",
          "order": {
            "orderColumn": "Name",
            "orderAsc": true
          }
        }
      },
      "LinuxOriginalHostFlrMountSpecExample": {
        "summary": "Starting file restore of a Linux machine using the original host",
        "value": {
          "restorePointId": "5777a78d-62f6-40a3-a7e3-8b56a56e58c0",
          "type": "Linux",
          "autoUnmount": {
            "isEnabled": true,
            "noActivityPeriodInMinutes": 5
          },
          "reason": "File restore",
          "originalHost": {
            "credentialsId": "0c1f0ea4-a3a9-419d-a2a9-2145ef5e0470"
          }
        }
      },
      "WindowsManagedServerSpecExample": {
        "summary": "Adding a managed Microsoft Windows server",
        "value": {
          "networkSettings": {
            "components": [
              {
                "componentName": "DeployerSvc",
                "port": 6160
              },
              {
                "componentName": "Transport",
                "port": 6162
              },
              {
                "componentName": "Nfs",
                "port": 6161
              },
              {
                "componentName": "RestoreProxy",
                "port": 6170
              },
              {
                "componentName": "WanAccelerator",
                "port": 6164
              },
              {
                "componentName": "Tape",
                "port": 6166
              },
              {
                "componentName": "CloudGate",
                "port": 6168
              },
              {
                "componentName": "AgentConfigureService",
                "port": 9380
              },
              {
                "componentName": "FileSystemVssIntegration",
                "port": 6210
              },
              {
                "componentName": "VssHwSnapshotProvider",
                "port": 6211
              }
            ],
            "portRangeStart": 2517,
            "portRangeEnd": 3313,
            "serverSide": true
          },
          "type": "WindowsHost",
          "name": "enterprise01.tech.local",
          "description": "Backup Repository",
          "credentialsId": "d7af15f3-8808-454e-ba79-2c2267acb05d"
        }
      },
      "MalwareBackupScanSpecExample": {
        "summary": "Starting backup scan",
        "value": {
          "backupObjectPair": [
            {
              "backupId": "ffcedddf-577d-4033-aab8-9c6f46c82b8d",
              "backupObjectId": "67785a3a-dd33-4f33-9869-111ece902f9b"
            }
          ],
          "scanMode": "AllInInterval",
          "scanEngine": {
            "useAntivirusEngine": "false",
            "useYaraRule": "true",
            "yaraRule": {
              "fileName": "FindFileByHash.yara"
            }
          }
        }
      },
      "ManagedServersResultExample": {
        "summary": "Array of managed servers",
        "value": {
          "data": [
            {
              "sshSettings": {
                "sshTimeOutMs": 20000,
                "portRangeStart": 2500,
                "portRangeEnd": 3300,
                "serverSide": false,
                "managementPort": 6162
              },
              "type": "LinuxHost",
              "id": "535b5414-788d-4720-a53a-ecc830d2589b",
              "name": "172.17.53.67",
              "description": "Created by TECH\\sheila.d.cory",
              "credentialsId": "b860489e-490d-4e43-b20a-a91c4e7d2e76"
            },
            {
              "networkSettings": {
                "components": [
                  {
                    "componentName": "DeployerSvc",
                    "port": 6160
                  },
                  {
                    "componentName": "Transport",
                    "port": 6162
                  },
                  {
                    "componentName": "Nfs",
                    "port": 6161
                  },
                  {
                    "componentName": "RestoreProxy",
                    "port": 6170
                  },
                  {
                    "componentName": "WanAccelerator",
                    "port": 6164
                  },
                  {
                    "componentName": "Tape",
                    "port": 6166
                  },
                  {
                    "componentName": "CloudGate",
                    "port": 6168
                  },
                  {
                    "componentName": "AgentConfigureService",
                    "port": 9380
                  },
                  {
                    "componentName": "FileSystemVssIntegration",
                    "port": 6210
                  },
                  {
                    "componentName": "VssHwSnapshotProvider",
                    "port": 6211
                  }
                ],
                "portRangeStart": 2500,
                "portRangeEnd": 3300,
                "serverSide": false
              },
              "type": "WindowsHost",
              "id": "ee50f2fb-034f-41cd-8dc8-904aeae2d0d8",
              "name": "enterprise04.tech.local",
              "description": "Created by TECH\\sheila.d.cory",
              "credentialsId": "fa4769b5-6722-4968-838b-866c29bd14d4"
            },
            {
              "viHostType": "VC",
              "port": 443,
              "type": "ViHost",
              "id": "de28dc43-b8ee-4e17-8e63-3d38b6604033",
              "name": "vcenter01.tech.local",
              "description": "Created by TECH\\administrator",
              "credentialsId": "fa4769b5-6722-4968-838b-866c29bd14d4"
            }
          ],
          "pagination": {
            "total": 3,
            "count": 3,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "NetworksInventoryBrowserFiltersExample": {
        "summary": "Getting VMware Cloud Director networks",
        "value": {
          "pagination": {
            "limit": "100"
          },
          "filter": {
            "type": "PredicateExpression",
            "operation": "in",
            "property": "Type",
            "value": "Network"
          },
          "sorting": {
            "property": "name",
            "direction": "descending"
          },
          "hierarchyType": "Network"
        }
      },
      "OriginalLocationInstantViVMRecoverySpecExample": {
        "summary": "Instant Recovery to the original location",
        "value": {
          "restorePointId": "af75ddaa-d680-4c50-ac82-07834a007707",
          "type": "OriginalLocation",
          "vmTagsRestoreEnabled": true,
          "secureRestore": {
            "antivirusScanEnabled": true,
            "virusDetectionAction": "DisableNetwork",
            "entireVolumeScanEnabled": true
          },
          "nicsEnabled": false,
          "powerUp": true,
          "reason": "Instant Recovery to VMware vSphere"
        }
      },
      "ObjectRestorePointDisksResultExample": {
        "summary": "Array of object disks",
        "value": {
          "data": [
            {
              "type": "Vi",
              "state": "Processed",
              "uid": "9019e170-43d4-4c98-89eb-fb52f357b37c:484bed6e-b2f7-4222-874e-2bb20f40e7b0:2000:9070575d-cf58-49c2-acb5-98515553f7c7",
              "name": "winsrv88",
              "capacity": 107374182400
            },
            {
              "type": "Vi",
              "state": "Processed",
              "uid": "9019e170-43d4-4c98-89eb-fb52f357b37c:484bed6e-b2f7-4222-874e-2bb20f40e7b0:2001:9070575d-cf58-49c2-acb5-98515553f7c7",
              "name": "winsrv88_1",
              "capacity": 42949672960
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 2
          }
        }
      },
      "ObjectRestorePointModelExample": {
        "summary": "Object restore point",
        "value": {
          "platformName": "LinuxPhysical",
          "type": "Increment",
          "malwareStatus": "Clean",
          "id": "ab3361d3-df80-474d-b23f-ea9a498b9e8c",
          "name": "linbase02 AgentBackupJob",
          "platformId": "00 000000-0000-0000-0000-000000000000",
          "creationTime": "2024-11-06T00:30:20+01:00",
          "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
          "sessionId": null,
          "allowedOperations": [
            "StartFlrRestore"
          ],
          "backupFileId": "bfe4ce8a-a41e-4a86-aae6-1471fac1bb31"
        }
      },
      "ObjectRestorePointsResultExample": {
        "summary": "Array of object restore points",
        "value": {
          "data": [
            {
              "platformName": "LinuxPhysical",
              "type": "Increment",
              "malwareStatus": "Clean",
              "id": "ab3361d3-df80-474d-b23f-ea9a498b9e8c",
              "name": "linbase02 AgentBackupJob",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-06T00:30:20+01:00",
              "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
              "sessionId": null,
              "allowedOperations": [
                "StartFlrRestore"
              ],
              "backupFileId": "bfe4ce8a-a41e-4a86-aae6-1471fac1bb31"
            },
            {
              "platformName": "VMware",
              "type": "Increment",
              "malwareStatus": "Clean",
              "id": "a456a7fd-c562-461f-aa7a-3f39b7320622",
              "name": "linbase01",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-05T18:01:26.520805+01:00",
              "backupId": "c88774c1-ce7b-4530-8b73-cca781f02061",
              "sessionId": null,
              "allowedOperations": [
                "StartViVMInstantRecovery",
                "StartEntireVmRestore",
                "StartFCDInstantRecovery",
                "StartFlrRestore"
              ],
              "backupFileId": "fed30ccf-1538-44fe-8f08-2b5cc5bf5571"
            },
            {
              "platformName": "VMware",
              "type": "Increment",
              "malwareStatus": "Clean",
              "id": "5d858942-8813-48f7-b5c3-5378af993665",
              "name": "winsrv88",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-05T16:01:02.928191+01:00",
              "backupId": "ffcedddf-577d-4033-aab8-9c6f46c82b8d",
              "sessionId": null,
              "allowedOperations": [
                "StartViVMInstantRecovery",
                "StartEntireVmRestore",
                "StartFCDInstantRecovery",
                "StartFlrRestore"
              ],
              "backupFileId": "f1904d20-8d19-44c4-8b29-6102e66ec2e1"
            },
            {
              "platformName": "LinuxPhysical",
              "type": "Increment",
              "malwareStatus": "Clean",
              "id": "bdcbf817-330e-45e3-aa8c-1ab3180719c3",
              "name": "linbase02 AgentBackupJob",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-05T00:30:13+01:00",
              "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
              "sessionId": null,
              "allowedOperations": [
                "StartFlrRestore"
              ],
              "backupFileId": "599b962d-6e8b-456f-a2eb-ca734686ff20"
            },
            {
              "platformName": "VMware",
              "type": "Increment",
              "malwareStatus": "Clean",
              "id": "bbb812e8-3aba-4bc8-863f-64ee6c04632f",
              "name": "linbase01",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-04T18:00:46.68111+01:00",
              "backupId": "c88774c1-ce7b-4530-8b73-cca781f02061",
              "sessionId": null,
              "allowedOperations": [
                "StartViVMInstantRecovery",
                "StartEntireVmRestore",
                "StartFCDInstantRecovery",
                "StartFlrRestore"
              ],
              "backupFileId": "eca37172-c2c9-4e6b-a242-9a1424e4b36e"
            },
            {
              "platformName": "VMware",
              "type": "Full",
              "malwareStatus": "Clean",
              "id": "56a6e3ac-2771-4fcc-8b8c-0632c708d94f",
              "name": "winsrv88",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-04T17:19:26.902241+01:00",
              "backupId": "ffcedddf-577d-4033-aab8-9c6f46c82b8d",
              "sessionId": null,
              "allowedOperations": [
                "StartViVMInstantRecovery",
                "StartEntireVmRestore",
                "StartFCDInstantRecovery",
                "StartFlrRestore"
              ],
              "backupFileId": "484c82ea-9499-4c2e-b3ee-f64bc78faa89"
            },
            {
              "platformName": "VMware",
              "type": "Full",
              "malwareStatus": "Clean",
              "id": "eff90d46-b142-41c0-a381-ad7ea5f7a1ad",
              "name": "linbase01",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-04T17:00:22.817224+01:00",
              "backupId": "c88774c1-ce7b-4530-8b73-cca781f02061",
              "sessionId": null,
              "allowedOperations": [
                "StartViVMInstantRecovery",
                "StartEntireVmRestore",
                "StartFCDInstantRecovery",
                "StartFlrRestore"
              ],
              "backupFileId": "e90feb5c-6674-4cf5-adbf-1354358510e1"
            },
            {
              "platformName": "LinuxPhysical",
              "type": "Full",
              "malwareStatus": "Clean",
              "id": "2619492a-22e9-4e97-b5b1-3e906284e543",
              "name": "linbase02 AgentBackupJob",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2024-11-04T16:44:43+01:00",
              "backupId": "00d9832b-0b4e-45fe-a284-0683e6c0e44c",
              "sessionId": null,
              "allowedOperations": [
                "StartFlrRestore"
              ],
              "backupFileId": "5213d3d6-4111-4104-bf5f-6b6e972c8e25"
            }
          ],
          "pagination": {
            "total": 8,
            "count": 8,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "OrgVmsInventoryBrowserFiltersExample": {
        "summary": "Getting VMware Cloud Director vApps and VMS beloning to a specific organization",
        "value": {
          "hierarchyType": "VAppsAndVms",
          "filter": {
            "type": "GroupExpression",
            "operation": "and",
            "items": [
              {
                "type": "PredicateExpression",
                "operation": "in",
                "property": "Type",
                "value": "VirtualMachine, vApp"
              },
              {
                "type": "PredicateExpression",
                "operation": "Contains",
                "property": "urn",
                "value": "org:29d6e75a-f6fc-4759-ba4c-e14dbeac4346;"
              }
            ]
          },
          "sorting": {
            "property": "Size",
            "direction": "descending"
          }
        }
      },
      "PermanentFailoverSessionsResultExample": {
        "summary": "Array of PermanentFailover sessions",
        "value": {
          "data": [
            {
              "sessionType": "PermanentFailover",
              "state": "Starting",
              "id": "e8697eff-20df-4591-ab5c-c62fb8461586",
              "name": "apache04",
              "activityId": "55741922-7e60-4c15-bffe-b184ec6a4ce6",
              "creationTime": "2023-10-31T15:41:23.044577+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            },
            {
              "sessionType": "PermanentFailover",
              "state": "Starting",
              "id": "9cde1fce-1e4c-46f5-a875-49a18da03856",
              "name": "apache04",
              "activityId": "ea27727d-149b-406c-8c43-f1e63e0b8f71",
              "creationTime": "2023-10-31T15:41:23.138347+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "PlannedFailoverSessionsResultExample": {
        "summary": "Array of PlannedFailover sessions",
        "value": {
          "data": [
            {
              "sessionType": "PlannedFailover",
              "state": "Starting",
              "id": "41902619-e547-4293-a74f-0cb991f012ad",
              "name": "apache04",
              "activityId": "2ad46486-31c7-4c5e-abb1-af947adf68e5",
              "creationTime": "2023-10-31T15:27:54.938434+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            },
            {
              "sessionType": "PlannedFailover",
              "state": "Starting",
              "id": "e1d0dbf7-ffd2-4780-925b-ec1416b066af",
              "name": "apache05",
              "activityId": "05d546b8-2217-4522-8ee3-114dcc3d80a0",
              "creationTime": "2023-10-31T15:27:55.000925+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "ProxiesResultExample": {
        "summary": "Array of proxies",
        "value": {
          "data": [
            {
              "server": {
                "transportMode": "virtualAppliance",
                "hostId": "535b5414-788d-4720-a53a-ecc830d2589b",
                "failoverToNetwork": true,
                "hostToProxyEncryption": false,
                "connectedDatastores": {
                  "autoSelectEnabled": true,
                  "datastores": []
                },
                "maxTaskCount": 2
              },
              "type": "ViProxy",
              "id": "0be53088-d516-4734-a956-a8093a568876",
              "name": "172.17.53.67",
              "description": "Created by TECH\\sheila.d.cory"
            },
            {
              "server": {
                "transportMode": "auto",
                "hostId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
                "failoverToNetwork": true,
                "hostToProxyEncryption": false,
                "connectedDatastores": {
                  "autoSelectEnabled": true,
                  "datastores": []
                },
                "maxTaskCount": 2
              },
              "type": "ViProxy",
              "id": "18b661c1-d9dc-4233-90a0-7e7b10dc2d09",
              "name": "VMware Backup Proxy",
              "description": "Created by Veeam Backup & Replication"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "ProxyModelExample": {
        "summary": "Proxy",
        "value": {
          "server": {
            "transportMode": "network",
            "hostId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
            "failoverToNetwork": false,
            "hostToProxyEncryption": false,
            "connectedDatastores": {
              "autoSelectEnabled": true,
              "datastores": []
            },
            "maxTaskCount": 2
          },
          "trafficRules": {
            "rules": [
              {
                "timePeriod": "Anytime",
                "name": "Internet",
                "encryption": true,
                "throttling": false
              }
            ]
          },
          "type": "ViProxy",
          "id": "18b661c1-d9dc-4233-90a0-7e7b10dc2d09",
          "name": "VMware vSphere Backup Proxy",
          "description": "Created by TECH\\sheila.d.cory"
        }
      },
      "ProxySpecExample": {
        "summary": "Creating a proxy",
        "value": {
          "type": "ViProxy",
          "name": "proxy01.tech.local",
          "description": "Created by TECH\\sheila.d.cory",
          "server": {
            "transportMode": "auto",
            "hostId": "080b9a63-56f3-49e2-9b06-56fc252de34c",
            "failoverToNetwork": true,
            "hostToProxyEncryption": false,
            "connectedDatastores": {
              "autoSelectEnabled": false,
              "datastores": [
                {
                  "datastore": {
                    "type": "Datastore",
                    "hostName": "vcenter01.tech.local",
                    "name": "esx04-ds1",
                    "objectId": "datastore-78098"
                  },
                  "vmCount": 98
                },
                {
                  "datastore": {
                    "type": "Datastore",
                    "hostName": "vcenter01.tech.local",
                    "name": "esx04-ds2",
                    "objectId": "datastore-94394"
                  },
                  "vmCount": 93
                }
              ]
            },
            "maxTaskCount": 2
          }
        }
      },
      "PublishBackupContentSpecExample": {
        "summary": "Starting a disk publishing session",
        "value": {
          "restorePointId": "58d8ce8c-2e04-47c7-8f11-a17875b1eed3",
          "type": "FUSELinuxMount",
          "targetServerName": "linbase03",
          "targetServerCredentialsId": "27f962c5-86d6-4a7c-b450-5faa99b08d03"
        }
      },
      "QuickBackupExample": {
        "summary": "Starting a quick backup job",
        "value": {
          "type": "VirtualMachine",
          "hostName": "vcenter01.tech.local",
          "name": "linbase01",
          "objectId": "vm-45541",
          "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008;resourcepool:resgroup-1023;virtualmachine:vm-45541",
          "platform": "VMware",
          "size": "19.8 GB"
        }
      },
      "QuickBackupSessionExample": {
        "summary": "Quick backup session",
        "value": {
          "sessionType": "BackupJob",
          "state": "Starting",
          "platformName": "VMware",
          "id": "9ff48f05-3367-42a8-af03-d875a5969295",
          "name": "Backup Job 1",
          "jobId": "6bf39221-c79b-49ff-8537-26a37b0a9080",
          "creationTime": "2024-10-29T11:11:49.839619+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": {
            "result": "None",
            "message": "",
            "isCanceled": false
          },
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 149421,
          "platformId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "QuickMigrationSessionModelExample": {
        "summary": "QuickMigration session",
        "value": {
          "sessionType": "QuickMigration",
          "state": "Starting",
          "id": "8228661b-861e-40c4-8133-8a97700f4dfa",
          "name": "Quick Migration Job",
          "jobId": "a00aa837-2c85-40c9-ae98-8b089dabc9b5",
          "creationTime": "2024-03-07T21:16:08.216977+01:00",
          "endTime": null,
          "progressPercent": 0,
          "result": null,
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0
        }
      },
      "ReplicaPointModelExample": {
        "summary": "Replica restore point",
        "value": {
          "platformName": "VMware",
          "state": "Ready",
          "malwareStatus": "Clean",
          "id": "f2d8dc48-dd3b-42c0-aa18-40c14424876d",
          "name": "ubuntu88",
          "platformId": "00000000-0000-0000-0000-000000000000",
          "creationTime": "2023-10-26T15:39:53.754085+02:00",
          "replicaId": "e7c0ef09-8bd4-4cbd-b26a-2fd0177e6b0c",
          "allowedOperations": [
            "StartViVMSnapshotReplicaFailover",
            "StartViVMSnapshotReplicaPlannedFailover",
            "StartFlrRestore"
          ]
        }
      },
      "ReplicaPointsResultExample": {
        "summary": "Array of replica restore points",
        "value": {
          "data": [
            {
              "platformName": "VMware",
              "state": "Ready",
              "malwareStatus": "Clean",
              "id": "b64b7047-dab2-44da-b885-ff6b06727a8f",
              "name": "apache05",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2023-10-26T16:31:52.250055+02:00",
              "replicaId": "af845435-7d67-4f90-aab0-30d83bb7148b",
              "allowedOperations": [
                "StartViVMSnapshotReplicaFailover",
                "StartViVMSnapshotReplicaPlannedFailover",
                "StartFlrRestore"
              ]
            },
            {
              "platformName": "VMware",
              "state": "Ready",
              "malwareStatus": "Clean",
              "id": "532d3ef5-e9f5-4a5e-bc06-3070649e9c16",
              "name": "apache05",
              "platformId": "00000000-0000-0000-0000-000000000000",
              "creationTime": "2023-10-26T15:40:09.333353+02:00",
              "replicaId": "af845435-7d67-4f90-aab0-30d83bb7148b",
              "allowedOperations": [
                "StartViVMSnapshotReplicaFailover",
                "StartViVMSnapshotReplicaPlannedFailover",
                "StartFlrRestore"
              ]
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "BackupDecryptionSpecExample": {
        "summary": "Decrypt Backup",
        "value": {
          "passwords": [
            "Passwrod_1",
            "Passwrod_2",
            "Passwrod_3"
          ]
        }
      },
      "ReplicaRescanSpecExample": {
        "summary": "Rescanning specific replicas",
        "value": {
          "replicaPointIds": [
            "c8435ccb-5ecf-4fa5-b429-f703b9a37bef",
            "e67070c7-7116-4c57-a90e-12be7f0a94f1",
            "41cbcb6f-b245-4db3-a6aa-0caab969a515"
          ]
        }
      },
      "RepositoriesResultExample": {
        "summary": "Array of backup repositories",
        "value": {
          "data": [
            {
              "hostId": "83ba3602-158f-45cd-affc-0885c10b84fc",
              "repository": {
                "path": "C:\\Backup Repository\\enterprise01",
                "taskLimitEnabled": true,
                "maxTaskCount": 4,
                "readWriteLimitEnabled": true,
                "readWriteRate": 0,
                "advancedSettings": {
                  "RotatedDriveCleanupMode": "Disabled",
                  "alignDataBlocks": true,
                  "decompressBeforeStoring": false,
                  "rotatedDrives": false,
                  "perVmBackup": true
                }
              },
              "mountServer": {
                "mountServerId": "83ba3602-158f-45cd-affc-0885c10b84fc",
                "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
                "vPowerNFSEnabled": true,
                "vPowerNFSPortSettings": {
                  "mountPort": 1063,
                  "vPowerNFSPort": 2049
                }
              },
              "type": "WinLocal",
              "id": "3c5557b1-71e8-4508-8dce-4e743b294ef5",
              "name": "Backup Repository 1",
              "description": "enterprise03",
              "uniqueId": "3C5557B171E845088DCE4E743B294EF5"
            },
            {
              "hostId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
              "repository": {
                "path": "C:\\Backup",
                "taskLimitEnabled": true,
                "maxTaskCount": 4,
                "readWriteLimitEnabled": true,
                "readWriteRate": 0,
                "advancedSettings": {
                  "RotatedDriveCleanupMode": "Disabled",
                  "alignDataBlocks": true,
                  "decompressBeforeStoring": false,
                  "rotatedDrives": false,
                  "perVmBackup": true
                }
              },
              "mountServer": {
                "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
                "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
                "vPowerNFSEnabled": true,
                "vPowerNFSPortSettings": {
                  "mountPort": 1058,
                  "vPowerNFSPort": 2049
                }
              },
              "type": "WinLocal",
              "id": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "name": "Default Backup Repository",
              "description": "Created by Veeam Backup",
              "uniqueId": "88788f9ed8f54eb4bc4f9b3f5403bcec"
            },
            {
              "hostId": "3251ddfc-3691-4d20-a43e-860dc275147e",
              "repository": {
                "path": "/home/repository",
                "taskLimitEnabled": true,
                "maxTaskCount": 4,
                "readWriteLimitEnabled": true,
                "readWriteRate": 1,
                "useFastCloningOnXFSVolumes": false,
                "advancedSettings": {
                  "RotatedDriveCleanupMode": "Disabled",
                  "alignDataBlocks": true,
                  "decompressBeforeStoring": true,
                  "rotatedDrives": false,
                  "perVmBackup": true
                }
              },
              "mountServer": {
                "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
                "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
                "vPowerNFSEnabled": true,
                "vPowerNFSPortSettings": {
                  "mountPort": 1058,
                  "vPowerNFSPort": 2049
                }
              },
              "type": "LinuxLocal",
              "id": "4e2a20fc-487d-44ed-a5a8-8058c62bc3a0",
              "name": "Linux Backup Repository",
              "description": "Created by TECH\\sheila.d.cory",
              "uniqueId": "4E2A20FC487D44EDA5A88058C62BC3A0"
            }
          ],
          "pagination": {
            "total": 3,
            "count": 3,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "RepositoryStatesResultExample": {
        "summary": "Array of repository states",
        "value": {
          "data": [
            {
              "type": "WinLocal",
              "id": "d4b5e196-f3ad-474c-99bc-dfef051dae07",
              "name": "Backup Repository 1",
              "description": "Created by TECH\\sheila.d.cory",
              "hostId": "e22b8842-c454-4036-abd5-f468c3248aaf",
              "hostName": "enterprise03.tech.local",
              "path": "C:\\Backup Repository",
              "capacityGB": 299.4,
              "freeGB": 217.8,
              "usedSpaceGB": 173.4,
              "isOnline": true
            },
            {
              "type": "WinLocal",
              "id": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "name": "Default Backup Repository",
              "description": "Created by Veeam Backup",
              "hostId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
              "hostName": "enterprise06.tech.local",
              "path": "C:\\Backup",
              "capacityGB": 99.4,
              "freeGB": 16.4,
              "usedSpaceGB": 30.4,
              "isOnline": true
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "RevokeInstanceLicenseExample": {
        "summary": "Details about revoked instance license",
        "value": {
          "name": "winsrv88:/C:\\Shares\\nfs_share",
          "hostName": "winsrv88",
          "usedInstancesNumber": 0,
          "type": "FileShare",
          "instanceId": "0405a174-dc1a-473a-a2cf-b5b1c8b1b620"
        }
      },
      "ServerInfoModelExample": {
        "summary": "Backup server details",
        "value": {
          "vbrId": "fa823fac-55ff-4487-9067-c0745b5a891b",
          "name": "Veeam Backup and Replication",
          "buildVersion": "12.1.0.0",
          "patches": [],
          "databaseVendor": "PostgreSQL",
          "sqlServerEdition": "",
          "sqlServerVersion": "PostgreSQL 15.4, compiled by Visual C++ build 1914, 64-bit",
          "databaseSchemaVersion": "9227",
          "databaseContentVersion": "9227"
        }
      },
      "ServersInventoryBrowserFiltersExample": {
        "summary": "Getting servers and hosts that reside in the tech.local or tech02.local domain",
        "value": {
          "filter": {
            "type": "GroupExpression",
            "operation": "or",
            "items": [
              {
                "type": "PredicateExpression",
                "operation": "endsWith",
                "property": "hostName",
                "value": "tech02.local"
              },
              {
                "type": "PredicateExpression",
                "operation": "endsWith",
                "property": "hostName",
                "value": "tech.local"
              }
            ]
          },
          "sorting": {
            "property": "name",
            "direction": "descending"
          }
        }
      },
      "ServersInventoryBrowserResultExample": {
        "summary": "Array of servers",
        "value": {
          "data": [
            {
              "type": "vCenterServer",
              "hostName": "vcenter01.tech.local",
              "name": "vcenter01.tech.local",
              "objectId": "b9faa59e-c6cd-44ed-8496-1b429a8f9aca",
              "urn": "vc:vcenter01.tech.local",
              "platform": "VMware",
              "size": "N/A"
            },
            {
              "type": "CloudDirectorServer",
              "hostName": "prgclouddirector02.tech02.local",
              "name": "prgclouddirector02.tech02.local",
              "objectId": null,
              "urn": "vcdsystem:prgclouddirector02.tech02.local",
              "platform": "CloudDirector",
              "size": "N/A"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          },
          "hierarchyType": null
        }
      },
      "ServerTimeModelExample": {
        "summary": "Backup server date and time",
        "value": {
          "serverTime": "2024-01-25T18:31:50.7300443+01:00",
          "timeZone": "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague"
        }
      },
      "ServicesResultExample": {
        "summary": "Associated services",
        "value": {
          "data": [
            {
              "name": "External Infrastructure DB Provider",
              "port": 6172
            },
            {
              "name": "VM Backup API",
              "port": 10006
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "SessionLogResultExample": {
        "summary": "Session log results",
        "value": {
          "totalRecords": 11,
          "records": [
            {
              "status": "Warning",
              "id": 11,
              "startTime": "2023-11-05T06:03:15.866256+01:00",
              "updateTime": "2023-11-05T06:03:15.866256+01:00",
              "title": "Job finished with warning at 11/5/2021 6:03:15 AM ",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 10,
              "startTime": "2023-11-05T06:03:15.756877+01:00",
              "updateTime": "2023-11-05T06:03:15.756877+01:00",
              "title": "Primary bottleneck: Source",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 9,
              "startTime": "2023-11-05T06:03:15.647498+01:00",
              "updateTime": "2023-11-05T06:03:15.647498+01:00",
              "title": "Load: Source 86% > Proxy 54% > Network 56% > Target 42%",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 7,
              "startTime": "2023-11-05T06:00:24.096249+01:00",
              "updateTime": "2023-11-05T06:03:08.2098022+01:00",
              "title": "Processing ubuntu88",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 5,
              "startTime": "2023-11-05T06:00:18.9711163+01:00",
              "updateTime": "2023-11-05T06:02:18.5413692+01:00",
              "title": "Processing winsrv100",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 6,
              "startTime": "2023-11-05T06:00:24.0650043+01:00",
              "updateTime": "2023-11-05T06:01:02.6441456+01:00",
              "title": "Processing dbserver01",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 8,
              "startTime": "2023-11-05T06:00:59.2378014+01:00",
              "updateTime": "2023-11-05T06:00:59.2378014+01:00",
              "title": "All VMs have been queued for processing",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 4,
              "startTime": "2023-11-05T06:00:12.0178073+01:00",
              "updateTime": "2023-11-05T06:00:12.0178073+01:00",
              "title": "Changed block tracking is enabled",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 3,
              "startTime": "2023-11-05T06:00:12.0021761+01:00",
              "updateTime": "2023-11-05T06:00:12.0021761+01:00",
              "title": "VM size: 86 GB (48 GB used)",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 2,
              "startTime": "2023-11-05T06:00:07.9864525+01:00",
              "updateTime": "2023-11-05T06:00:10.377142+01:00",
              "title": "Building list of machines to process",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 1,
              "startTime": "2023-11-05T06:00:07.7051998+01:00",
              "updateTime": "2023-11-05T06:00:07.7051998+01:00",
              "title": "Job started at 11/5/2021 6:00:02 AM",
              "description": ""
            }
          ]
        }
      },
      "SessionModelExample": {
        "summary": "Session",
        "value": {
          "sessionType": "ConfigurationBackup",
          "state": "Stopped",
          "id": "f848e90c-7f37-4ff5-9d55-04e33f8a4de3",
          "name": "Backup Configuration Job",
          "jobId": "99d1bf3d-e2e0-4bec-b2b3-820c0b87d212",
          "creationTime": "2023-11-08T10:00:12.56+01:00",
          "endTime": "2023-11-08T10:00:34.017+01:00",
          "progressPercent": 100,
          "result": {
            "result": "Success",
            "message": "Success",
            "isCanceled": false
          },
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0,
          "platformName": "VMware",
          "platformId": "00000000-0000-0000-0000-000000000000"
        }
      },
      "SessionsResultExample": {
        "summary": "Array of sessions",
        "value": {
          "data": [
            {
              "sessionType": "Job",
              "state": "Stopped",
              "id": "c924ee2f-1197-4b37-8de3-009c1977f347",
              "name": "Backup Job 1",
              "jobId": "c05dfa57-f59a-4e90-8065-b7f5d3276406",
              "creationTime": "2023-12-04T06:13:34.983+01:00",
              "endTime": "2023-12-04T06:15:00.617+01:00",
              "progressPercent": 100,
              "result": {
                "result": "Failed",
                "message": "Creating synthetic full backup (22% done)",
                "isCanceled": false
              },
              "resourceId": "c7478158-7c99-4bab-93b1-c3efdd1062fa",
              "resourceReference": "/api/v1/backups/c7478158-7c99-4bab-93b1-c3efdd1062fa",
              "parentSessionId": null,
              "usn": 0
            }
          ],
          "pagination": {
            "total": 307,
            "count": 1,
            "skip": 0,
            "limit": 1
          }
        }
      },
      "SmallVmsInventoryBrowserFiltersExample": {
        "summary": "Getting VMware vSphere small VMs on a host with a specific ObjectId",
        "value": {
          "filter": {
            "type": "GroupExpression",
            "operation": "and",
            "items": [
              {
                "type": "GroupExpression",
                "operation": "and",
                "items": [
                  {
                    "type": "PredicateExpression",
                    "operation": "greaterThan",
                    "property": "Size",
                    "value": "10 Mb"
                  },
                  {
                    "type": "PredicateExpression",
                    "operation": "lessThan",
                    "property": "Size",
                    "value": "100 Mb"
                  }
                ]
              },
              {
                "type": "PredicateExpression",
                "operation": "in",
                "property": "Type",
                "value": "VirtualMachine"
              },
              {
                "type": "PredicateExpression",
                "operation": "Contains",
                "property": "urn",
                "value": "hostsystem:host-08;"
              }
            ]
          },
          "sorting": {
            "property": "Size",
            "direction": "descending"
          }
        }
      },
      "SocketLicenseRemoveExample": {
        "summary": "Removing socket license",
        "value": {
          "section": "Socket"
        }
      },
      "SocketLicenseWorkloadModelExample": {
        "summary": "Workload with revoked socket license",
        "value": {
          "type": "vSphere",
          "name": "prgtwesx01.tech.local",
          "hostName": "prgtwesx01.tech.local",
          "hostId": "a6ca6129-5c58-47e3-b35c-ff1187d88ee4",
          "socketsNumber": 2,
          "coresNumber": 16
        }
      },
      "SocketLicenseWorkloadResultExample": {
        "summary": "Getting socket licenses consumption",
        "value": {
          "data": {
            "type": "vSphere",
            "name": "prgtwesx01.tech.local",
            "hostName": "prgtwesx01.tech.local",
            "hostId": "a6ca6129-5c58-47e3-b35c-ff1187d88ee4",
            "socketsNumber": 2,
            "coresNumber": 16
          },
          "pagination": {
            "total": 1,
            "count": 1,
            "skip": null,
            "limit": null
          }
        }
      },
      "SureBackupSessionExample": {
        "summary": "Sure Backup session",
        "value": {
          "sessionType": "SureBackup",
          "state": "Starting",
          "platformName": null,
          "id": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
          "name": "Scan Backup",
          "jobId": "34b77de9-d5e2-4752-aff8-929bc428e80f",
          "creationTime": "2024-11-11T12:34:46.027793",
          "endTime": null,
          "progressPercent": 0,
          "result": null,
          "resourceId": null,
          "resourceReference": null,
          "parentSessionId": null,
          "usn": 0,
          "platformId": null
        }
      },
      "TaskSessionLogResultExample": {
        "summary": "Task session log results",
        "value": {
          "totalRecords": 17,
          "records": [
            {
              "status": "Succeeded",
              "id": 20248,
              "startTime": "2024-11-10T18:00:57.507184+01:00",
              "updateTime": "2024-11-10T18:00:57.538426+01:00",
              "title": "Saving [prgtwesx01-ds01] linbase01/linbase01.vmx",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20249,
              "startTime": "2024-11-10T18:00:57.569666+01:00",
              "updateTime": "2024-11-10T18:00:58.022811+01:00",
              "title": "Saving [prgtwesx01-ds01] linbase01/linbase01.nvram",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20250,
              "startTime": "2024-11-10T18:00:58.147815+01:00",
              "updateTime": "2024-11-10T18:01:20.078084+01:00",
              "title": "Using backup proxy VMware Backup Proxy for disk Hard disk 1 [hotadd]",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20251,
              "startTime": "2024-11-10T18:01:21.359378+01:00",
              "updateTime": "2024-11-10T18:01:29.304504+01:00",
              "title": "Hard disk 1 (20 GB)",
              "description": "785 MB read at 107 MB/s [CBT]"
            },
            {
              "status": "Succeeded",
              "id": 20252,
              "startTime": "2024-11-10T18:01:45.301632+01:00",
              "updateTime": "2024-11-10T18:01:48.004876+01:00",
              "title": "Removing VM snapshot",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20253,
              "startTime": "2024-11-10T18:01:48.708009+01:00",
              "updateTime": "2024-11-10T18:01:49.114281+01:00",
              "title": "Finalizing",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20254,
              "startTime": "2024-11-10T18:01:53.598843+01:00",
              "updateTime": "2024-11-10T18:01:53.598843+01:00",
              "title": "Busy: Source 99% > Proxy 36% > Network 8% > Target 0%",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20255,
              "startTime": "2024-11-10T18:01:53.614489+01:00",
              "updateTime": "2024-11-10T18:01:53.614489+01:00",
              "title": "Primary bottleneck: Source",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20256,
              "startTime": "2024-11-10T18:01:53.630095+01:00",
              "updateTime": "2024-11-10T18:01:53.630095+01:00",
              "title": "Network traffic verification detected no corrupted blocks",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20257,
              "startTime": "2024-11-10T18:01:53.661352+01:00",
              "updateTime": "2024-11-10T18:01:53.661352+01:00",
              "title": "Processing finished at 11/10/2024 6:01:53 PM",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20242,
              "startTime": "2024-11-10T18:00:42.334637+01:00",
              "updateTime": "2024-11-10T18:00:42.334637+01:00",
              "title": "VM size: 20 GB (17.4 GB used)",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20247,
              "startTime": "2024-11-10T18:00:50.834999+01:00",
              "updateTime": "2024-11-10T18:00:53.163236+01:00",
              "title": "Creating VM snapshot",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20241,
              "startTime": "2024-11-10T18:00:42.334637+01:00",
              "updateTime": "2024-11-10T18:00:42.334637+01:00",
              "title": "VM processing started at 11/10/2024 6:00:42 PM",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20243,
              "startTime": "2024-11-10T18:00:43.053402+01:00",
              "updateTime": "2024-11-10T18:00:50.600609+01:00",
              "title": "Getting VM info from vSphere",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20240,
              "startTime": "2024-11-10T18:00:41.13145+01:00",
              "updateTime": "2024-11-10T18:01:52.520697+01:00",
              "title": "Processing linbase01",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20217,
              "startTime": "2024-11-10T18:00:36.537488+01:00",
              "updateTime": "2024-11-10T18:00:36.537488+01:00",
              "title": "Queued for processing at 11/10/2024 6:00:36 PM",
              "description": ""
            },
            {
              "status": "Succeeded",
              "id": 20218,
              "startTime": "2024-11-10T18:00:36.56874+01:00",
              "updateTime": "2024-11-10T18:00:39.756376+01:00",
              "title": "Required backup infrastructure resources have been assigned",
              "description": ""
            }
          ]
        }
      },
      "TaskSessionModelExample": {
        "summary": "Getting a task session with a specific ID",
        "value": {
          "algorithm": "Increment",
          "state": "Stopped",
          "name": "linbase01",
          "restorePointId": "e7853593-49ac-49d9-be48-bcf98bf330f7",
          "restorePointReference": "/api/v1/restorePoints/e7853593-49ac-49d9-be48-bcf98bf330f7",
          "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
          "usn": 129809,
          "result": {
            "result": "Success",
            "message": "Success",
            "isCanceled": false
          },
          "progress": {
            "bottleneck": "Source",
            "duration": "00:03:39",
            "processingRate": "85 MB",
            "processedSize": 21474836480,
            "readSize": 891289600,
            "transferedSize": 354695419
          },
          "type": "Backup",
          "sessionType": "BackupJob",
          "id": "3d995992-0230-42ef-bb30-ae8da82ea24a",
          "sessionId": "54979d08-a3a2-44b7-bbfe-6703585d58a3",
          "creationTime": "2024-11-09T18:00:30.407023",
          "endTime": "2024-11-09T18:04:09.960857"
        }
      },
      "TaskSessionsFromSessionResultExample": {
        "summary": "Getting an array of task sessions from a session",
        "value": {
          "data": [
            {
              "scanType": "Yara",
              "scanResult": "Clean",
              "scanState": "Finished",
              "name": "winsrv88 [11/4/2024 5:18:45 PM]",
              "restorePointId": "56a6e3ac-2771-4fcc-8b8c-0632c708d94f",
              "restorePointReference": "/api/v1/restorePoints/56a6e3ac-2771-4fcc-8b8c-0632c708d94f",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "3464ca27-8def-4849-a69f-23f0d0d136e7",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:54:32.649649",
              "endTime": "2024-11-11T13:14:33.796154"
            },
            {
              "scanType": "Yara",
              "scanResult": "Inconclusive",
              "scanState": "Finished",
              "name": "winsrv88 [11/4/2024 5:18:45 PM]",
              "restorePointId": "56a6e3ac-2771-4fcc-8b8c-0632c708d94f",
              "restorePointReference": "/api/v1/restorePoints/56a6e3ac-2771-4fcc-8b8c-0632c708d94f",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "71c3d117-e772-4b2e-be5e-eb2d9933bbea",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:54:32.649649",
              "endTime": "2024-11-11T13:14:33.796154"
            },
            {
              "scanType": "Yara",
              "scanResult": "Clean",
              "scanState": "Finished",
              "name": "winsrv88 [11/4/2024 5:18:45 PM]",
              "restorePointId": "56a6e3ac-2771-4fcc-8b8c-0632c708d94f",
              "restorePointReference": "/api/v1/restorePoints/56a6e3ac-2771-4fcc-8b8c-0632c708d94f",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "93c751b3-4aa8-4032-a8a3-22d8affdf821",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:54:32.649649",
              "endTime": "2024-11-11T13:14:33.796154"
            },
            {
              "scanType": "Yara",
              "scanResult": "Inconclusive",
              "scanState": "Finished",
              "name": "winsrv88 [11/5/2024 4:00:18 PM]",
              "restorePointId": "5d858942-8813-48f7-b5c3-5378af993665",
              "restorePointReference": "/api/v1/restorePoints/5d858942-8813-48f7-b5c3-5378af993665",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "69348ba2-d701-442b-ae24-81fe9bf7ee1f",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:44:34.607238",
              "endTime": "2024-11-11T12:54:31.961903"
            },
            {
              "scanType": "Yara",
              "scanResult": "Clean",
              "scanState": "Finished",
              "name": "winsrv88 [11/5/2024 4:00:18 PM]",
              "restorePointId": "5d858942-8813-48f7-b5c3-5378af993665",
              "restorePointReference": "/api/v1/restorePoints/5d858942-8813-48f7-b5c3-5378af993665",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "31a4cb34-77d8-4aa2-b771-4064fe09cb20",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:44:34.607238",
              "endTime": "2024-11-11T12:54:31.961903"
            },
            {
              "scanType": "Yara",
              "scanResult": "Clean",
              "scanState": "Finished",
              "name": "winsrv88 [11/5/2024 4:00:18 PM]",
              "restorePointId": "5d858942-8813-48f7-b5c3-5378af993665",
              "restorePointReference": "/api/v1/restorePoints/5d858942-8813-48f7-b5c3-5378af993665",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "dc1dd74f-ec8b-43d5-a82f-893b7407e391",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:44:34.607238",
              "endTime": "2024-11-11T12:54:31.961903"
            },
            {
              "scanType": "Yara",
              "scanResult": "Clean",
              "scanState": "Finished",
              "name": "winsrv88 [11/7/2024 4:00:20 PM]",
              "restorePointId": "ca1f1e2f-e510-43b1-bec6-9dddadf64133",
              "restorePointReference": "/api/v1/restorePoints/ca1f1e2f-e510-43b1-bec6-9dddadf64133",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "ee3f0933-9f7c-4947-a20c-dab3602fe499",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:34:51.378756",
              "endTime": "2024-11-11T12:44:33.935305"
            },
            {
              "scanType": "Yara",
              "scanResult": "Clean",
              "scanState": "Finished",
              "name": "winsrv88 [11/7/2024 4:00:20 PM]",
              "restorePointId": "ca1f1e2f-e510-43b1-bec6-9dddadf64133",
              "restorePointReference": "/api/v1/restorePoints/ca1f1e2f-e510-43b1-bec6-9dddadf64133",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "8fbd38c0-9478-435a-aa96-4455f53a4bb4",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:34:51.378756",
              "endTime": "2024-11-11T12:44:33.935305"
            },
            {
              "scanType": "Yara",
              "scanResult": "Inconclusive",
              "scanState": "Finished",
              "name": "winsrv88 [11/7/2024 4:00:20 PM]",
              "restorePointId": "ca1f1e2f-e510-43b1-bec6-9dddadf64133",
              "restorePointReference": "/api/v1/restorePoints/ca1f1e2f-e510-43b1-bec6-9dddadf64133",
              "antivirusName": "YARA",
              "type": "Antivirus",
              "sessionType": "SureBackup",
              "id": "acce4fa6-23d8-4407-b84b-055409a81ec1",
              "sessionId": "a330c612-07b2-4c3a-adbf-0007f904bbfd",
              "creationTime": "2024-11-11T12:34:51.378756",
              "endTime": "2024-11-11T12:44:33.935305"
            }
          ],
          "pagination": {
            "total": 9,
            "count": 9,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "TaskSessionsResultExample": {
        "summary": "Getting an array of task sessions",
        "value": {
          "data": [
            {
              "algorithm": "None",
              "state": "Stopped",
              "name": "winsrv88:/C:\\shares\\nfs_share",
              "restorePointId": null,
              "restorePointReference": null,
              "repositoryId": "00000000-0000-0000-0000-000000000000",
              "usn": 173280,
              "result": {
                "result": "Success",
                "message": "Success",
                "isCanceled": false
              },
              "progress": {
                "bottleneck": "Proxy",
                "duration": "00:00:23",
                "processingRate": "N/A",
                "processedSize": 9578192,
                "readSize": 0,
                "transferedSize": 0
              },
              "type": "Backup",
              "sessionType": "BackupJob",
              "id": "692f6be5-b2cb-46fc-a6d2-ae767597c009",
              "sessionId": "0bb85caf-5e80-41c4-908d-2b43608b78a3",
              "creationTime": "2024-11-13T22:00:49.893878",
              "endTime": "2024-11-13T22:01:13.613709"
            },
            {
              "algorithm": "Increment",
              "state": "Stopped",
              "name": "linbase01",
              "restorePointId": "d5c059d9-336b-491e-b07e-89f717eaa4af",
              "restorePointReference": "/api/v1/restorePoints/d5c059d9-336b-491e-b07e-89f717eaa4af",
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "usn": 171783,
              "result": {
                "result": "Success",
                "message": "Success",
                "isCanceled": false
              },
              "progress": {
                "bottleneck": "Source",
                "duration": "00:01:17",
                "processingRate": "53.7 MB",
                "processedSize": 21474836480,
                "readSize": 881852416,
                "transferedSize": 343923660
              },
              "type": "Backup",
              "sessionType": "BackupJob",
              "id": "8bec8b2d-11e8-45e1-b7be-a932376a0de4",
              "sessionId": "9811fb69-b436-4198-b848-fb6eb42fba03",
              "creationTime": "2024-11-13T18:00:45.528604",
              "endTime": "2024-11-13T18:02:02.865537"
            },
            {
              "algorithm": "Increment",
              "state": "Stopped",
              "name": "winsrv88",
              "restorePointId": "59a6a818-98c5-40a2-abb3-b72b1ec4e00f",
              "restorePointReference": "/api/v1/restorePoints/59a6a818-98c5-40a2-abb3-b72b1ec4e00f",
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "usn": 170927,
              "result": {
                "result": "Success",
                "message": "Success",
                "isCanceled": false
              },
              "progress": {
                "bottleneck": "Source",
                "duration": "00:02:17",
                "processingRate": "79 MB",
                "processedSize": 150323855360,
                "readSize": 3495952384,
                "transferedSize": 1274388985
              },
              "type": "Backup",
              "sessionType": "BackupJob",
              "id": "d9509517-f5a3-4697-8164-71f1572ae0c6",
              "sessionId": "206e9bc7-86c3-40a4-91cd-0f3436cec21b",
              "creationTime": "2024-11-13T16:00:42.080574",
              "endTime": "2024-11-13T16:02:59.266609"
            },
            {
              "algorithm": "None",
              "state": "Stopped",
              "name": "winsrv88:/C:\\shares\\nfs_share",
              "restorePointId": null,
              "restorePointReference": null,
              "repositoryId": "00000000-0000-0000-0000-000000000000",
              "usn": 164795,
              "result": {
                "result": "Success",
                "message": "Success",
                "isCanceled": false
              },
              "progress": {
                "bottleneck": "Proxy",
                "duration": "00:00:16",
                "processingRate": "N/A",
                "processedSize": 9578192,
                "readSize": 0,
                "transferedSize": 0
              },
              "type": "Backup",
              "sessionType": "BackupJob",
              "id": "9e1f5ee9-02ec-48cf-a5bb-2b92c7013d91",
              "sessionId": "3779ebf8-4bbf-49af-b3ea-9fd2d5dc0689",
              "creationTime": "2024-11-12T22:00:37.218594",
              "endTime": "2024-11-12T22:00:53.438072"
            },
            {
              "algorithm": "Increment",
              "state": "Stopped",
              "name": "linbase01",
              "restorePointId": "170bcae5-f2c4-4547-972e-15349aa04609",
              "restorePointReference": "/api/v1/restorePoints/170bcae5-f2c4-4547-972e-15349aa04609",
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "usn": 163251,
              "result": {
                "result": "Success",
                "message": "Success",
                "isCanceled": false
              },
              "progress": {
                "bottleneck": "Source",
                "duration": "00:01:06",
                "processingRate": "95.5 MB",
                "processedSize": 21474836480,
                "readSize": 1001390080,
                "transferedSize": 413068918
              },
              "type": "Backup",
              "sessionType": "BackupJob",
              "id": "cbede369-c316-4e33-bc9d-e0897f27f93d",
              "sessionId": "45e729e8-a905-4850-9e7c-8ee8f8df7695",
              "creationTime": "2024-11-12T18:00:29.437419",
              "endTime": "2024-11-12T18:01:35.94032"
            },
            {
              "algorithm": "Increment",
              "state": "Stopped",
              "name": "winsrv88",
              "restorePointId": "807f0ca2-c2c0-46ae-b759-df510585459d",
              "restorePointReference": "/api/v1/restorePoints/807f0ca2-c2c0-46ae-b759-df510585459d",
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
              "usn": 162437,
              "result": {
                "result": "Success",
                "message": "Success",
                "isCanceled": false
              },
              "progress": {
                "bottleneck": "Source",
                "duration": "00:02:10",
                "processingRate": "141.9 MB",
                "processedSize": 150323855360,
                "readSize": 4255121408,
                "transferedSize": 548362853
              },
              "type": "Backup",
              "sessionType": "BackupJob",
              "id": "7dff932c-df5b-41b2-9955-7baf2ed08e57",
              "sessionId": "22babeec-9df0-41ef-b9fd-0d10c667a486",
              "creationTime": "2024-11-12T16:00:35.98907",
              "endTime": "2024-11-12T16:02:46.082522"
            }
          ],
          "pagination": {
            "total": 52,
            "count": 6,
            "skip": 0,
            "limit": 6
          }
        }
      },
      "TokenModelExample": {
        "summary": "Access and refresh tokens",
        "value": {
          "access_token": "eyJhbGciOiJSUzUxMiIsImtpZCI6IjRFOTE2QjIwMTkzMENEOUFFNDRDMjAwMTlGODdGMkE0RUYyMjczMDMiLCJ0eXAiOiJKV1QifQ.eyJ1bmlxdWVfbmFtZSI6InNoZWlsYS5kLmNvcnkiLCJuYmYiOjE2NDMwMzA2NTgsImV4cCI6MTY0MzAzMTU1OCwiaWF0IjoxNjQzMDMwNjU4LCJhdWQiOiJhY2Nlc3MifQ.PYyLnd-AGcQDiMN6RibL_3D-IzngzGqM0Du0huiEbswyqB9JATF3PJvPPKQn1H27xYEiznDyhAnbs9qZNNXlK0E7yRZbifUat16C1XDCvKFXAkije_44xakcUf5aUeU5YVRyjHa-hTRTkwISj9lBCNf_WdpttkK2stgyRCafrj057ATgUyru6o5gZhTYIS4cioAXmhvLvB7Qrn4X080DHH0-KqYeSQwnQASi1HDuogfkEmxyu8380fbGJiyK4eKGLJ2hmq5DsMmL0BSSzIvUiifLPS5_Ei4-9EOFOv3RlLmk6eQNefaLrkRSsV7QSgGZDLc98zIBlD2yrUccx2cj9A",
          "token_type": "bearer",
          "refresh_token": "eyJhbGciOiJSUzUxMiIsImtpZCI6IjRFOTE2QjIwMTkzMENEOUFFNDRDMjAwMTlGODdGMkE0RUYyMjczMDMiLCJ0eXAiOiJKV1QifQ.eyJ1bmlxdWVfbmFtZSI6InNoZWlsYS5kLmNvcnkiLCJ0b2tlbl9pZCI6IjEwNTA4YWUyLTk0YzctNGRkNi04YzEyLWZjNGY1NDQ1MzM0YSIsInNob3J0X3Rlcm1fZXhwaXJhdGlvbiI6IkZhbHNlIiwibmJmIjoxNjQzMDMwNjU5LCJleHAiOjE2NDQyNDAyNTksImlhdCI6MTY0MzAzMDY1OSwiYXVkIjoicmVmcmVzaCJ9.RXx9xPlpoUuRwO7sTkBTXntpc3vixXc2kgfCPfRcpePdzOGbLqn64c1hCHTGgXPKgZ4ogEY58N2D3xUPd6spAdfbOkF_XwjEEDpxf03rl7LYMo-OXQ0PxVtUCJK3_o6Dfah0YV6IYu5yctvd-_1MKaac7vV5Zl87qhlF8w4e7LT0QPD_Vhp2JUoD3dSTvYw9WvNDqaRotYfaWj05yTB3PArVwSiPDg1oZXSLxROmDDtKf5FFqSgOdp4LxJmD6sYlv_2FQqG-tNwPqRyzKIaqiDDQXBR9MVmFHBl9iUcYOqvX9ZlCa7oPP_txjopks-NcpdyPkSH74hvoeOs3hujW8w",
          "expires_in": 900,
          ".issued": "2023-04-24T14:24:18+01:00",
          ".expires": "2023-04-24T14:39:18+01:00"
        }
      },
      "UndoFailoverSessionsResultExample": {
        "summary": "Array of UndoFailover sessions",
        "value": {
          "data": [
            {
              "sessionType": "UndoFailover",
              "state": "Starting",
              "id": "18b8c253-8061-4178-bda2-1962fbbbc2d1",
              "name": "apache04",
              "activityId": "b57abdb8-8a18-4b3c-8703-6be064b6608f",
              "creationTime": "2023-10-31T15:27:25.999766+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            },
            {
              "sessionType": "UndoFailover",
              "state": "Starting",
              "id": "6f954027-e2ac-4c22-8dec-8fbc2135c67e",
              "name": "apache04",
              "activityId": "e66947d0-0a9c-464c-9fe6-0b7fda5838cf",
              "creationTime": "2023-10-31T15:27:26.06213+01:00",
              "endTime": null,
              "progressPercent": 0,
              "result": null,
              "resourceId": null,
              "resourceReference": null,
              "parentSessionId": null,
              "usn": 0
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": null,
            "limit": null
          }
        }
      },
      "VCenterInventoryResultExample": {
        "summary": "Array of VMware vSphere objects",
        "value": {
          "data": [
            {
              "inventoryObject": {
                "type": "Datacenter",
                "hostName": "vcenter01.tech.local",
                "name": "Prague",
                "objectId": "datacenter-42371"
              },
              "size": "N/A"
            },
            {
              "inventoryObject": {
                "type": "Folder",
                "hostName": "vcenter01.tech.local",
                "name": "Templates",
                "objectId": "group-h42373"
              },
              "size": "N/A"
            },
            {
              "inventoryObject": {
                "type": "Host",
                "hostName": "vcenter01.tech.local",
                "name": "esx03.tech.local",
                "objectId": "host-42428"
              },
              "size": "N/A"
            },
            {
              "inventoryObject": {
                "type": "ResourcePool",
                "hostName": "vcenter01.tech.local",
                "name": "Services",
                "objectId": "resgroup-65867"
              },
              "size": "N/A"
            },
            {
              "inventoryObject": {
                "type": "VirtualMachine",
                "hostName": "vcenter01.tech.local",
                "name": "winsrv01",
                "objectId": "vm-62230"
              },
              "size": "220 GB"
            }
          ],
          "pagination": {
            "total": 5,
            "count": 5,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "ViRootsResultExample": {
        "summary": "Array of VMware vSphere servers",
        "value": {
          "data": [
            {
              "inventoryObject": {
                "type": "vCenterServer",
                "hostName": "vcenter01.tech01.local",
                "name": "vcenter01.tech01.local",
                "objectId": "d766a026-a7a7-4d6e-add0-9599a291394f"
              },
              "size": "N/A"
            },
            {
              "inventoryObject": {
                "type": "vCenterServer",
                "hostName": "vcenter02.tech02.local",
                "name": "vcenter02.tech02.local",
                "objectId": "bd49ae5e-d5ec-4013-8ffa-c91beadce052"
              },
              "size": "N/A"
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "ViVMQuickMigrationSpecExample": {
        "summary": "Starting VM migration",
        "value": {
          "destinationHost": {
            "type": "Host",
            "hostName": "vcenter01.tech.local",
            "name": "prgtwesx01.tech.local",
            "objectId": "host-1008",
            "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008",
            "platform": "VMware",
            "size": "N/A"
          },
          "folder": {
            "type": "Folder",
            "hostName": "vcenter01.tech.local",
            "name": "Enterprise",
            "objectId": "group-v2046",
            "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-v1002;folder:group-v2004;folder:group-v2046",
            "platform": "VMware",
            "size": "N/A"
          },
          "resourcePool": {
            "type": "ResourcePool",
            "hostName": "vcenter01.tech.local",
            "name": "Enterprise",
            "objectId": "resgroup-1023",
            "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008;resourcepool:resgroup-1023",
            "platform": "VMware",
            "size": "N/A"
          },
          "datastore": {
            "type": "Datastore",
            "hostName": "vcenter01.tech.local",
            "name": "prgtwesx01-ds01",
            "objectId": "datastore-4686",
            "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;datastore:datastore-4686",
            "platform": "VMware",
            "size": "21.8 TB"
          },
          "sourceProxyIds": [
            "2e0bf225-91b3-4005-8524-6f7971e9ac4f",
            "6745a759-2205-4cd2-b172-8ec8f7e60ef8"
          ],
          "targetProxyIds": [
            "83ba3602-158f-45cd-affc-0885c10b84fc",
            "3c5557b1-71e8-4508-8dce-4e743b294ef5"
          ],
          "VeeamQMEnabled": true,
          "DeleteSourceVmsFiles": false
        }
      },
      "ViVMSnapshotReplicaFailoverSpecExample": {
        "summary": "Starting failover",
        "value": {
          "replicaPointIds": [
            "c8435ccb-5ecf-4fa5-b429-f703b9a37bef",
            "e67070c7-7116-4c57-a90e-12be7f0a94f1"
          ]
        }
      },
      "vSphereBackupJobModelExample": {
        "summary": "VMware vSphere backup job",
        "value": {
          "isHighPriority": false,
          "virtualMachines": {
            "includes": [
              {
                "inventoryObject": {
                  "type": "VirtualMachine",
                  "hostName": "172.17.52.34",
                  "name": "srv45",
                  "objectId": "vm-61281"
                },
                "size": "152.5 GB"
              }
            ],
            "excludes": {
              "vms": [],
              "disks": [
                {
                  "disksToProcess": "AllDisks",
                  "vmObject": {
                    "type": "VirtualMachine",
                    "hostName": "172.17.52.34",
                    "name": "srv45",
                    "objectId": "vm-61281"
                  },
                  "disks": [],
                  "removeFromVMConfiguration": true
                }
              ],
              "templates": {
                "isEnabled": true,
                "excludeFromIncremental": true
              }
            }
          },
          "storage": {
            "backupRepositoryId": "49607f55-4cc4-4ea5-a2c9-e750318d0f34",
            "backupProxies": {
              "autoSelectEnabled": true,
              "proxyIds": []
            },
            "retentionPolicy": {
              "type": "RestorePoints",
              "quantity": 7
            },
            "gfsPolicy": {
              "isEnabled": false,
              "weekly": {
                "desiredTime": "sunday",
                "isEnabled": false,
                "keepForNumberOfWeeks": 1
              },
              "monthly": {
                "desiredTime": "First",
                "isEnabled": false,
                "keepForNumberOfMonths": 1
              },
              "yearly": {
                "desiredTime": "January",
                "isEnabled": false,
                "keepForNumberOfYears": 1
              }
            },
            "advancedSettings": {
              "backupModeType": "Incremental",
              "synthenticFulls": {
                "isEnabled": false,
                "days": [
                  "saturday"
                ]
              },
              "activeFulls": {
                "isEnabled": false,
                "weekly": {
                  "isEnabled": true,
                  "days": [
                    "saturday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "monday",
                  "dayNumberInMonth": "First",
                  "isEnabled": false,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "backupHealth": {
                "isEnabled": false,
                "weekly": {
                  "isEnabled": false,
                  "days": [
                    "friday"
                  ]
                },
                "monthly": {
                  "dayOfWeek": "friday",
                  "dayNumberInMonth": "Last",
                  "isEnabled": true,
                  "dayOfMonths": 1,
                  "months": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                }
              },
              "fullBackupMaintenance": {
                "RemoveData": {
                  "isEnabled": false,
                  "afterDays": 14
                },
                "defragmentAndCompact": {
                  "isEnabled": false,
                  "weekly": {
                    "isEnabled": false,
                    "days": [
                      "saturday"
                    ]
                  },
                  "monthly": {
                    "dayOfWeek": "saturday",
                    "dayNumberInMonth": "Last",
                    "isEnabled": true,
                    "dayOfMonths": 1,
                    "months": [
                      "January",
                      "February",
                      "March",
                      "April",
                      "May",
                      "June",
                      "July",
                      "August",
                      "September",
                      "October",
                      "November",
                      "December"
                    ]
                  }
                }
              },
              "storageData": {
                "compressionLevel": "Optimal",
                "storageOptimization": "LocalTarget",
                "inlineDataDedupEnabled": true,
                "excludeSwapFileBlocks": true,
                "excludeDeletedFileBlocks": true,
                "encryption": {
                  "isEnabled": false,
                  "encryptionPasswordId": "00000000-0000-0000-0000-000000000000",
                  "encryptionPasswordUniqueId": null
                }
              },
              "notifications": {
                "sendSNMPNotifications": false,
                "emailNotifications": {
                  "notificationType": null,
                  "isEnabled": false,
                  "recipients": [],
                  "customNotificationSettings": null
                },
                "vmAttribute": {
                  "isEnabled": false,
                  "notes": "Notes",
                  "appendToExistingValue": true
                }
              },
              "vSphere": {
                "enableVMWareToolsQuiescence": false,
                "changedBlockTracking": {
                  "isEnabled": true,
                  "enableCBTautomatically": true,
                  "resetCBTonActiveFull": true
                }
              },
              "storageIntegration": {
                "isEnabled": true,
                "processedVmsLimitEnabled": false,
                "processedVmsCount": 10,
                "failoverToStandardBackup": false
              },
              "scripts": {
                "periodicityType": "BackupSessions",
                "preCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "postCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "runScriptEvery": 1,
                "dayOfWeek": [
                  "saturday"
                ]
              }
            }
          },
          "guestProcessing": {
            "appAwareProcessing": {
              "isEnabled": true,
              "appSettings": [
                {
                  "vss": "requireSuccess",
                  "transactionLogs": "process",
                  "vmObject": {
                    "type": "VirtualMachine",
                    "hostName": "172.17.52.34",
                    "name": "srv45",
                    "objectId": "vm-61281"
                  },
                  "usePersistentGuestAgent": false,
                  "sql": {
                    "logsProcessing": "truncate",
                    "retainLogBackups": null,
                    "backupMinsCount": null,
                    "keepDaysCount": null,
                    "logShippingServers": null
                  },
                  "oracle": {
                    "archiveLogs": "preserve",
                    "retainLogBackups": "untilBackupDeleted",
                    "useGuestCredentials": true,
                    "credentialsId": null,
                    "deleteHoursCount": null,
                    "deleteGBsCount": null,
                    "backupLogs": true,
                    "backupMinsCount": 15,
                    "keepDaysCount": 15,
                    "logShippingServers": {
                      "autoSelection": true,
                      "shippingServerIds": []
                    }
                  },
                  "exclusions": {
                    "exclusionPolicy": "disabled",
                    "itemsList": []
                  },
                  "scripts": {
                    "scriptProcessingMode": "disableExec",
                    "windowsScripts": null,
                    "linuxScripts": null
                  }
                }
              ]
            },
            "guestFSIndexing": {
              "isEnabled": false,
              "indexingSettings": []
            },
            "guestInteractionProxies": {
              "autoSelectEnabled": true,
              "proxyIds": []
            },
            "guestCredentials": {
              "credentialsType": "Standard",
              "credentialsId": "6454c893-d5c6-4de8-be38-d984ea30dae4",
              "credentialsPerMachine": []
            }
          },
          "schedule": {
            "runAutomatically": true,
            "daily": {
              "dailyKind": "Everyday",
              "isEnabled": true,
              "localTime": "4:00",
              "days": [
                "sunday",
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "9:00",
              "dayOfMonth": 1,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 1,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              },
              "startTimeWithinAnHour": 0
            },
            "continuously": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            },
            "afterThisJob": {
              "isEnabled": false,
              "jobName": null
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            }
          },
          "type": "Backup",
          "id": "75fc491a-d158-4380-a433-ebc42a28e4df",
          "name": "Oracle Backup",
          "description": "Created by GAMMA\\Administrator",
          "isDisabled": false
        }
      },
      "vSphereReplicaJobModelExample": {
        "summary": "VMware vSphere replication job",
        "value": {
          "isHighPriority": true,
          "virtualMachines": {
            "includes": [
              {
                "type": "VirtualMachine",
                "hostName": "vcenter01.tech.local",
                "name": "winsp01",
                "objectId": "vm-11864",
                "urn": null,
                "platform": "VMware",
                "size": "60.2 GB"
              }
            ],
            "excludes": {
              "vms": [],
              "disks": [
                {
                  "disksToProcess": "AllDisks",
                  "vmObject": {
                    "type": "VirtualMachine",
                    "hostName": "vcenter01.tech.local",
                    "name": "winsp01",
                    "objectId": "vm-11864",
                    "urn": null,
                    "platform": "VMware",
                    "size": "60.2 GB"
                  },
                  "disks": [],
                  "removeFromVMConfiguration": true
                }
              ]
            },
            "sourceRepositories": {
              "sourceType": "BackupFiles",
              "repositoryIds": [
                "3c5557b1-71e8-4508-8dce-4e743b294ef5",
                "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
              ]
            }
          },
          "destination": {
            "host": {
              "type": "Host",
              "hostName": "vcenter01.tech.local",
              "name": "prgtwesx01.tech.local",
              "objectId": "host-1008",
              "urn": null,
              "platform": "VMware",
              "size": "N/A"
            },
            "resourcePool": {
              "type": "ResourcePool",
              "hostName": "vcenter01.tech.local",
              "name": "Recovered VMs",
              "objectId": "resgroup-1024",
              "urn": null,
              "platform": "VMware",
              "size": "N/A"
            },
            "folder": {
              "type": "Folder",
              "hostName": "vcenter01.tech.local",
              "name": "vm",
              "objectId": "group-v1002",
              "urn": null,
              "platform": "VMware",
              "size": "N/A"
            },
            "datastore": {
              "type": "Datastore",
              "hostName": "vcenter01.tech.local",
              "name": "prgtwesx01-ds01",
              "objectId": "datastore-4686",
              "urn": null,
              "platform": "VMware",
              "size": "N/A"
            },
            "mapping": []
          },
          "network": [],
          "reIp": {
            "rules": []
          },
          "jobSettings": {
            "metadataRepositoryId": "3c5557b1-71e8-4508-8dce-4e743b294ef5",
            "replicaNameSuffix": "_replica",
            "restorePointsToKeep": 7,
            "advancedSettings": {
              "traffic": {
                "compressionLevel": "Optimal",
                "storageOptimization": "LANTarget",
                "excludeSwapFileBlocks": true,
                "excludeDeletedFileBlocks": true
              },
              "notifications": {
                "sendSNMPNotifications": false,
                "emailNotifications": {
                  "notificationType": null,
                  "isEnabled": false,
                  "recipients": [],
                  "customNotificationSettings": null
                }
              },
              "vSphere": {
                "enableVMWareToolsQuiescence": false,
                "changedBlockTracking": {
                  "isEnabled": true,
                  "enableCBTautomatically": true,
                  "resetCBTonActiveFull": true
                }
              },
              "integration": {
                "isEnabled": true,
                "limitProcessedVm": false,
                "limitProcessedVmCount": 10,
                "failoverToStandardBackup": false
              },
              "scripts": {
                "periodicityType": "BackupSessions",
                "preCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "postCommand": {
                  "isEnabled": false,
                  "command": ""
                },
                "runScriptEvery": 1,
                "dayOfWeek": [
                  "saturday"
                ]
              }
            }
          },
          "dataTransfer": {
            "sourceProxies": {
              "autoSelection": true,
              "proxyIds": []
            },
            "targetProxies": {
              "autoSelection": true,
              "proxyIds": []
            },
            "wanAcceleratorSettings": {
              "transferMode": "Direct",
              "sourceWANAcceleratorId": null,
              "targetWANAcceleratorId": null
            }
          },
          "seeding": {
            "initialSeeding": {
              "isEnabled": true,
              "repositoryId": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
            },
            "replicaMapping": {
              "isEnabled": false,
              "replicaMappings": []
            }
          },
          "guestProcessing": {
            "appAwareProcessing": {
              "isEnabled": false,
              "appSettings": []
            },
            "guestInteractionProxies": {
              "autoSelection": true,
              "proxyIds": []
            },
            "guestCredentials": {
              "credsType": "Linux",
              "credsId": "00000000-0000-0000-0000-000000000000",
              "credentialsPerMachine": []
            }
          },
          "schedule": {
            "runAutomatically": true,
            "daily": {
              "dailyKind": "SelectedDays",
              "isEnabled": true,
              "localTime": "20:00",
              "days": [
                "monday",
                "wednesday",
                "friday"
              ]
            },
            "monthly": {
              "dayOfWeek": "saturday",
              "dayNumberInMonth": "Fourth",
              "isEnabled": false,
              "localTime": "22:00",
              "dayOfMonth": 0,
              "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
              ]
            },
            "periodically": {
              "periodicallyKind": "Hours",
              "isEnabled": false,
              "frequency": 1,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              },
              "startTimeWithinAnHour": 0
            },
            "continuously": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            },
            "afterThisJob": {
              "isEnabled": false,
              "jobName": null
            },
            "retry": {
              "isEnabled": true,
              "retryCount": 3,
              "awaitMinutes": 10
            },
            "backupWindow": {
              "isEnabled": false,
              "backupWindow": {
                "days": [
                  {
                    "day": "sunday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "monday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "tuesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "wednesday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "thursday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "friday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  },
                  {
                    "day": "saturday",
                    "hours": "1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
                  }
                ]
              }
            }
          },
          "type": "VSphereReplica",
          "id": "786aa212-0ae5-4b8b-ba60-24875597a032",
          "name": "SharePoint Replication",
          "description": "Created by TECH\\sheila.d.cory",
          "isDisabled": false
        }
      },
      "WANAcceleratorModelExample": {
        "summary": "WAN accelerator",
        "value": {
          "id": "d8ecb099-ca8e-4cd3-b12f-10f36508942b",
          "name": "enterprise03.tech.local",
          "server": {
            "hostId": "b29b8591-bf31-4174-b69b-25ac296a20b2",
            "description": "Created by TECH\\sheila.d.cory",
            "trafficPort": 6165,
            "streamsCount": 5,
            "highBandwidthModeEnabled": true
          },
          "cache": {
            "cacheSizeUnit": "GB",
            "cacheFolder": "C:\\VeeamWAN",
            "cacheSize": 100
          }
        }
      },
      "WANAcceleratorsResultExample": {
        "summary": "Array of WAN accelerators",
        "value": {
          "data": [
            {
              "id": "d8ecb099-ca8e-4cd3-b12f-10f36508942b",
              "name": "enterprise03.tech.local",
              "server": {
                "hostId": "b29b8591-bf31-4174-b69b-25ac296a20b2",
                "description": "Created by TECH\\sheila.d.cory",
                "trafficPort": 6165,
                "streamsCount": 5,
                "highBandwidthModeEnabled": true
              },
              "cache": {
                "cacheSizeUnit": "GB",
                "cacheFolder": "C:\\VeeamWAN",
                "cacheSize": 100
              }
            },
            {
              "id": "bbd849d3-226e-470c-804c-fdd2b09da683",
              "name": "enterprise05.tech.local",
              "server": {
                "hostId": "612af0b0-ce61-4315-a82c-b056669e48ae",
                "description": "Created by TECH\\sheila.d.cory",
                "trafficPort": 6165,
                "streamsCount": 5,
                "highBandwidthModeEnabled": false
              },
              "cache": {
                "cacheSizeUnit": "GB",
                "cacheFolder": "C:\\VeeamWAN",
                "cacheSize": 50
              }
            }
          ],
          "pagination": {
            "total": 2,
            "count": 2,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "WindowsFlrBrowseFolderModelExample": {
        "summary": "Microsoft Windows items",
        "value": {
          "path": "C:\\Users",
          "items": [
            {
              "type": "File",
              "itemState": "NotAvaliable",
              "location": "C:\\Users",
              "name": "desktop.ini",
              "size": 174,
              "creationDate": "2023-09-15T09:16:48.5540496+02:00",
              "modifiedDate": "2023-09-15T09:16:48.5540496+02:00"
            },
            {
              "type": "Folder",
              "itemState": "NotAvaliable",
              "location": "C:\\Users",
              "name": "Public",
              "size": 0,
              "creationDate": "2023-09-15T09:19:00.9562431+02:00",
              "modifiedDate": "2024-07-11T13:51:19.2515441+02:00"
            },
            {
              "type": "Folder",
              "itemState": "NotAvaliable",
              "location": "C:\\Users",
              "name": "sheila.d.cory",
              "size": 0,
              "creationDate": "2023-07-25T20:31:51.6184821+02:00",
              "modifiedDate": "2023-07-27T18:19:45.0120786+02:00"
            }
          ],
          "pagination": {
            "total": 3,
            "count": 3,
            "skip": 0,
            "limit": 200
          }
        }
      },
      "WindowsFlrBrowseMountModelExample": {
        "summary": "File restore mount point for a Microsoft Windows machine",
        "value": {
          "type": "Windows",
          "sessionId": "f031db1c-8294-4ace-b6f1-bb7e299e9e53",
          "properties": {
            "pathSeparator": "\\"
          },
          "sourceProperties": {
            "machineName": "winsp01",
            "restorePointName": "winsp01"
          }
        }
      },
      "WindowsFlrMountSpecExample": {
        "summary": "Starting file restore of a Microsoft Windows machine",
        "value": {
          "restorePointId": "c0940fba-7c6e-445e-bea3-c0fa20e9ef15",
          "type": "Windows",
          "autoUnmount": {
            "isEnabled": true,
            "noActivityPeriodInMinutes": 10
          },
          "reason": "File restore",
          "credentialsId": "0c1f0ea4-a3a9-419d-a2a9-2145ef5e0470"
        }
      },
      "WindowsFlrRestoreSpecExample": {
        "summary": "Restoring files and folders to the original location for a Microsoft Windows machine",
        "value": {
          "sourcePath": [
            "C:\\Users\\sheila.d.cory\\Documents",
            "C:\\Users\\sheila.d.cory\\Downloads"
          ],
          "restoreType": "Keep"
        }
      },
      "WindowsFlrRestoreToSpecExample": {
        "summary": "Restoring files and folders to another location for a Microsoft Windows machine",
        "value": {
          "sourcePath": [
            "C:\\Users\\sheila.d.cory\\Documents"
          ],
          "restoreType": "Overwrite",
          "credentialsId": "c0940fba-7c6e-445e-bea3-c0fa20e9ef15",
          "targetHost": {
            "type": "VMware",
            "vmObject": {
              "type": "VirtualMachine",
              "hostName": "vcenter01.tech.local",
              "name": "enterprise03",
              "objectId": "vm-1086",
              "urn": "vc:vcenter01.tech.local;folder:group-d1;datacenter:datacenter-1001;folder:group-h1003;computeresource:domain-s1006;hostsystem:host-1008;resourcepool:resgroup-1023;virtualmachine:vm-1086",
              "platform": "VMware",
              "size": "337.6 GB"
            }
          },
          "targetPath": "C:\\temp"
        }
      },
      "WindowsFolderFlrBrowseFolderSpecExample": {
        "summary": "Browsing changed folders in a spesific folder on a Microsoft Windows machine",
        "value": {
          "path": "C:\\Users",
          "filter": {
            "itemStates": [
              "Changed"
            ],
            "itemTypes": [
              "Folder",
              "File"
            ]
          },
          "order": {
            "orderColumn": "Name",
            "orderAsc": true
          },
          "pagination": {
            "skip": 0,
            "limit": 0
          }
        }
      },
      "WindowsManagedServerModelExample": {
        "summary": "Microsoft Windows host",
        "value": {
          "networkSettings": {
            "components": [
              {
                "componentName": "DeployerSvc",
                "port": 6160
              },
              {
                "componentName": "Transport",
                "port": 6162
              },
              {
                "componentName": "Nfs",
                "port": 6161
              },
              {
                "componentName": "RestoreProxy",
                "port": 6170
              },
              {
                "componentName": "WanAccelerator",
                "port": 6164
              },
              {
                "componentName": "Tape",
                "port": 6166
              },
              {
                "componentName": "CloudGate",
                "port": 6168
              },
              {
                "componentName": "AgentConfigureService",
                "port": 9380
              },
              {
                "componentName": "FileSystemVssIntegration",
                "port": 6210
              },
              {
                "componentName": "VssHwSnapshotProvider",
                "port": 6211
              }
            ],
            "portRangeStart": 2500,
            "portRangeEnd": 3300,
            "serverSide": false
          },
          "type": "WindowsHost",
          "id": "fc5683a4-8c25-4f8e-97cc-0a40745a5729",
          "name": "enterprise05.tech.local",
          "description": "Backup repository",
          "credentialsId": "97d00492-92b7-4929-9e11-68eaa63b88e3"
        }
      },
      "WinLocalRepositoryModelExample": {
        "summary": "Microsoft Windows-based repository",
        "value": {
          "hostId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
          "repository": {
            "path": "C:\\Backup",
            "taskLimitEnabled": true,
            "maxTaskCount": 4,
            "readWriteLimitEnabled": true,
            "readWriteRate": 0,
            "advancedSettings": {
              "RotatedDriveCleanupMode": "Disabled",
              "alignDataBlocks": true,
              "decompressBeforeStoring": false,
              "rotatedDrives": false,
              "perVmBackup": true
            }
          },
          "mountServer": {
            "mountServerId": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
            "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache\\",
            "vPowerNFSEnabled": true,
            "vPowerNFSPortSettings": {
              "vPowerNFSPort": 2049,
              "mountPort": 1058
            }
          },
          "type": "WinLocal",
          "id": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
          "name": "Default Backup Repository",
          "description": "Created by Veeam Backup",
          "uniqueId": "88788F9ED8F54EB4BC4F9B3F5403BCEC"
        }
      },
      "WinLocalRepositorySpecExample": {
        "summary": "Creating a Microsoft Windows-based repository",
        "value": {
          "hostId": "565e7001-edf0-4724-8191-767592537016",
          "repository": {
            "path": "C:\\Backup Repository\\enterprise01",
            "taskLimitEnabled": true,
            "maxTaskCount": 4,
            "readWriteLimitEnabled": true,
            "readWriteRate": 0,
            "advancedSettings": {
              "RotatedDriveCleanupMode": "Disabled",
              "alignDataBlocks": true,
              "decompressBeforeStoring": false,
              "rotatedDrives": false,
              "perVmBackup": true
            }
          },
          "mountServer": {
            "mountServerId": "83ba3602-158f-45cd-affc-0885c10b84fc",
            "writeCacheFolder": "C:\\ProgramData\\Veeam\\Backup\\IRCache5\\",
            "vPowerNFSEnabled": true,
            "vPowerNFSPortSettings": {
              "mountPort": 1063,
              "vPowerNFSPort": 2049
            }
          },
          "type": "WinLocal",
          "name": "Backup Repository 5",
          "description": "Repository on enterprise05",
          "uniqueId": "565e7001-edf0-4724-8191-767592537016"
        }
      },
      "YaraRulesResultExample": {
        "summary": "Getting YARA rules",
        "value": {
          "data": [
            {
              "fileName": "FindFileByHash.yara"
            },
            {
              "fileName": "FindFileByParameters.yara"
            },
            {
              "fileName": "FindString.yara"
            }
          ],
          "pagination": {
            "total": 3,
            "count": 3,
            "skip": 0,
            "limit": 3
          }
        }
      }
    }
  }
}